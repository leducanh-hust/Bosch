ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB142:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  44:Core/Src/main.c **** CAN_HandleTypeDef hcan2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** UART_HandleTypeDef huart3;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** uint8_t uart3_receive;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  52:Core/Src/main.c **** CAN_HandleTypeDef hcan2;
  53:Core/Src/main.c **** CAN_TxHeaderTypeDef CAN1_pHeader;
  54:Core/Src/main.c **** CAN_RxHeaderTypeDef CAN1_pHeaderRx;
  55:Core/Src/main.c **** CAN_FilterTypeDef CAN1_sFilterConfig;
  56:Core/Src/main.c **** CAN_TxHeaderTypeDef CAN2_pHeader;
  57:Core/Src/main.c **** CAN_RxHeaderTypeDef CAN2_pHeaderRx;
  58:Core/Src/main.c **** CAN_FilterTypeDef CAN2_sFilterConfig;
  59:Core/Src/main.c **** uint32_t CAN1_pTxMailbox;
  60:Core/Src/main.c **** uint32_t CAN2_pTxMailbox;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** uint8_t CAN1_DATA_TX[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00};
  63:Core/Src/main.c **** uint8_t CAN1_DATA_RX[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00};
  64:Core/Src/main.c **** uint8_t CAN2_DATA_TX[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00};
  65:Core/Src/main.c **** uint8_t CAN2_DATA_RX[8] = {0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x00};
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** uint16_t NumBytesReq = 0;
  68:Core/Src/main.c **** uint8_t  REQ_BUFFER  [4096];
  69:Core/Src/main.c **** uint8_t  REQ_1BYTE_DATA;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** unsigned int TimeStamp;
  72:Core/Src/main.c **** char bufsend[30] = "XXX: D1 D2 D3 D4 D5 D6 D7 D8  ";
  73:Core/Src/main.c **** /* USER CODE END PV */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  76:Core/Src/main.c **** void SystemClock_Config(void);
  77:Core/Src/main.c **** static void MX_GPIO_Init(void);
  78:Core/Src/main.c **** static void MX_CAN1_Init(void);
  79:Core/Src/main.c **** static void MX_CAN2_Init(void);
  80:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  81:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  82:Core/Src/main.c **** void USART3_SendString(char* ch);
  83:Core/Src/main.c **** void PrintCANLog(uint16_t CANID, uint8_t *CAN_Frame);
  84:Core/Src/main.c **** uint8_t calc_crc(uint8_t *data, uint8_t crc_len);
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** void MX_CAN1_Setup();
  87:Core/Src/main.c **** void MX_CAN2_Setup();
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 3


  89:Core/Src/main.c **** /* USER CODE END PFP */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  92:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* USER CODE END 0 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /**
  97:Core/Src/main.c ****   * @brief  The application entry point.
  98:Core/Src/main.c ****   * @retval int
  99:Core/Src/main.c ****   */
 100:Core/Src/main.c **** int main(void)
 101:Core/Src/main.c **** {
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END 1 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 110:Core/Src/main.c ****   HAL_Init();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END Init */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Configure the system clock */
 117:Core/Src/main.c ****   SystemClock_Config();
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE END SysInit */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Initialize all configured peripherals */
 124:Core/Src/main.c ****   MX_GPIO_Init();
 125:Core/Src/main.c ****   MX_CAN1_Init();
 126:Core/Src/main.c ****   MX_CAN2_Init();
 127:Core/Src/main.c ****   MX_USART3_UART_Init();
 128:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 129:Core/Src/main.c ****   MX_CAN1_Setup();
 130:Core/Src/main.c ****   MX_CAN2_Setup();
 131:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart3, UART_IT_RXNE);
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE END 2 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Infinite loop */
 136:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 137:Core/Src/main.c ****   while (1)
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     /* USER CODE END WHILE */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c ****   /* USER CODE END 3 */
 144:Core/Src/main.c **** }
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 4


 146:Core/Src/main.c **** /**
 147:Core/Src/main.c ****   * @brief System Clock Configuration
 148:Core/Src/main.c ****   * @retval None
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c **** void SystemClock_Config(void)
 151:Core/Src/main.c **** {
 152:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 153:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 156:Core/Src/main.c ****   */
 157:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 158:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 161:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 172:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     Error_Handler();
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 180:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 184:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     Error_Handler();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c **** }
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** /**
 193:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 194:Core/Src/main.c ****   * @param None
 195:Core/Src/main.c ****   * @retval None
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c **** static void MX_CAN1_Init(void)
 198:Core/Src/main.c **** {
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 207:Core/Src/main.c ****   hcan1.Instance = CAN1;
 208:Core/Src/main.c ****   hcan1.Init.Prescaler = 1;
 209:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 210:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 211:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 212:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 213:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 214:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 215:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 216:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 217:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 218:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 219:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 220:Core/Src/main.c ****   {
 221:Core/Src/main.c ****     Error_Handler();
 222:Core/Src/main.c ****   }
 223:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** }
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /**
 230:Core/Src/main.c ****   * @brief CAN2 Initialization Function
 231:Core/Src/main.c ****   * @param None
 232:Core/Src/main.c ****   * @retval None
 233:Core/Src/main.c ****   */
 234:Core/Src/main.c **** static void MX_CAN2_Init(void)
 235:Core/Src/main.c **** {
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 0 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END CAN2_Init 0 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 1 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE END CAN2_Init 1 */
 244:Core/Src/main.c ****   hcan2.Instance = CAN2;
 245:Core/Src/main.c ****   hcan2.Init.Prescaler = 1;
 246:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 247:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 248:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
 249:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
 250:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 251:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 252:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 253:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 254:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 255:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 256:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 257:Core/Src/main.c ****   {
 258:Core/Src/main.c ****     Error_Handler();
 259:Core/Src/main.c ****   }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 6


 260:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 2 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* USER CODE END CAN2_Init 2 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** }
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** /**
 267:Core/Src/main.c ****   * @brief USART3 Initialization Function
 268:Core/Src/main.c ****   * @param None
 269:Core/Src/main.c ****   * @retval None
 270:Core/Src/main.c ****   */
 271:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 272:Core/Src/main.c **** {
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 281:Core/Src/main.c ****   huart3.Instance = USART3;
 282:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 283:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 284:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 285:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 286:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 287:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 288:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 289:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 290:Core/Src/main.c ****   {
 291:Core/Src/main.c ****     Error_Handler();
 292:Core/Src/main.c ****   }
 293:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** }
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** /**
 300:Core/Src/main.c ****   * @brief GPIO Initialization Function
 301:Core/Src/main.c ****   * @param None
 302:Core/Src/main.c ****   * @retval None
 303:Core/Src/main.c ****   */
 304:Core/Src/main.c **** static void MX_GPIO_Init(void)
 305:Core/Src/main.c **** {
  28              		.loc 1 305 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 7


  39 0002 8BB0     		sub	sp, sp, #44
  40              		.cfi_def_cfa_offset 64
 306:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 306 3 view .LVU1
  42              		.loc 1 306 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 307:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 308:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 311:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 311 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 311 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 311 3 view .LVU5
  54 0012 2B4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 311 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 311 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 311 3 view .LVU8
 312:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 312 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 312 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 312 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 312 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 312 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 312 3 view .LVU14
 313:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 313 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 313 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 313 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 8


  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 313 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 313 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 313 3 view .LVU20
 314:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 314 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 314 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 314 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 314 3 view .LVU24
 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00203 		and	r3, r3, #2
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 314 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 314 3 view .LVU26
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /*Configure GPIO pins : PC13 PC4 PC5 PC6
 317:Core/Src/main.c ****                            PC7 */
 318:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6
 114              		.loc 1 318 3 view .LVU27
 115              		.loc 1 318 23 is_stmt 0 view .LVU28
 116 0062 42F2F003 		movw	r3, #8432
 117 0066 0593     		str	r3, [sp, #20]
 319:Core/Src/main.c ****                           |GPIO_PIN_7;
 320:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 118              		.loc 1 320 3 is_stmt 1 view .LVU29
 321:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 119              		.loc 1 321 3 view .LVU30
 120              		.loc 1 321 24 is_stmt 0 view .LVU31
 121 0068 0125     		movs	r5, #1
 122 006a 0795     		str	r5, [sp, #28]
 322:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 123              		.loc 1 322 3 is_stmt 1 view .LVU32
 124 006c 05A9     		add	r1, sp, #20
 125 006e 1548     		ldr	r0, .L3+4
 126 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 127              	.LVL0:
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 325:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 128              		.loc 1 325 3 view .LVU33
 129              		.loc 1 325 23 is_stmt 0 view .LVU34
 130 0074 0595     		str	r5, [sp, #20]
 326:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 131              		.loc 1 326 3 is_stmt 1 view .LVU35
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 9


 132              		.loc 1 326 24 is_stmt 0 view .LVU36
 133 0076 4FF40413 		mov	r3, #2162688
 134 007a 0693     		str	r3, [sp, #24]
 327:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 135              		.loc 1 327 3 is_stmt 1 view .LVU37
 136              		.loc 1 327 24 is_stmt 0 view .LVU38
 137 007c 0795     		str	r5, [sp, #28]
 328:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 138              		.loc 1 328 3 is_stmt 1 view .LVU39
 139 007e 124F     		ldr	r7, .L3+8
 140 0080 05A9     		add	r1, sp, #20
 141 0082 3846     		mov	r0, r7
 142 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL1:
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 331:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 144              		.loc 1 331 3 view .LVU40
 145              		.loc 1 331 23 is_stmt 0 view .LVU41
 146 0088 0226     		movs	r6, #2
 147 008a 0596     		str	r6, [sp, #20]
 332:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 148              		.loc 1 332 3 is_stmt 1 view .LVU42
 149              		.loc 1 332 24 is_stmt 0 view .LVU43
 150 008c 4FF48813 		mov	r3, #1114112
 151 0090 0693     		str	r3, [sp, #24]
 333:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 152              		.loc 1 333 3 is_stmt 1 view .LVU44
 153              		.loc 1 333 24 is_stmt 0 view .LVU45
 154 0092 0794     		str	r4, [sp, #28]
 334:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 155              		.loc 1 334 3 is_stmt 1 view .LVU46
 156 0094 05A9     		add	r1, sp, #20
 157 0096 3846     		mov	r0, r7
 158 0098 FFF7FEFF 		bl	HAL_GPIO_Init
 159              	.LVL2:
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* EXTI interrupt init*/
 337:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 1, 0);
 160              		.loc 1 337 3 view .LVU47
 161 009c 2246     		mov	r2, r4
 162 009e 2946     		mov	r1, r5
 163 00a0 0620     		movs	r0, #6
 164 00a2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 165              	.LVL3:
 338:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 166              		.loc 1 338 3 view .LVU48
 167 00a6 0620     		movs	r0, #6
 168 00a8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 169              	.LVL4:
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI1_IRQn, 2, 0);
 170              		.loc 1 340 3 view .LVU49
 171 00ac 2246     		mov	r2, r4
 172 00ae 3146     		mov	r1, r6
 173 00b0 0720     		movs	r0, #7
 174 00b2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 10


 175              	.LVL5:
 341:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 176              		.loc 1 341 3 view .LVU50
 177 00b6 0720     		movs	r0, #7
 178 00b8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 179              	.LVL6:
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 344:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 345:Core/Src/main.c **** }
 180              		.loc 1 345 1 is_stmt 0 view .LVU51
 181 00bc 0BB0     		add	sp, sp, #44
 182              		.cfi_def_cfa_offset 20
 183              		@ sp needed
 184 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 185              	.L4:
 186              		.align	2
 187              	.L3:
 188 00c0 00380240 		.word	1073887232
 189 00c4 00080240 		.word	1073874944
 190 00c8 00000240 		.word	1073872896
 191              		.cfi_endproc
 192              	.LFE142:
 194              		.section	.text.MX_CAN1_Setup,"ax",%progbits
 195              		.align	1
 196              		.global	MX_CAN1_Setup
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	MX_CAN1_Setup:
 202              	.LFB143:
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 348:Core/Src/main.c **** void MX_CAN1_Setup()
 349:Core/Src/main.c **** {
 203              		.loc 1 349 1 is_stmt 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207 0000 10B5     		push	{r4, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 4, -8
 210              		.cfi_offset 14, -4
 350:Core/Src/main.c ****   CAN1_sFilterConfig.FilterActivation = CAN_FILTER_ENABLE;
 211              		.loc 1 350 3 view .LVU53
 212              		.loc 1 350 39 is_stmt 0 view .LVU54
 213 0002 0E49     		ldr	r1, .L7
 214 0004 0123     		movs	r3, #1
 215 0006 0B62     		str	r3, [r1, #32]
 351:Core/Src/main.c ****   CAN1_sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 216              		.loc 1 351 3 is_stmt 1 view .LVU55
 217              		.loc 1 351 43 is_stmt 0 view .LVU56
 218 0008 0023     		movs	r3, #0
 219 000a 0B61     		str	r3, [r1, #16]
 352:Core/Src/main.c ****   CAN1_sFilterConfig.SlaveStartFilterBank = 13;
 220              		.loc 1 352 3 is_stmt 1 view .LVU57
 221              		.loc 1 352 43 is_stmt 0 view .LVU58
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 11


 222 000c 0D22     		movs	r2, #13
 223 000e 4A62     		str	r2, [r1, #36]
 353:Core/Src/main.c ****   CAN1_sFilterConfig.FilterBank = 8;
 224              		.loc 1 353 3 is_stmt 1 view .LVU59
 225              		.loc 1 353 33 is_stmt 0 view .LVU60
 226 0010 0822     		movs	r2, #8
 227 0012 4A61     		str	r2, [r1, #20]
 354:Core/Src/main.c ****   CAN1_sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 228              		.loc 1 354 3 is_stmt 1 view .LVU61
 229              		.loc 1 354 33 is_stmt 0 view .LVU62
 230 0014 8B61     		str	r3, [r1, #24]
 355:Core/Src/main.c ****   CAN1_sFilterConfig.FilterScale = CAN_FILTERSCALE_16BIT;
 231              		.loc 1 355 3 is_stmt 1 view .LVU63
 232              		.loc 1 355 34 is_stmt 0 view .LVU64
 233 0016 CB61     		str	r3, [r1, #28]
 356:Core/Src/main.c ****   CAN1_sFilterConfig.FilterIdHigh = 0x0A2 << 5;
 234              		.loc 1 356 3 is_stmt 1 view .LVU65
 235              		.loc 1 356 35 is_stmt 0 view .LVU66
 236 0018 4FF4A252 		mov	r2, #5184
 237 001c 0A60     		str	r2, [r1]
 357:Core/Src/main.c ****   CAN1_sFilterConfig.FilterIdLow = 0;
 238              		.loc 1 357 3 is_stmt 1 view .LVU67
 239              		.loc 1 357 34 is_stmt 0 view .LVU68
 240 001e 4B60     		str	r3, [r1, #4]
 358:Core/Src/main.c ****   CAN1_sFilterConfig.FilterMaskIdHigh = 0x0A2 << 5;
 241              		.loc 1 358 3 is_stmt 1 view .LVU69
 242              		.loc 1 358 39 is_stmt 0 view .LVU70
 243 0020 8A60     		str	r2, [r1, #8]
 359:Core/Src/main.c ****   CAN1_sFilterConfig.FilterMaskIdLow = 0;
 244              		.loc 1 359 3 is_stmt 1 view .LVU71
 245              		.loc 1 359 38 is_stmt 0 view .LVU72
 246 0022 CB60     		str	r3, [r1, #12]
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** 	HAL_CAN_ConfigFilter(&hcan1, &CAN1_sFilterConfig);
 247              		.loc 1 361 2 is_stmt 1 view .LVU73
 248 0024 064C     		ldr	r4, .L7+4
 249 0026 2046     		mov	r0, r4
 250 0028 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 251              	.LVL7:
 362:Core/Src/main.c **** 	HAL_CAN_Start(&hcan1);
 252              		.loc 1 362 2 view .LVU74
 253 002c 2046     		mov	r0, r4
 254 002e FFF7FEFF 		bl	HAL_CAN_Start
 255              	.LVL8:
 363:Core/Src/main.c **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 256              		.loc 1 363 2 view .LVU75
 257 0032 0221     		movs	r1, #2
 258 0034 2046     		mov	r0, r4
 259 0036 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 260              	.LVL9:
 364:Core/Src/main.c **** }
 261              		.loc 1 364 1 is_stmt 0 view .LVU76
 262 003a 10BD     		pop	{r4, pc}
 263              	.L8:
 264              		.align	2
 265              	.L7:
 266 003c 00000000 		.word	CAN1_sFilterConfig
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 12


 267 0040 00000000 		.word	hcan1
 268              		.cfi_endproc
 269              	.LFE143:
 271              		.section	.text.MX_CAN2_Setup,"ax",%progbits
 272              		.align	1
 273              		.global	MX_CAN2_Setup
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 278              	MX_CAN2_Setup:
 279              	.LFB144:
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** void MX_CAN2_Setup(void)
 367:Core/Src/main.c **** {
 280              		.loc 1 367 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 368:Core/Src/main.c ****   CAN2_sFilterConfig.FilterActivation = CAN_FILTER_ENABLE;
 285              		.loc 1 368 3 view .LVU78
 286              		.loc 1 368 39 is_stmt 0 view .LVU79
 287 0000 084B     		ldr	r3, .L10
 288 0002 0122     		movs	r2, #1
 289 0004 1A62     		str	r2, [r3, #32]
 369:Core/Src/main.c ****   CAN2_sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 290              		.loc 1 369 3 is_stmt 1 view .LVU80
 291              		.loc 1 369 43 is_stmt 0 view .LVU81
 292 0006 0022     		movs	r2, #0
 293 0008 1A61     		str	r2, [r3, #16]
 370:Core/Src/main.c ****   CAN2_sFilterConfig.SlaveStartFilterBank = 13;
 294              		.loc 1 370 3 is_stmt 1 view .LVU82
 295              		.loc 1 370 43 is_stmt 0 view .LVU83
 296 000a 0D21     		movs	r1, #13
 297 000c 5962     		str	r1, [r3, #36]
 371:Core/Src/main.c ****   CAN2_sFilterConfig.FilterBank = 19;
 298              		.loc 1 371 3 is_stmt 1 view .LVU84
 299              		.loc 1 371 33 is_stmt 0 view .LVU85
 300 000e 1321     		movs	r1, #19
 301 0010 5961     		str	r1, [r3, #20]
 372:Core/Src/main.c ****   CAN2_sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 302              		.loc 1 372 3 is_stmt 1 view .LVU86
 303              		.loc 1 372 33 is_stmt 0 view .LVU87
 304 0012 9A61     		str	r2, [r3, #24]
 373:Core/Src/main.c ****   CAN2_sFilterConfig.FilterScale = CAN_FILTERSCALE_16BIT;
 305              		.loc 1 373 3 is_stmt 1 view .LVU88
 306              		.loc 1 373 34 is_stmt 0 view .LVU89
 307 0014 DA61     		str	r2, [r3, #28]
 374:Core/Src/main.c ****   CAN2_sFilterConfig.FilterIdHigh = 0x012 << 5;
 308              		.loc 1 374 3 is_stmt 1 view .LVU90
 309              		.loc 1 374 35 is_stmt 0 view .LVU91
 310 0016 4FF41071 		mov	r1, #576
 311 001a 1960     		str	r1, [r3]
 375:Core/Src/main.c ****   CAN2_sFilterConfig.FilterIdLow = 0;
 312              		.loc 1 375 3 is_stmt 1 view .LVU92
 313              		.loc 1 375 34 is_stmt 0 view .LVU93
 314 001c 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 13


 376:Core/Src/main.c ****   CAN2_sFilterConfig.FilterMaskIdHigh = 0x012 << 5;
 315              		.loc 1 376 3 is_stmt 1 view .LVU94
 316              		.loc 1 376 39 is_stmt 0 view .LVU95
 317 001e 9960     		str	r1, [r3, #8]
 377:Core/Src/main.c ****   CAN2_sFilterConfig.FilterMaskIdLow = 0;
 318              		.loc 1 377 3 is_stmt 1 view .LVU96
 319              		.loc 1 377 38 is_stmt 0 view .LVU97
 320 0020 DA60     		str	r2, [r3, #12]
 378:Core/Src/main.c **** }
 321              		.loc 1 378 1 view .LVU98
 322 0022 7047     		bx	lr
 323              	.L11:
 324              		.align	2
 325              	.L10:
 326 0024 00000000 		.word	CAN2_sFilterConfig
 327              		.cfi_endproc
 328              	.LFE144:
 330              		.section	.text.USART3_SendString,"ax",%progbits
 331              		.align	1
 332              		.global	USART3_SendString
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 337              	USART3_SendString:
 338              	.LVL10:
 339              	.LFB145:
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** void USART3_SendString(char* ch)
 381:Core/Src/main.c **** {
 340              		.loc 1 381 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		.loc 1 381 1 is_stmt 0 view .LVU100
 345 0000 10B5     		push	{r4, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 4, -8
 348              		.cfi_offset 14, -4
 349 0002 0446     		mov	r4, r0
 382:Core/Src/main.c ****    while(*ch != 0)
 350              		.loc 1 382 4 is_stmt 1 view .LVU101
 351              		.loc 1 382 9 is_stmt 0 view .LVU102
 352 0004 07E0     		b	.L13
 353              	.LVL11:
 354              	.L14:
 383:Core/Src/main.c ****    {
 384:Core/Src/main.c ****       HAL_UART_Transmit(&huart3, ch, 1,HAL_MAX_DELAY);
 355              		.loc 1 384 7 is_stmt 1 view .LVU103
 356 0006 4FF0FF33 		mov	r3, #-1
 357 000a 0122     		movs	r2, #1
 358 000c 2146     		mov	r1, r4
 359 000e 0448     		ldr	r0, .L16
 360 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 361              	.LVL12:
 385:Core/Src/main.c ****       ch++;
 362              		.loc 1 385 7 view .LVU104
 363              		.loc 1 385 9 is_stmt 0 view .LVU105
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 14


 364 0014 0134     		adds	r4, r4, #1
 365              	.LVL13:
 366              	.L13:
 382:Core/Src/main.c ****    while(*ch != 0)
 367              		.loc 1 382 14 is_stmt 1 view .LVU106
 382:Core/Src/main.c ****    while(*ch != 0)
 368              		.loc 1 382 10 is_stmt 0 view .LVU107
 369 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 382:Core/Src/main.c ****    while(*ch != 0)
 370              		.loc 1 382 14 view .LVU108
 371 0018 002B     		cmp	r3, #0
 372 001a F4D1     		bne	.L14
 386:Core/Src/main.c ****    }
 387:Core/Src/main.c **** }
 373              		.loc 1 387 1 view .LVU109
 374 001c 10BD     		pop	{r4, pc}
 375              	.LVL14:
 376              	.L17:
 377              		.loc 1 387 1 view .LVU110
 378 001e 00BF     		.align	2
 379              	.L16:
 380 0020 00000000 		.word	huart3
 381              		.cfi_endproc
 382              	.LFE145:
 384              		.section	.rodata.PrintCANLog.str1.4,"aMS",%progbits,1
 385              		.align	2
 386              	.LC2:
 387 0000 256400   		.ascii	"%d\000"
 388 0003 00       		.align	2
 389              	.LC3:
 390 0004 2000     		.ascii	" \000"
 391 0006 0000     		.align	2
 392              	.LC4:
 393 0008 25303358 		.ascii	"%03X\000"
 393      00
 394 000d 000000   		.align	2
 395              	.LC5:
 396 0010 25303258 		.ascii	"%02X\000"
 396      00
 397 0015 000000   		.align	2
 398              	.LC0:
 399 0018 20202000 		.ascii	"   \000"
 400              		.align	2
 401              	.LC1:
 402 001c 20202020 		.ascii	"        \000"
 402      20202020 
 402      00
 403              		.section	.text.PrintCANLog,"ax",%progbits
 404              		.align	1
 405              		.global	PrintCANLog
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	PrintCANLog:
 411              	.LVL15:
 412              	.LFB146:
 388:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 15


 389:Core/Src/main.c **** void PrintCANLog(uint16_t CANID, uint8_t *CAN_Frame)
 390:Core/Src/main.c **** {
 413              		.loc 1 390 1 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 16
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		.loc 1 390 1 is_stmt 0 view .LVU112
 418 0000 70B5     		push	{r4, r5, r6, lr}
 419              		.cfi_def_cfa_offset 16
 420              		.cfi_offset 4, -16
 421              		.cfi_offset 5, -12
 422              		.cfi_offset 6, -8
 423              		.cfi_offset 14, -4
 424 0002 84B0     		sub	sp, sp, #16
 425              		.cfi_def_cfa_offset 32
 426 0004 0646     		mov	r6, r0
 427 0006 0D46     		mov	r5, r1
 391:Core/Src/main.c ****   uint16_t loopIndx = 0;
 428              		.loc 1 391 3 is_stmt 1 view .LVU113
 429              	.LVL16:
 392:Core/Src/main.c **** 	char bufID[3] = "   ";
 430              		.loc 1 392 2 view .LVU114
 431              		.loc 1 392 7 is_stmt 0 view .LVU115
 432 0008 294B     		ldr	r3, .L24
 433 000a 1B68     		ldr	r3, [r3]
 434 000c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 435 0010 1B0C     		lsrs	r3, r3, #16
 436 0012 8DF80E30 		strb	r3, [sp, #14]
 393:Core/Src/main.c **** 	char bufDat[2] = "  ";
 437              		.loc 1 393 2 is_stmt 1 view .LVU116
 438              		.loc 1 393 7 is_stmt 0 view .LVU117
 439 0016 42F22003 		movw	r3, #8224
 440 001a ADF80830 		strh	r3, [sp, #8]	@ movhi
 394:Core/Src/main.c **** 	char bufTime [8]="        ";
 441              		.loc 1 394 2 is_stmt 1 view .LVU118
 442              		.loc 1 394 7 is_stmt 0 view .LVU119
 443 001e 254B     		ldr	r3, .L24+4
 444 0020 6C46     		mov	r4, sp
 445 0022 93E80300 		ldm	r3, {r0, r1}
 446              	.LVL17:
 447              		.loc 1 394 7 view .LVU120
 448 0026 84E80300 		stm	r4, {r0, r1}
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** 	sprintf(bufTime,"%d",TimeStamp);
 449              		.loc 1 396 2 is_stmt 1 view .LVU121
 450 002a 234B     		ldr	r3, .L24+8
 451 002c 1A68     		ldr	r2, [r3]
 452 002e 2349     		ldr	r1, .L24+12
 453 0030 2046     		mov	r0, r4
 454 0032 FFF7FEFF 		bl	sprintf
 455              	.LVL18:
 397:Core/Src/main.c **** 	USART3_SendString((uint8_t*)bufTime);
 456              		.loc 1 397 2 view .LVU122
 457 0036 2046     		mov	r0, r4
 458 0038 FFF7FEFF 		bl	USART3_SendString
 459              	.LVL19:
 398:Core/Src/main.c **** 	USART3_SendString((uint8_t*)" ");
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 16


 460              		.loc 1 398 2 view .LVU123
 461 003c 2048     		ldr	r0, .L24+16
 462 003e FFF7FEFF 		bl	USART3_SendString
 463              	.LVL20:
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** 	sprintf(bufID,"%03X",CANID);
 464              		.loc 1 400 2 view .LVU124
 465 0042 3246     		mov	r2, r6
 466 0044 1F49     		ldr	r1, .L24+20
 467 0046 03A8     		add	r0, sp, #12
 468 0048 FFF7FEFF 		bl	sprintf
 469              	.LVL21:
 401:Core/Src/main.c **** 	for(loopIndx = 0; loopIndx < 3; loopIndx ++)
 470              		.loc 1 401 2 view .LVU125
 471              		.loc 1 401 15 is_stmt 0 view .LVU126
 472 004c 0023     		movs	r3, #0
 473              		.loc 1 401 2 view .LVU127
 474 004e 08E0     		b	.L19
 475              	.LVL22:
 476              	.L20:
 402:Core/Src/main.c **** 	{
 403:Core/Src/main.c **** 		bufsend[loopIndx]  = bufID[loopIndx];
 477              		.loc 1 403 3 is_stmt 1 view .LVU128
 478              		.loc 1 403 29 is_stmt 0 view .LVU129
 479 0050 03F11002 		add	r2, r3, #16
 480 0054 6A44     		add	r2, sp, r2
 481 0056 12F8041C 		ldrb	r1, [r2, #-4]	@ zero_extendqisi2
 482              		.loc 1 403 22 view .LVU130
 483 005a 1B4A     		ldr	r2, .L24+24
 484 005c D154     		strb	r1, [r2, r3]
 401:Core/Src/main.c **** 	for(loopIndx = 0; loopIndx < 3; loopIndx ++)
 485              		.loc 1 401 43 is_stmt 1 discriminator 3 view .LVU131
 486 005e 0133     		adds	r3, r3, #1
 487              	.LVL23:
 401:Core/Src/main.c **** 	for(loopIndx = 0; loopIndx < 3; loopIndx ++)
 488              		.loc 1 401 43 is_stmt 0 discriminator 3 view .LVU132
 489 0060 9BB2     		uxth	r3, r3
 490              	.LVL24:
 491              	.L19:
 401:Core/Src/main.c **** 	for(loopIndx = 0; loopIndx < 3; loopIndx ++)
 492              		.loc 1 401 29 is_stmt 1 discriminator 1 view .LVU133
 493 0062 022B     		cmp	r3, #2
 494 0064 F4D9     		bls	.L20
 404:Core/Src/main.c **** 	}
 405:Core/Src/main.c **** 	bufsend[3] = ':';
 495              		.loc 1 405 2 view .LVU134
 496              		.loc 1 405 13 is_stmt 0 view .LVU135
 497 0066 184B     		ldr	r3, .L24+24
 498              	.LVL25:
 499              		.loc 1 405 13 view .LVU136
 500 0068 3A22     		movs	r2, #58
 501 006a DA70     		strb	r2, [r3, #3]
 406:Core/Src/main.c **** 	bufsend[4] = ' ';
 502              		.loc 1 406 2 is_stmt 1 view .LVU137
 503              		.loc 1 406 13 is_stmt 0 view .LVU138
 504 006c 2022     		movs	r2, #32
 505 006e 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 17


 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** 	for(loopIndx = 0; loopIndx < 8; loopIndx ++ )
 506              		.loc 1 409 2 is_stmt 1 view .LVU139
 507              	.LVL26:
 508              		.loc 1 409 15 is_stmt 0 view .LVU140
 509 0070 0024     		movs	r4, #0
 510              		.loc 1 409 2 view .LVU141
 511 0072 14E0     		b	.L21
 512              	.LVL27:
 513              	.L22:
 410:Core/Src/main.c **** 	{
 411:Core/Src/main.c **** 		sprintf(bufDat,"%02X",CAN_Frame[loopIndx]);
 514              		.loc 1 411 3 is_stmt 1 view .LVU142
 515 0074 2A5D     		ldrb	r2, [r5, r4]	@ zero_extendqisi2
 516 0076 1549     		ldr	r1, .L24+28
 517 0078 02A8     		add	r0, sp, #8
 518 007a FFF7FEFF 		bl	sprintf
 519              	.LVL28:
 412:Core/Src/main.c **** 		bufsend[loopIndx*3 + 5] = bufDat[0];
 520              		.loc 1 412 3 view .LVU143
 521              		.loc 1 412 19 is_stmt 0 view .LVU144
 522 007e 04EB4403 		add	r3, r4, r4, lsl #1
 523              		.loc 1 412 22 view .LVU145
 524 0082 591D     		adds	r1, r3, #5
 525              		.loc 1 412 35 view .LVU146
 526 0084 9DF80800 		ldrb	r0, [sp, #8]	@ zero_extendqisi2
 527              		.loc 1 412 27 view .LVU147
 528 0088 0F4A     		ldr	r2, .L24+24
 529 008a 5054     		strb	r0, [r2, r1]
 413:Core/Src/main.c **** 		bufsend[loopIndx*3 + 6] = bufDat[1];
 530              		.loc 1 413 3 is_stmt 1 view .LVU148
 531              		.loc 1 413 22 is_stmt 0 view .LVU149
 532 008c 991D     		adds	r1, r3, #6
 533              		.loc 1 413 35 view .LVU150
 534 008e 9DF80900 		ldrb	r0, [sp, #9]	@ zero_extendqisi2
 535              		.loc 1 413 27 view .LVU151
 536 0092 5054     		strb	r0, [r2, r1]
 414:Core/Src/main.c **** 		bufsend[loopIndx*3 + 7] = ' ';
 537              		.loc 1 414 3 is_stmt 1 view .LVU152
 538              		.loc 1 414 22 is_stmt 0 view .LVU153
 539 0094 0733     		adds	r3, r3, #7
 540              		.loc 1 414 27 view .LVU154
 541 0096 2021     		movs	r1, #32
 542 0098 D154     		strb	r1, [r2, r3]
 409:Core/Src/main.c **** 	{
 543              		.loc 1 409 43 is_stmt 1 discriminator 3 view .LVU155
 544 009a 0134     		adds	r4, r4, #1
 545              	.LVL29:
 409:Core/Src/main.c **** 	{
 546              		.loc 1 409 43 is_stmt 0 discriminator 3 view .LVU156
 547 009c A4B2     		uxth	r4, r4
 548              	.LVL30:
 549              	.L21:
 409:Core/Src/main.c **** 	{
 550              		.loc 1 409 29 is_stmt 1 discriminator 1 view .LVU157
 551 009e 072C     		cmp	r4, #7
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 18


 552 00a0 E8D9     		bls	.L22
 415:Core/Src/main.c **** 	}
 416:Core/Src/main.c **** 	bufsend[29] = '\n';
 553              		.loc 1 416 2 view .LVU158
 554              		.loc 1 416 14 is_stmt 0 view .LVU159
 555 00a2 0948     		ldr	r0, .L24+24
 556 00a4 0A23     		movs	r3, #10
 557 00a6 4377     		strb	r3, [r0, #29]
 417:Core/Src/main.c **** 	USART3_SendString((unsigned char*)bufsend);
 558              		.loc 1 417 2 is_stmt 1 view .LVU160
 559 00a8 FFF7FEFF 		bl	USART3_SendString
 560              	.LVL31:
 418:Core/Src/main.c **** }
 561              		.loc 1 418 1 is_stmt 0 view .LVU161
 562 00ac 04B0     		add	sp, sp, #16
 563              		.cfi_def_cfa_offset 16
 564              		@ sp needed
 565 00ae 70BD     		pop	{r4, r5, r6, pc}
 566              	.LVL32:
 567              	.L25:
 568              		.loc 1 418 1 view .LVU162
 569              		.align	2
 570              	.L24:
 571 00b0 18000000 		.word	.LC0
 572 00b4 1C000000 		.word	.LC1
 573 00b8 00000000 		.word	TimeStamp
 574 00bc 00000000 		.word	.LC2
 575 00c0 04000000 		.word	.LC3
 576 00c4 08000000 		.word	.LC4
 577 00c8 00000000 		.word	bufsend
 578 00cc 10000000 		.word	.LC5
 579              		.cfi_endproc
 580              	.LFE146:
 582              		.section	.text.calc_crc,"ax",%progbits
 583              		.align	1
 584              		.global	calc_crc
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 589              	calc_crc:
 590              	.LVL33:
 591              	.LFB147:
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** uint8_t calc_crc(uint8_t *data, uint8_t crc_len)
 421:Core/Src/main.c **** {
 592              		.loc 1 421 1 is_stmt 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		.loc 1 421 1 is_stmt 0 view .LVU164
 597 0000 00B5     		push	{lr}
 598              		.cfi_def_cfa_offset 4
 599              		.cfi_offset 14, -4
 600 0002 8646     		mov	lr, r0
 601 0004 8C46     		mov	ip, r1
 422:Core/Src/main.c ****     uint8_t idx, crc, temp1, temp2, idy;
 602              		.loc 1 422 5 is_stmt 1 view .LVU165
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 19


 423:Core/Src/main.c ****     crc = 0;
 603              		.loc 1 423 5 view .LVU166
 604              	.LVL34:
 424:Core/Src/main.c ****     idx = 0;
 605              		.loc 1 424 5 view .LVU167
 425:Core/Src/main.c ****     idy = 0;
 606              		.loc 1 425 5 view .LVU168
 426:Core/Src/main.c ****     temp1 = 0;
 607              		.loc 1 426 5 view .LVU169
 427:Core/Src/main.c ****     temp2 = 0;
 608              		.loc 1 427 5 view .LVU170
 428:Core/Src/main.c ****     for(idx=0;idx < crc_len+1;idx++)
 609              		.loc 1 428 5 view .LVU171
 423:Core/Src/main.c ****     idx = 0;
 610              		.loc 1 423 9 is_stmt 0 view .LVU172
 611 0006 0020     		movs	r0, #0
 612              	.LVL35:
 613              		.loc 1 428 12 view .LVU173
 614 0008 0146     		mov	r1, r0
 615              	.LVL36:
 616              		.loc 1 428 5 view .LVU174
 617 000a 0FE0     		b	.L27
 618              	.LVL37:
 619              	.L33:
 429:Core/Src/main.c ****     {
 430:Core/Src/main.c ****         if(idx == 0)
 431:Core/Src/main.c ****         {
 432:Core/Src/main.c ****             temp1 = 0;
 620              		.loc 1 432 19 view .LVU175
 621 000c 0B46     		mov	r3, r1
 622 000e 15E0     		b	.L28
 623              	.LVL38:
 624              	.L30:
 433:Core/Src/main.c ****         }
 434:Core/Src/main.c ****         else
 435:Core/Src/main.c ****         {
 436:Core/Src/main.c ****             temp1 = data[crc_len-idx];
 437:Core/Src/main.c ****         }
 438:Core/Src/main.c ****         crc = (crc^temp1);
 439:Core/Src/main.c ****         for(idy=(uint8_t)8; idy>0; idy--)
 625              		.loc 1 439 39 is_stmt 1 discriminator 2 view .LVU176
 626 0010 013B     		subs	r3, r3, #1
 627              	.LVL39:
 628              		.loc 1 439 39 is_stmt 0 discriminator 2 view .LVU177
 629 0012 DBB2     		uxtb	r3, r3
 630              	.LVL40:
 631              		.loc 1 439 39 discriminator 2 view .LVU178
 632 0014 1046     		mov	r0, r2
 633              	.LVL41:
 634              	.L29:
 635              		.loc 1 439 32 is_stmt 1 discriminator 1 view .LVU179
 636 0016 3BB1     		cbz	r3, .L35
 440:Core/Src/main.c ****         {
 441:Core/Src/main.c ****             // Save the value before the top bit is shifted out.
 442:Core/Src/main.c ****             temp2 = crc;
 637              		.loc 1 442 13 view .LVU180
 638              	.LVL42:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 20


 443:Core/Src/main.c ****             crc <<= 1;
 639              		.loc 1 443 13 view .LVU181
 640              		.loc 1 443 17 is_stmt 0 view .LVU182
 641 0018 4200     		lsls	r2, r0, #1
 642 001a D2B2     		uxtb	r2, r2
 643              	.LVL43:
 444:Core/Src/main.c ****             if (0 != (temp2 & (uint8_t)128))
 644              		.loc 1 444 13 is_stmt 1 view .LVU183
 645              		.loc 1 444 16 is_stmt 0 view .LVU184
 646 001c 10F0800F 		tst	r0, #128
 647 0020 F6D0     		beq	.L30
 445:Core/Src/main.c ****                 crc ^= 0x1D;
 648              		.loc 1 445 17 is_stmt 1 view .LVU185
 649              		.loc 1 445 21 is_stmt 0 view .LVU186
 650 0022 82F01D02 		eor	r2, r2, #29
 651              	.LVL44:
 652              		.loc 1 445 21 view .LVU187
 653 0026 F3E7     		b	.L30
 654              	.LVL45:
 655              	.L35:
 428:Core/Src/main.c ****     {
 656              		.loc 1 428 34 is_stmt 1 discriminator 2 view .LVU188
 657 0028 0131     		adds	r1, r1, #1
 658              	.LVL46:
 428:Core/Src/main.c ****     {
 659              		.loc 1 428 34 is_stmt 0 discriminator 2 view .LVU189
 660 002a C9B2     		uxtb	r1, r1
 661              	.LVL47:
 662              	.L27:
 428:Core/Src/main.c ****     {
 663              		.loc 1 428 19 is_stmt 1 discriminator 1 view .LVU190
 664 002c 6145     		cmp	r1, ip
 665 002e 09D8     		bhi	.L36
 430:Core/Src/main.c ****         {
 666              		.loc 1 430 9 view .LVU191
 430:Core/Src/main.c ****         {
 667              		.loc 1 430 11 is_stmt 0 view .LVU192
 668 0030 0029     		cmp	r1, #0
 669 0032 EBD0     		beq	.L33
 436:Core/Src/main.c ****         }
 670              		.loc 1 436 13 is_stmt 1 view .LVU193
 436:Core/Src/main.c ****         }
 671              		.loc 1 436 33 is_stmt 0 view .LVU194
 672 0034 ACEB0103 		sub	r3, ip, r1
 436:Core/Src/main.c ****         }
 673              		.loc 1 436 19 view .LVU195
 674 0038 1EF80330 		ldrb	r3, [lr, r3]	@ zero_extendqisi2
 675              	.LVL48:
 676              	.L28:
 438:Core/Src/main.c ****         for(idy=(uint8_t)8; idy>0; idy--)
 677              		.loc 1 438 9 is_stmt 1 view .LVU196
 438:Core/Src/main.c ****         for(idy=(uint8_t)8; idy>0; idy--)
 678              		.loc 1 438 13 is_stmt 0 view .LVU197
 679 003c 5840     		eors	r0, r0, r3
 680              	.LVL49:
 438:Core/Src/main.c ****         for(idy=(uint8_t)8; idy>0; idy--)
 681              		.loc 1 438 13 view .LVU198
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 21


 682 003e C0B2     		uxtb	r0, r0
 683              	.LVL50:
 439:Core/Src/main.c ****         {
 684              		.loc 1 439 9 is_stmt 1 view .LVU199
 439:Core/Src/main.c ****         {
 685              		.loc 1 439 16 is_stmt 0 view .LVU200
 686 0040 0823     		movs	r3, #8
 687              	.LVL51:
 439:Core/Src/main.c ****         {
 688              		.loc 1 439 9 view .LVU201
 689 0042 E8E7     		b	.L29
 690              	.LVL52:
 691              	.L36:
 446:Core/Src/main.c ****         }
 447:Core/Src/main.c ****     }
 448:Core/Src/main.c ****     return crc;
 692              		.loc 1 448 5 is_stmt 1 view .LVU202
 449:Core/Src/main.c **** }
 693              		.loc 1 449 1 is_stmt 0 view .LVU203
 694 0044 5DF804FB 		ldr	pc, [sp], #4
 695              		.cfi_endproc
 696              	.LFE147:
 698              		.section	.text.Error_Handler,"ax",%progbits
 699              		.align	1
 700              		.global	Error_Handler
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 705              	Error_Handler:
 706              	.LFB148:
 450:Core/Src/main.c **** /* USER CODE END 4 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c **** /**
 453:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 454:Core/Src/main.c ****   * @retval None
 455:Core/Src/main.c ****   */
 456:Core/Src/main.c **** void Error_Handler(void)
 457:Core/Src/main.c **** {
 707              		.loc 1 457 1 is_stmt 1 view -0
 708              		.cfi_startproc
 709              		@ Volatile: function does not return.
 710              		@ args = 0, pretend = 0, frame = 0
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712              		@ link register save eliminated.
 458:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 459:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 460:Core/Src/main.c ****   __disable_irq();
 713              		.loc 1 460 3 view .LVU205
 714              	.LBB8:
 715              	.LBI8:
 716              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 22


   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 23


  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 24


 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 25


 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 26


 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 27


 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 28


 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 29


 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 30


 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 31


 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 32


 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 33


 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 34


 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 35


 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 36


 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 37


 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 38


 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 717              		.loc 2 960 27 view .LVU206
 718              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 719              		.loc 2 962 3 view .LVU207
 720              		.syntax unified
 721              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 722 0000 72B6     		cpsid i
 723              	@ 0 "" 2
 724              		.thumb
 725              		.syntax unified
 726              	.L38:
 727              	.LBE9:
 728              	.LBE8:
 461:Core/Src/main.c ****   while (1)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 39


 729              		.loc 1 461 3 view .LVU208
 462:Core/Src/main.c ****   {
 463:Core/Src/main.c ****   }
 730              		.loc 1 463 3 view .LVU209
 461:Core/Src/main.c ****   while (1)
 731              		.loc 1 461 9 view .LVU210
 732 0002 FEE7     		b	.L38
 733              		.cfi_endproc
 734              	.LFE148:
 736              		.section	.text.MX_CAN1_Init,"ax",%progbits
 737              		.align	1
 738              		.syntax unified
 739              		.thumb
 740              		.thumb_func
 742              	MX_CAN1_Init:
 743              	.LFB139:
 198:Core/Src/main.c **** 
 744              		.loc 1 198 1 view -0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748 0000 08B5     		push	{r3, lr}
 749              		.cfi_def_cfa_offset 8
 750              		.cfi_offset 3, -8
 751              		.cfi_offset 14, -4
 207:Core/Src/main.c ****   hcan1.Init.Prescaler = 1;
 752              		.loc 1 207 3 view .LVU212
 207:Core/Src/main.c ****   hcan1.Init.Prescaler = 1;
 753              		.loc 1 207 18 is_stmt 0 view .LVU213
 754 0002 0E48     		ldr	r0, .L43
 755 0004 0E4B     		ldr	r3, .L43+4
 756 0006 0360     		str	r3, [r0]
 208:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 757              		.loc 1 208 3 is_stmt 1 view .LVU214
 208:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 758              		.loc 1 208 24 is_stmt 0 view .LVU215
 759 0008 0123     		movs	r3, #1
 760 000a 4360     		str	r3, [r0, #4]
 209:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 761              		.loc 1 209 3 is_stmt 1 view .LVU216
 209:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 762              		.loc 1 209 19 is_stmt 0 view .LVU217
 763 000c 0023     		movs	r3, #0
 764 000e 8360     		str	r3, [r0, #8]
 210:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 765              		.loc 1 210 3 is_stmt 1 view .LVU218
 210:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 766              		.loc 1 210 28 is_stmt 0 view .LVU219
 767 0010 4FF08072 		mov	r2, #16777216
 768 0014 C260     		str	r2, [r0, #12]
 211:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 769              		.loc 1 211 3 is_stmt 1 view .LVU220
 211:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 770              		.loc 1 211 23 is_stmt 0 view .LVU221
 771 0016 4FF42022 		mov	r2, #655360
 772 001a 0261     		str	r2, [r0, #16]
 212:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 40


 773              		.loc 1 212 3 is_stmt 1 view .LVU222
 212:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 774              		.loc 1 212 23 is_stmt 0 view .LVU223
 775 001c 4FF44012 		mov	r2, #3145728
 776 0020 4261     		str	r2, [r0, #20]
 213:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 777              		.loc 1 213 3 is_stmt 1 view .LVU224
 213:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 778              		.loc 1 213 32 is_stmt 0 view .LVU225
 779 0022 0376     		strb	r3, [r0, #24]
 214:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 780              		.loc 1 214 3 is_stmt 1 view .LVU226
 214:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 781              		.loc 1 214 25 is_stmt 0 view .LVU227
 782 0024 4376     		strb	r3, [r0, #25]
 215:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 783              		.loc 1 215 3 is_stmt 1 view .LVU228
 215:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 784              		.loc 1 215 25 is_stmt 0 view .LVU229
 785 0026 8376     		strb	r3, [r0, #26]
 216:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 786              		.loc 1 216 3 is_stmt 1 view .LVU230
 216:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 787              		.loc 1 216 33 is_stmt 0 view .LVU231
 788 0028 C376     		strb	r3, [r0, #27]
 217:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 789              		.loc 1 217 3 is_stmt 1 view .LVU232
 217:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 790              		.loc 1 217 32 is_stmt 0 view .LVU233
 791 002a 0377     		strb	r3, [r0, #28]
 218:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 792              		.loc 1 218 3 is_stmt 1 view .LVU234
 218:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 793              		.loc 1 218 35 is_stmt 0 view .LVU235
 794 002c 4377     		strb	r3, [r0, #29]
 219:Core/Src/main.c ****   {
 795              		.loc 1 219 3 is_stmt 1 view .LVU236
 219:Core/Src/main.c ****   {
 796              		.loc 1 219 7 is_stmt 0 view .LVU237
 797 002e FFF7FEFF 		bl	HAL_CAN_Init
 798              	.LVL53:
 219:Core/Src/main.c ****   {
 799              		.loc 1 219 6 discriminator 1 view .LVU238
 800 0032 00B9     		cbnz	r0, .L42
 227:Core/Src/main.c **** 
 801              		.loc 1 227 1 view .LVU239
 802 0034 08BD     		pop	{r3, pc}
 803              	.L42:
 221:Core/Src/main.c ****   }
 804              		.loc 1 221 5 is_stmt 1 view .LVU240
 805 0036 FFF7FEFF 		bl	Error_Handler
 806              	.LVL54:
 807              	.L44:
 808 003a 00BF     		.align	2
 809              	.L43:
 810 003c 00000000 		.word	hcan1
 811 0040 00640040 		.word	1073767424
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 41


 812              		.cfi_endproc
 813              	.LFE139:
 815              		.section	.text.MX_CAN2_Init,"ax",%progbits
 816              		.align	1
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 821              	MX_CAN2_Init:
 822              	.LFB140:
 235:Core/Src/main.c **** 
 823              		.loc 1 235 1 view -0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827 0000 08B5     		push	{r3, lr}
 828              		.cfi_def_cfa_offset 8
 829              		.cfi_offset 3, -8
 830              		.cfi_offset 14, -4
 244:Core/Src/main.c ****   hcan2.Init.Prescaler = 1;
 831              		.loc 1 244 3 view .LVU242
 244:Core/Src/main.c ****   hcan2.Init.Prescaler = 1;
 832              		.loc 1 244 18 is_stmt 0 view .LVU243
 833 0002 0E48     		ldr	r0, .L49
 834 0004 0E4B     		ldr	r3, .L49+4
 835 0006 0360     		str	r3, [r0]
 245:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 836              		.loc 1 245 3 is_stmt 1 view .LVU244
 245:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 837              		.loc 1 245 24 is_stmt 0 view .LVU245
 838 0008 0123     		movs	r3, #1
 839 000a 4360     		str	r3, [r0, #4]
 246:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 840              		.loc 1 246 3 is_stmt 1 view .LVU246
 246:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 841              		.loc 1 246 19 is_stmt 0 view .LVU247
 842 000c 0023     		movs	r3, #0
 843 000e 8360     		str	r3, [r0, #8]
 247:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
 844              		.loc 1 247 3 is_stmt 1 view .LVU248
 247:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
 845              		.loc 1 247 28 is_stmt 0 view .LVU249
 846 0010 4FF08072 		mov	r2, #16777216
 847 0014 C260     		str	r2, [r0, #12]
 248:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
 848              		.loc 1 248 3 is_stmt 1 view .LVU250
 248:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
 849              		.loc 1 248 23 is_stmt 0 view .LVU251
 850 0016 4FF42022 		mov	r2, #655360
 851 001a 0261     		str	r2, [r0, #16]
 249:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 852              		.loc 1 249 3 is_stmt 1 view .LVU252
 249:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 853              		.loc 1 249 23 is_stmt 0 view .LVU253
 854 001c 4FF44012 		mov	r2, #3145728
 855 0020 4261     		str	r2, [r0, #20]
 250:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 856              		.loc 1 250 3 is_stmt 1 view .LVU254
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 42


 250:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 857              		.loc 1 250 32 is_stmt 0 view .LVU255
 858 0022 0376     		strb	r3, [r0, #24]
 251:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 859              		.loc 1 251 3 is_stmt 1 view .LVU256
 251:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 860              		.loc 1 251 25 is_stmt 0 view .LVU257
 861 0024 4376     		strb	r3, [r0, #25]
 252:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 862              		.loc 1 252 3 is_stmt 1 view .LVU258
 252:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 863              		.loc 1 252 25 is_stmt 0 view .LVU259
 864 0026 8376     		strb	r3, [r0, #26]
 253:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 865              		.loc 1 253 3 is_stmt 1 view .LVU260
 253:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 866              		.loc 1 253 33 is_stmt 0 view .LVU261
 867 0028 C376     		strb	r3, [r0, #27]
 254:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 868              		.loc 1 254 3 is_stmt 1 view .LVU262
 254:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 869              		.loc 1 254 32 is_stmt 0 view .LVU263
 870 002a 0377     		strb	r3, [r0, #28]
 255:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 871              		.loc 1 255 3 is_stmt 1 view .LVU264
 255:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 872              		.loc 1 255 35 is_stmt 0 view .LVU265
 873 002c 4377     		strb	r3, [r0, #29]
 256:Core/Src/main.c ****   {
 874              		.loc 1 256 3 is_stmt 1 view .LVU266
 256:Core/Src/main.c ****   {
 875              		.loc 1 256 7 is_stmt 0 view .LVU267
 876 002e FFF7FEFF 		bl	HAL_CAN_Init
 877              	.LVL55:
 256:Core/Src/main.c ****   {
 878              		.loc 1 256 6 discriminator 1 view .LVU268
 879 0032 00B9     		cbnz	r0, .L48
 264:Core/Src/main.c **** 
 880              		.loc 1 264 1 view .LVU269
 881 0034 08BD     		pop	{r3, pc}
 882              	.L48:
 258:Core/Src/main.c ****   }
 883              		.loc 1 258 5 is_stmt 1 view .LVU270
 884 0036 FFF7FEFF 		bl	Error_Handler
 885              	.LVL56:
 886              	.L50:
 887 003a 00BF     		.align	2
 888              	.L49:
 889 003c 00000000 		.word	hcan2
 890 0040 00680040 		.word	1073768448
 891              		.cfi_endproc
 892              	.LFE140:
 894              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 895              		.align	1
 896              		.syntax unified
 897              		.thumb
 898              		.thumb_func
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 43


 900              	MX_USART3_UART_Init:
 901              	.LFB141:
 272:Core/Src/main.c **** 
 902              		.loc 1 272 1 view -0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906 0000 08B5     		push	{r3, lr}
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 3, -8
 909              		.cfi_offset 14, -4
 281:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 910              		.loc 1 281 3 view .LVU272
 281:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 911              		.loc 1 281 19 is_stmt 0 view .LVU273
 912 0002 0A48     		ldr	r0, .L55
 913 0004 0A4B     		ldr	r3, .L55+4
 914 0006 0360     		str	r3, [r0]
 282:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 915              		.loc 1 282 3 is_stmt 1 view .LVU274
 282:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 916              		.loc 1 282 24 is_stmt 0 view .LVU275
 917 0008 4FF4E133 		mov	r3, #115200
 918 000c 4360     		str	r3, [r0, #4]
 283:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 919              		.loc 1 283 3 is_stmt 1 view .LVU276
 283:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 920              		.loc 1 283 26 is_stmt 0 view .LVU277
 921 000e 0023     		movs	r3, #0
 922 0010 8360     		str	r3, [r0, #8]
 284:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 923              		.loc 1 284 3 is_stmt 1 view .LVU278
 284:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 924              		.loc 1 284 24 is_stmt 0 view .LVU279
 925 0012 C360     		str	r3, [r0, #12]
 285:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 926              		.loc 1 285 3 is_stmt 1 view .LVU280
 285:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 927              		.loc 1 285 22 is_stmt 0 view .LVU281
 928 0014 0361     		str	r3, [r0, #16]
 286:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 929              		.loc 1 286 3 is_stmt 1 view .LVU282
 286:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 930              		.loc 1 286 20 is_stmt 0 view .LVU283
 931 0016 0C22     		movs	r2, #12
 932 0018 4261     		str	r2, [r0, #20]
 287:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 933              		.loc 1 287 3 is_stmt 1 view .LVU284
 287:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 934              		.loc 1 287 25 is_stmt 0 view .LVU285
 935 001a 8361     		str	r3, [r0, #24]
 288:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 936              		.loc 1 288 3 is_stmt 1 view .LVU286
 288:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 937              		.loc 1 288 28 is_stmt 0 view .LVU287
 938 001c C361     		str	r3, [r0, #28]
 289:Core/Src/main.c ****   {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 44


 939              		.loc 1 289 3 is_stmt 1 view .LVU288
 289:Core/Src/main.c ****   {
 940              		.loc 1 289 7 is_stmt 0 view .LVU289
 941 001e FFF7FEFF 		bl	HAL_UART_Init
 942              	.LVL57:
 289:Core/Src/main.c ****   {
 943              		.loc 1 289 6 discriminator 1 view .LVU290
 944 0022 00B9     		cbnz	r0, .L54
 297:Core/Src/main.c **** 
 945              		.loc 1 297 1 view .LVU291
 946 0024 08BD     		pop	{r3, pc}
 947              	.L54:
 291:Core/Src/main.c ****   }
 948              		.loc 1 291 5 is_stmt 1 view .LVU292
 949 0026 FFF7FEFF 		bl	Error_Handler
 950              	.LVL58:
 951              	.L56:
 952 002a 00BF     		.align	2
 953              	.L55:
 954 002c 00000000 		.word	huart3
 955 0030 00480040 		.word	1073760256
 956              		.cfi_endproc
 957              	.LFE141:
 959              		.section	.text.SystemClock_Config,"ax",%progbits
 960              		.align	1
 961              		.global	SystemClock_Config
 962              		.syntax unified
 963              		.thumb
 964              		.thumb_func
 966              	SystemClock_Config:
 967              	.LFB138:
 151:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 968              		.loc 1 151 1 view -0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 80
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972 0000 00B5     		push	{lr}
 973              		.cfi_def_cfa_offset 4
 974              		.cfi_offset 14, -4
 975 0002 95B0     		sub	sp, sp, #84
 976              		.cfi_def_cfa_offset 88
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 977              		.loc 1 152 3 view .LVU294
 152:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 978              		.loc 1 152 22 is_stmt 0 view .LVU295
 979 0004 3022     		movs	r2, #48
 980 0006 0021     		movs	r1, #0
 981 0008 08A8     		add	r0, sp, #32
 982 000a FFF7FEFF 		bl	memset
 983              	.LVL59:
 153:Core/Src/main.c **** 
 984              		.loc 1 153 3 is_stmt 1 view .LVU296
 153:Core/Src/main.c **** 
 985              		.loc 1 153 22 is_stmt 0 view .LVU297
 986 000e 0023     		movs	r3, #0
 987 0010 0393     		str	r3, [sp, #12]
 988 0012 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 45


 989 0014 0593     		str	r3, [sp, #20]
 990 0016 0693     		str	r3, [sp, #24]
 991 0018 0793     		str	r3, [sp, #28]
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 992              		.loc 1 157 3 is_stmt 1 view .LVU298
 993              	.LBB10:
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 994              		.loc 1 157 3 view .LVU299
 995 001a 0193     		str	r3, [sp, #4]
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 996              		.loc 1 157 3 view .LVU300
 997 001c 1F4A     		ldr	r2, .L63
 998 001e 116C     		ldr	r1, [r2, #64]
 999 0020 41F08051 		orr	r1, r1, #268435456
 1000 0024 1164     		str	r1, [r2, #64]
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1001              		.loc 1 157 3 view .LVU301
 1002 0026 126C     		ldr	r2, [r2, #64]
 1003 0028 02F08052 		and	r2, r2, #268435456
 1004 002c 0192     		str	r2, [sp, #4]
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1005              		.loc 1 157 3 view .LVU302
 1006 002e 019A     		ldr	r2, [sp, #4]
 1007              	.LBE10:
 157:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1008              		.loc 1 157 3 view .LVU303
 158:Core/Src/main.c **** 
 1009              		.loc 1 158 3 view .LVU304
 1010              	.LBB11:
 158:Core/Src/main.c **** 
 1011              		.loc 1 158 3 view .LVU305
 1012 0030 0293     		str	r3, [sp, #8]
 158:Core/Src/main.c **** 
 1013              		.loc 1 158 3 view .LVU306
 1014 0032 1B4A     		ldr	r2, .L63+4
 1015 0034 1168     		ldr	r1, [r2]
 1016 0036 41F48041 		orr	r1, r1, #16384
 1017 003a 1160     		str	r1, [r2]
 158:Core/Src/main.c **** 
 1018              		.loc 1 158 3 view .LVU307
 1019 003c 1268     		ldr	r2, [r2]
 1020 003e 02F48042 		and	r2, r2, #16384
 1021 0042 0292     		str	r2, [sp, #8]
 158:Core/Src/main.c **** 
 1022              		.loc 1 158 3 view .LVU308
 1023 0044 029A     		ldr	r2, [sp, #8]
 1024              	.LBE11:
 158:Core/Src/main.c **** 
 1025              		.loc 1 158 3 view .LVU309
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1026              		.loc 1 163 3 view .LVU310
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1027              		.loc 1 163 36 is_stmt 0 view .LVU311
 1028 0046 0222     		movs	r2, #2
 1029 0048 0892     		str	r2, [sp, #32]
 164:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1030              		.loc 1 164 3 is_stmt 1 view .LVU312
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 46


 164:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1031              		.loc 1 164 30 is_stmt 0 view .LVU313
 1032 004a 0121     		movs	r1, #1
 1033 004c 0B91     		str	r1, [sp, #44]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1034              		.loc 1 165 3 is_stmt 1 view .LVU314
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1035              		.loc 1 165 41 is_stmt 0 view .LVU315
 1036 004e 1021     		movs	r1, #16
 1037 0050 0C91     		str	r1, [sp, #48]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1038              		.loc 1 166 3 is_stmt 1 view .LVU316
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1039              		.loc 1 166 34 is_stmt 0 view .LVU317
 1040 0052 0E92     		str	r2, [sp, #56]
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1041              		.loc 1 167 3 is_stmt 1 view .LVU318
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1042              		.loc 1 167 35 is_stmt 0 view .LVU319
 1043 0054 0F93     		str	r3, [sp, #60]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 1044              		.loc 1 168 3 is_stmt 1 view .LVU320
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 1045              		.loc 1 168 30 is_stmt 0 view .LVU321
 1046 0056 0823     		movs	r3, #8
 1047 0058 1093     		str	r3, [sp, #64]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1048              		.loc 1 169 3 is_stmt 1 view .LVU322
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1049              		.loc 1 169 30 is_stmt 0 view .LVU323
 1050 005a 4023     		movs	r3, #64
 1051 005c 1193     		str	r3, [sp, #68]
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1052              		.loc 1 170 3 is_stmt 1 view .LVU324
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1053              		.loc 1 170 30 is_stmt 0 view .LVU325
 1054 005e 1292     		str	r2, [sp, #72]
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1055              		.loc 1 171 3 is_stmt 1 view .LVU326
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1056              		.loc 1 171 30 is_stmt 0 view .LVU327
 1057 0060 0423     		movs	r3, #4
 1058 0062 1393     		str	r3, [sp, #76]
 172:Core/Src/main.c ****   {
 1059              		.loc 1 172 3 is_stmt 1 view .LVU328
 172:Core/Src/main.c ****   {
 1060              		.loc 1 172 7 is_stmt 0 view .LVU329
 1061 0064 08A8     		add	r0, sp, #32
 1062 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1063              	.LVL60:
 172:Core/Src/main.c ****   {
 1064              		.loc 1 172 6 discriminator 1 view .LVU330
 1065 006a 90B9     		cbnz	r0, .L61
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1066              		.loc 1 179 3 is_stmt 1 view .LVU331
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1067              		.loc 1 179 31 is_stmt 0 view .LVU332
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 47


 1068 006c 0F23     		movs	r3, #15
 1069 006e 0393     		str	r3, [sp, #12]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1070              		.loc 1 181 3 is_stmt 1 view .LVU333
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1071              		.loc 1 181 34 is_stmt 0 view .LVU334
 1072 0070 0221     		movs	r1, #2
 1073 0072 0491     		str	r1, [sp, #16]
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 1074              		.loc 1 182 3 is_stmt 1 view .LVU335
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 1075              		.loc 1 182 35 is_stmt 0 view .LVU336
 1076 0074 0023     		movs	r3, #0
 1077 0076 0593     		str	r3, [sp, #20]
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1078              		.loc 1 183 3 is_stmt 1 view .LVU337
 183:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1079              		.loc 1 183 36 is_stmt 0 view .LVU338
 1080 0078 4FF4C053 		mov	r3, #6144
 1081 007c 0693     		str	r3, [sp, #24]
 184:Core/Src/main.c **** 
 1082              		.loc 1 184 3 is_stmt 1 view .LVU339
 184:Core/Src/main.c **** 
 1083              		.loc 1 184 36 is_stmt 0 view .LVU340
 1084 007e 4FF48053 		mov	r3, #4096
 1085 0082 0793     		str	r3, [sp, #28]
 186:Core/Src/main.c ****   {
 1086              		.loc 1 186 3 is_stmt 1 view .LVU341
 186:Core/Src/main.c ****   {
 1087              		.loc 1 186 7 is_stmt 0 view .LVU342
 1088 0084 03A8     		add	r0, sp, #12
 1089 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1090              	.LVL61:
 186:Core/Src/main.c ****   {
 1091              		.loc 1 186 6 discriminator 1 view .LVU343
 1092 008a 20B9     		cbnz	r0, .L62
 190:Core/Src/main.c **** 
 1093              		.loc 1 190 1 view .LVU344
 1094 008c 15B0     		add	sp, sp, #84
 1095              		.cfi_remember_state
 1096              		.cfi_def_cfa_offset 4
 1097              		@ sp needed
 1098 008e 5DF804FB 		ldr	pc, [sp], #4
 1099              	.L61:
 1100              		.cfi_restore_state
 174:Core/Src/main.c ****   }
 1101              		.loc 1 174 5 is_stmt 1 view .LVU345
 1102 0092 FFF7FEFF 		bl	Error_Handler
 1103              	.LVL62:
 1104              	.L62:
 188:Core/Src/main.c ****   }
 1105              		.loc 1 188 5 view .LVU346
 1106 0096 FFF7FEFF 		bl	Error_Handler
 1107              	.LVL63:
 1108              	.L64:
 1109 009a 00BF     		.align	2
 1110              	.L63:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 48


 1111 009c 00380240 		.word	1073887232
 1112 00a0 00700040 		.word	1073770496
 1113              		.cfi_endproc
 1114              	.LFE138:
 1116              		.section	.text.main,"ax",%progbits
 1117              		.align	1
 1118              		.global	main
 1119              		.syntax unified
 1120              		.thumb
 1121              		.thumb_func
 1123              	main:
 1124              	.LFB137:
 101:Core/Src/main.c **** 
 1125              		.loc 1 101 1 view -0
 1126              		.cfi_startproc
 1127              		@ Volatile: function does not return.
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130 0000 08B5     		push	{r3, lr}
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 3, -8
 1133              		.cfi_offset 14, -4
 110:Core/Src/main.c **** 
 1134              		.loc 1 110 3 view .LVU348
 1135 0002 FFF7FEFF 		bl	HAL_Init
 1136              	.LVL64:
 117:Core/Src/main.c **** 
 1137              		.loc 1 117 3 view .LVU349
 1138 0006 FFF7FEFF 		bl	SystemClock_Config
 1139              	.LVL65:
 124:Core/Src/main.c ****   MX_CAN1_Init();
 1140              		.loc 1 124 3 view .LVU350
 1141 000a FFF7FEFF 		bl	MX_GPIO_Init
 1142              	.LVL66:
 125:Core/Src/main.c ****   MX_CAN2_Init();
 1143              		.loc 1 125 3 view .LVU351
 1144 000e FFF7FEFF 		bl	MX_CAN1_Init
 1145              	.LVL67:
 126:Core/Src/main.c ****   MX_USART3_UART_Init();
 1146              		.loc 1 126 3 view .LVU352
 1147 0012 FFF7FEFF 		bl	MX_CAN2_Init
 1148              	.LVL68:
 127:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1149              		.loc 1 127 3 view .LVU353
 1150 0016 FFF7FEFF 		bl	MX_USART3_UART_Init
 1151              	.LVL69:
 129:Core/Src/main.c ****   MX_CAN2_Setup();
 1152              		.loc 1 129 3 view .LVU354
 1153 001a FFF7FEFF 		bl	MX_CAN1_Setup
 1154              	.LVL70:
 130:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart3, UART_IT_RXNE);
 1155              		.loc 1 130 3 view .LVU355
 1156 001e FFF7FEFF 		bl	MX_CAN2_Setup
 1157              	.LVL71:
 131:Core/Src/main.c **** 
 1158              		.loc 1 131 3 view .LVU356
 1159 0022 034B     		ldr	r3, .L68
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 49


 1160 0024 1A68     		ldr	r2, [r3]
 1161 0026 D368     		ldr	r3, [r2, #12]
 1162 0028 43F02003 		orr	r3, r3, #32
 1163 002c D360     		str	r3, [r2, #12]
 1164              	.L66:
 137:Core/Src/main.c ****   {
 1165              		.loc 1 137 3 view .LVU357
 142:Core/Src/main.c ****   /* USER CODE END 3 */
 1166              		.loc 1 142 3 view .LVU358
 137:Core/Src/main.c ****   {
 1167              		.loc 1 137 9 view .LVU359
 1168 002e FEE7     		b	.L66
 1169              	.L69:
 1170              		.align	2
 1171              	.L68:
 1172 0030 00000000 		.word	huart3
 1173              		.cfi_endproc
 1174              	.LFE137:
 1176              		.global	bufsend
 1177              		.section	.data.bufsend,"aw"
 1178              		.align	2
 1181              	bufsend:
 1182 0000 5858583A 		.ascii	"XXX: D1 D2 D3 D4 D5 D6 D7 D8  "
 1182      20443120 
 1182      44322044 
 1182      33204434 
 1182      20443520 
 1183              		.global	TimeStamp
 1184              		.section	.bss.TimeStamp,"aw",%nobits
 1185              		.align	2
 1188              	TimeStamp:
 1189 0000 00000000 		.space	4
 1190              		.global	REQ_1BYTE_DATA
 1191              		.section	.bss.REQ_1BYTE_DATA,"aw",%nobits
 1194              	REQ_1BYTE_DATA:
 1195 0000 00       		.space	1
 1196              		.global	REQ_BUFFER
 1197              		.section	.bss.REQ_BUFFER,"aw",%nobits
 1198              		.align	2
 1201              	REQ_BUFFER:
 1202 0000 00000000 		.space	4096
 1202      00000000 
 1202      00000000 
 1202      00000000 
 1202      00000000 
 1203              		.global	NumBytesReq
 1204              		.section	.bss.NumBytesReq,"aw",%nobits
 1205              		.align	1
 1208              	NumBytesReq:
 1209 0000 0000     		.space	2
 1210              		.global	CAN2_DATA_RX
 1211              		.section	.data.CAN2_DATA_RX,"aw"
 1212              		.align	2
 1215              	CAN2_DATA_RX:
 1216 0000 00000000 		.ascii	"\000\000\000\000\000\000\005\000"
 1216      00000500 
 1217              		.global	CAN2_DATA_TX
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 50


 1218              		.section	.data.CAN2_DATA_TX,"aw"
 1219              		.align	2
 1222              	CAN2_DATA_TX:
 1223 0000 00000000 		.ascii	"\000\000\000\000\000\000\002\000"
 1223      00000200 
 1224              		.global	CAN1_DATA_RX
 1225              		.section	.data.CAN1_DATA_RX,"aw"
 1226              		.align	2
 1229              	CAN1_DATA_RX:
 1230 0000 00000000 		.ascii	"\000\000\000\000\000\000\003\000"
 1230      00000300 
 1231              		.global	CAN1_DATA_TX
 1232              		.section	.data.CAN1_DATA_TX,"aw"
 1233              		.align	2
 1236              	CAN1_DATA_TX:
 1237 0000 00000000 		.ascii	"\000\000\000\000\000\000\001\000"
 1237      00000100 
 1238              		.global	CAN2_pTxMailbox
 1239              		.section	.bss.CAN2_pTxMailbox,"aw",%nobits
 1240              		.align	2
 1243              	CAN2_pTxMailbox:
 1244 0000 00000000 		.space	4
 1245              		.global	CAN1_pTxMailbox
 1246              		.section	.bss.CAN1_pTxMailbox,"aw",%nobits
 1247              		.align	2
 1250              	CAN1_pTxMailbox:
 1251 0000 00000000 		.space	4
 1252              		.global	CAN2_sFilterConfig
 1253              		.section	.bss.CAN2_sFilterConfig,"aw",%nobits
 1254              		.align	2
 1257              	CAN2_sFilterConfig:
 1258 0000 00000000 		.space	40
 1258      00000000 
 1258      00000000 
 1258      00000000 
 1258      00000000 
 1259              		.global	CAN2_pHeaderRx
 1260              		.section	.bss.CAN2_pHeaderRx,"aw",%nobits
 1261              		.align	2
 1264              	CAN2_pHeaderRx:
 1265 0000 00000000 		.space	28
 1265      00000000 
 1265      00000000 
 1265      00000000 
 1265      00000000 
 1266              		.global	CAN2_pHeader
 1267              		.section	.bss.CAN2_pHeader,"aw",%nobits
 1268              		.align	2
 1271              	CAN2_pHeader:
 1272 0000 00000000 		.space	24
 1272      00000000 
 1272      00000000 
 1272      00000000 
 1272      00000000 
 1273              		.global	CAN1_sFilterConfig
 1274              		.section	.bss.CAN1_sFilterConfig,"aw",%nobits
 1275              		.align	2
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 51


 1278              	CAN1_sFilterConfig:
 1279 0000 00000000 		.space	40
 1279      00000000 
 1279      00000000 
 1279      00000000 
 1279      00000000 
 1280              		.global	CAN1_pHeaderRx
 1281              		.section	.bss.CAN1_pHeaderRx,"aw",%nobits
 1282              		.align	2
 1285              	CAN1_pHeaderRx:
 1286 0000 00000000 		.space	28
 1286      00000000 
 1286      00000000 
 1286      00000000 
 1286      00000000 
 1287              		.global	CAN1_pHeader
 1288              		.section	.bss.CAN1_pHeader,"aw",%nobits
 1289              		.align	2
 1292              	CAN1_pHeader:
 1293 0000 00000000 		.space	24
 1293      00000000 
 1293      00000000 
 1293      00000000 
 1293      00000000 
 1294              		.global	uart3_receive
 1295              		.section	.bss.uart3_receive,"aw",%nobits
 1298              	uart3_receive:
 1299 0000 00       		.space	1
 1300              		.global	huart3
 1301              		.section	.bss.huart3,"aw",%nobits
 1302              		.align	2
 1305              	huart3:
 1306 0000 00000000 		.space	72
 1306      00000000 
 1306      00000000 
 1306      00000000 
 1306      00000000 
 1307              		.global	hcan2
 1308              		.section	.bss.hcan2,"aw",%nobits
 1309              		.align	2
 1312              	hcan2:
 1313 0000 00000000 		.space	40
 1313      00000000 
 1313      00000000 
 1313      00000000 
 1313      00000000 
 1314              		.global	hcan1
 1315              		.section	.bss.hcan1,"aw",%nobits
 1316              		.align	2
 1319              	hcan1:
 1320 0000 00000000 		.space	40
 1320      00000000 
 1320      00000000 
 1320      00000000 
 1320      00000000 
 1321              		.text
 1322              	.Letext0:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 52


 1323              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1324              		.file 4 "C:/Users/PC/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools
 1325              		.file 5 "C:/Users/PC/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools
 1326              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1327              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1328              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1329              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1330              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1331              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1332              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1333              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1334              		.file 14 "Core/Inc/CAN_Communication.h"
 1335              		.file 15 "Core/Inc/main.h"
 1336              		.file 16 "C:/Users/PC/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 1337              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1338              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1339              		.file 19 "<built-in>"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:188    .text.MX_GPIO_Init:000000c0 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:195    .text.MX_CAN1_Setup:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:201    .text.MX_CAN1_Setup:00000000 MX_CAN1_Setup
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:266    .text.MX_CAN1_Setup:0000003c $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1278   .bss.CAN1_sFilterConfig:00000000 CAN1_sFilterConfig
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1319   .bss.hcan1:00000000 hcan1
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:272    .text.MX_CAN2_Setup:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:278    .text.MX_CAN2_Setup:00000000 MX_CAN2_Setup
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:326    .text.MX_CAN2_Setup:00000024 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1257   .bss.CAN2_sFilterConfig:00000000 CAN2_sFilterConfig
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:331    .text.USART3_SendString:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:337    .text.USART3_SendString:00000000 USART3_SendString
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:380    .text.USART3_SendString:00000020 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1305   .bss.huart3:00000000 huart3
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:385    .rodata.PrintCANLog.str1.4:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:404    .text.PrintCANLog:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:410    .text.PrintCANLog:00000000 PrintCANLog
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:571    .text.PrintCANLog:000000b0 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1188   .bss.TimeStamp:00000000 TimeStamp
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1181   .data.bufsend:00000000 bufsend
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:583    .text.calc_crc:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:589    .text.calc_crc:00000000 calc_crc
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:699    .text.Error_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:705    .text.Error_Handler:00000000 Error_Handler
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:737    .text.MX_CAN1_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:742    .text.MX_CAN1_Init:00000000 MX_CAN1_Init
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:810    .text.MX_CAN1_Init:0000003c $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:816    .text.MX_CAN2_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:821    .text.MX_CAN2_Init:00000000 MX_CAN2_Init
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:889    .text.MX_CAN2_Init:0000003c $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1312   .bss.hcan2:00000000 hcan2
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:895    .text.MX_USART3_UART_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:900    .text.MX_USART3_UART_Init:00000000 MX_USART3_UART_Init
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:954    .text.MX_USART3_UART_Init:0000002c $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:960    .text.SystemClock_Config:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:966    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1111   .text.SystemClock_Config:0000009c $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1117   .text.main:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1123   .text.main:00000000 main
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1172   .text.main:00000030 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1178   .data.bufsend:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1185   .bss.TimeStamp:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1194   .bss.REQ_1BYTE_DATA:00000000 REQ_1BYTE_DATA
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1195   .bss.REQ_1BYTE_DATA:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1201   .bss.REQ_BUFFER:00000000 REQ_BUFFER
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1198   .bss.REQ_BUFFER:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1208   .bss.NumBytesReq:00000000 NumBytesReq
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1205   .bss.NumBytesReq:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1215   .data.CAN2_DATA_RX:00000000 CAN2_DATA_RX
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1212   .data.CAN2_DATA_RX:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1222   .data.CAN2_DATA_TX:00000000 CAN2_DATA_TX
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1219   .data.CAN2_DATA_TX:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1229   .data.CAN1_DATA_RX:00000000 CAN1_DATA_RX
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s 			page 54


C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1226   .data.CAN1_DATA_RX:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1236   .data.CAN1_DATA_TX:00000000 CAN1_DATA_TX
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1233   .data.CAN1_DATA_TX:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1243   .bss.CAN2_pTxMailbox:00000000 CAN2_pTxMailbox
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1240   .bss.CAN2_pTxMailbox:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1250   .bss.CAN1_pTxMailbox:00000000 CAN1_pTxMailbox
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1247   .bss.CAN1_pTxMailbox:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1254   .bss.CAN2_sFilterConfig:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1264   .bss.CAN2_pHeaderRx:00000000 CAN2_pHeaderRx
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1261   .bss.CAN2_pHeaderRx:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1271   .bss.CAN2_pHeader:00000000 CAN2_pHeader
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1268   .bss.CAN2_pHeader:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1275   .bss.CAN1_sFilterConfig:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1285   .bss.CAN1_pHeaderRx:00000000 CAN1_pHeaderRx
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1282   .bss.CAN1_pHeaderRx:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1292   .bss.CAN1_pHeader:00000000 CAN1_pHeader
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1289   .bss.CAN1_pHeader:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1298   .bss.uart3_receive:00000000 uart3_receive
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1299   .bss.uart3_receive:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1302   .bss.huart3:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1309   .bss.hcan2:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccTy7NCJ.s:1316   .bss.hcan1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_UART_Transmit
sprintf
HAL_CAN_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
