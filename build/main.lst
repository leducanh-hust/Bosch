ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB143:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "UDS.h"
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  44:Core/Src/main.c **** CAN_HandleTypeDef hcan2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** UART_HandleTypeDef huart3;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** uint8_t uart3_receive;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** CAN_TxHeaderTypeDef CAN1_pHeader;
  54:Core/Src/main.c **** CAN_RxHeaderTypeDef CAN1_pHeaderRx;
  55:Core/Src/main.c **** CAN_FilterTypeDef CAN1_sFilterConfig;
  56:Core/Src/main.c **** CAN_TxHeaderTypeDef CAN2_pHeader;
  57:Core/Src/main.c **** CAN_RxHeaderTypeDef CAN2_pHeaderRx;
  58:Core/Src/main.c **** CAN_FilterTypeDef CAN2_sFilterConfig;
  59:Core/Src/main.c **** uint32_t CAN1_pTxMailbox;
  60:Core/Src/main.c **** uint32_t CAN2_pTxMailbox;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** uint16_t NumBytesReq = 0;
  63:Core/Src/main.c **** uint8_t REQ_BUFFER[4096];
  64:Core/Src/main.c **** uint8_t REQ_1BYTE_DATA;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** uint8_t CAN1_DATA_TX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  67:Core/Src/main.c **** uint8_t CAN1_DATA_RX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  68:Core/Src/main.c **** uint8_t CAN2_DATA_TX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  69:Core/Src/main.c **** uint8_t CAN2_DATA_RX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** // uint16_t Num_Consecutive_Tester;
  72:Core/Src/main.c **** // uint8_t Flg_Consecutive = 0;
  73:Core/Src/main.c **** volatile uint8_t flag_CAN1_Received = 0;
  74:Core/Src/main.c **** volatile uint8_t flag_CAN2_Received = 0;
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** unsigned int TimeStamp;
  77:Core/Src/main.c **** // maximum characters send out via UART is 30
  78:Core/Src/main.c **** char bufsend[30] = "XXX: D1 D2 D3 D4 D5 D6 D7 D8  ";
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE END PV */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  83:Core/Src/main.c **** void SystemClock_Config(void);
  84:Core/Src/main.c **** static void MX_GPIO_Init(void);
  85:Core/Src/main.c **** static void MX_CAN1_Init(void);
  86:Core/Src/main.c **** static void MX_CAN2_Init(void);
  87:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  88:Core/Src/main.c **** static void MX_TIM2_Init(void);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 3


  89:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** // CAN setup and config functions
  92:Core/Src/main.c **** void MX_CAN1_Setup();
  93:Core/Src/main.c **** void MX_CAN2_Setup();
  94:Core/Src/main.c **** void CAN1_Config();
  95:Core/Src/main.c **** void CAN2_Config();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** // UART send and display functions
  98:Core/Src/main.c **** void PrintCANLog(uint16_t CANID, uint8_t *CAN_Frame);
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
 101:Core/Src/main.c **** /* USER CODE END PFP */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 104:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /* USER CODE END 0 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /**
 109:Core/Src/main.c ****  * @brief  The application entry point.
 110:Core/Src/main.c ****  * @retval int
 111:Core/Src/main.c ****  */
 112:Core/Src/main.c **** int main(void)
 113:Core/Src/main.c **** {
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END 1 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 122:Core/Src/main.c ****   HAL_Init();
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END Init */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Configure the system clock */
 129:Core/Src/main.c ****   SystemClock_Config();
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE END SysInit */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Initialize all configured peripherals */
 136:Core/Src/main.c ****   MX_GPIO_Init();
 137:Core/Src/main.c ****   MX_CAN1_Init();
 138:Core/Src/main.c ****   MX_CAN2_Init();
 139:Core/Src/main.c ****   MX_USART3_UART_Init();
 140:Core/Src/main.c ****   MX_TIM2_Init();
 141:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 142:Core/Src/main.c ****   MX_CAN1_Setup();
 143:Core/Src/main.c ****   MX_CAN2_Setup();
 144:Core/Src/main.c ****   CAN1_Config();
 145:Core/Src/main.c ****   CAN2_Config();
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart3, UART_IT_RXNE);
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   USART3_SendString((uint8_t *)"Coder Lazada\n");
 150:Core/Src/main.c ****   while (1)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     if (NumBytesReq != 0)
 153:Core/Src/main.c ****     {
 154:Core/Src/main.c ****       HAL_Delay(100);
 155:Core/Src/main.c ****       UART_ReadString(REQ_BUFFER, CAN1_DATA_TX, NumBytesReq);
 156:Core/Src/main.c ****       CAN1_Send();
 157:Core/Src/main.c ****       HAL_Delay(100);
 158:Core/Src/main.c ****       NumBytesReq = 0;
 159:Core/Src/main.c ****     }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     if (flag_CAN2_Received)
 162:Core/Src/main.c ****     {
 163:Core/Src/main.c ****       switch (REQ_BUFFER[0])
 164:Core/Src/main.c ****       {
 165:Core/Src/main.c ****       case 0x27:
 166:Core/Src/main.c ****         SID27_Practice(CAN2_DATA_TX, CAN2_DATA_RX);
 167:Core/Src/main.c ****         break;
 168:Core/Src/main.c ****       case 0x22:
 169:Core/Src/main.c ****         SID22_Practice(CAN2_DATA_TX, CAN2_DATA_RX);
 170:Core/Src/main.c ****         break;
 171:Core/Src/main.c ****       case 0x2E:
 172:Core/Src/main.c ****         SID2E_Practice(CAN2_DATA_TX, CAN2_DATA_RX);
 173:Core/Src/main.c ****         break;
 174:Core/Src/main.c ****       default:
 175:Core/Src/main.c ****         USART3_SendString((uint8_t *)"Service not support\n");
 176:Core/Src/main.c ****         break;
 177:Core/Src/main.c ****       }
 178:Core/Src/main.c ****       flag_CAN2_Received = 0;
 179:Core/Src/main.c ****     }
 180:Core/Src/main.c ****     if (flag_CAN1_Received)
 181:Core/Src/main.c ****     {
 182:Core/Src/main.c ****       USART3_SendString((uint8_t *)"ECU Response: ");
 183:Core/Src/main.c ****       PrintCANLog(CAN1_pHeaderRx.StdId, CAN1_DATA_RX);
 184:Core/Src/main.c ****       flag_CAN1_Received = 0;
 185:Core/Src/main.c ****     }
 186:Core/Src/main.c ****     if (!BtnU) /*IG OFF->ON stimulation*/
 187:Core/Src/main.c ****     {
 188:Core/Src/main.c ****       HAL_Delay(20);
 189:Core/Src/main.c ****       USART3_SendString((uint8_t *)"IG OFF ");
 190:Core/Src/main.c ****       while (!BtnU)
 191:Core/Src/main.c ****         ;
 192:Core/Src/main.c ****       CAN1_pHeader.StdId = newStdId;
 193:Core/Src/main.c ****       CAN2_Config();
 194:Core/Src/main.c ****       MX_CAN1_Setup();
 195:Core/Src/main.c ****       MX_CAN2_Setup();
 196:Core/Src/main.c ****       USART3_SendString((uint8_t *)"-> IG ON \n");
 197:Core/Src/main.c ****       HAL_Delay(20);
 198:Core/Src/main.c ****     }
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END 2 */
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 5


 203:Core/Src/main.c ****   /* Infinite loop */
 204:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 205:Core/Src/main.c ****   // while (1)
 206:Core/Src/main.c ****   // {
 207:Core/Src/main.c ****   /* USER CODE END WHILE */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE BEGIN 3 */
 210:Core/Src/main.c ****   // }
 211:Core/Src/main.c ****   memset(REQ_BUFFER, 0, sizeof(REQ_BUFFER));
 212:Core/Src/main.c ****   NumBytesReq = 0;
 213:Core/Src/main.c ****   /* USER CODE END 3 */
 214:Core/Src/main.c **** }
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** /**
 217:Core/Src/main.c ****  * @brief System Clock Configuration
 218:Core/Src/main.c ****  * @retval None
 219:Core/Src/main.c ****  */
 220:Core/Src/main.c **** void SystemClock_Config(void)
 221:Core/Src/main.c **** {
 222:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 223:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 226:Core/Src/main.c ****    */
 227:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 228:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 231:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 232:Core/Src/main.c ****    */
 233:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 234:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 235:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 238:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 239:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 240:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 241:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 242:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 243:Core/Src/main.c ****   {
 244:Core/Src/main.c ****     Error_Handler();
 245:Core/Src/main.c ****   }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 248:Core/Src/main.c ****    */
 249:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 250:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 251:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 252:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 253:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 256:Core/Src/main.c ****   {
 257:Core/Src/main.c ****     Error_Handler();
 258:Core/Src/main.c ****   }
 259:Core/Src/main.c **** }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** /**
 262:Core/Src/main.c ****  * @brief CAN1 Initialization Function
 263:Core/Src/main.c ****  * @param None
 264:Core/Src/main.c ****  * @retval None
 265:Core/Src/main.c ****  */
 266:Core/Src/main.c **** static void MX_CAN1_Init(void)
 267:Core/Src/main.c **** {
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 276:Core/Src/main.c ****   hcan1.Instance = CAN1;
 277:Core/Src/main.c ****   hcan1.Init.Prescaler = 1;
 278:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 279:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 280:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 281:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 282:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 283:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 284:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 285:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 286:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 287:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 288:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****     Error_Handler();
 291:Core/Src/main.c ****   }
 292:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 295:Core/Src/main.c **** }
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** /**
 298:Core/Src/main.c ****  * @brief CAN2 Initialization Function
 299:Core/Src/main.c ****  * @param None
 300:Core/Src/main.c ****  * @retval None
 301:Core/Src/main.c ****  */
 302:Core/Src/main.c **** static void MX_CAN2_Init(void)
 303:Core/Src/main.c **** {
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 0 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE END CAN2_Init 0 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 1 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* USER CODE END CAN2_Init 1 */
 312:Core/Src/main.c ****   hcan2.Instance = CAN2;
 313:Core/Src/main.c ****   hcan2.Init.Prescaler = 1;
 314:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 315:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 316:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 7


 317:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
 318:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 319:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 320:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 321:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 322:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 323:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 324:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     Error_Handler();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 2 */
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* USER CODE END CAN2_Init 2 */
 331:Core/Src/main.c **** }
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** /**
 334:Core/Src/main.c ****  * @brief TIM2 Initialization Function
 335:Core/Src/main.c ****  * @param None
 336:Core/Src/main.c ****  * @retval None
 337:Core/Src/main.c ****  */
 338:Core/Src/main.c **** static void MX_TIM2_Init(void)
 339:Core/Src/main.c **** {
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 346:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 351:Core/Src/main.c ****   htim2.Instance = TIM2;
 352:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 353:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 354:Core/Src/main.c ****   htim2.Init.Period = 49999;
 355:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 356:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 357:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 358:Core/Src/main.c ****   {
 359:Core/Src/main.c ****     Error_Handler();
 360:Core/Src/main.c ****   }
 361:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 362:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 363:Core/Src/main.c ****   {
 364:Core/Src/main.c ****     Error_Handler();
 365:Core/Src/main.c ****   }
 366:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 367:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 368:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 369:Core/Src/main.c ****   {
 370:Core/Src/main.c ****     Error_Handler();
 371:Core/Src/main.c ****   }
 372:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 373:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 8


 374:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 375:Core/Src/main.c **** }
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** /**
 378:Core/Src/main.c ****  * @brief USART3 Initialization Function
 379:Core/Src/main.c ****  * @param None
 380:Core/Src/main.c ****  * @retval None
 381:Core/Src/main.c ****  */
 382:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 383:Core/Src/main.c **** {
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 392:Core/Src/main.c ****   huart3.Instance = USART3;
 393:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 394:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 395:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 396:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 397:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 398:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 399:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 400:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 401:Core/Src/main.c ****   {
 402:Core/Src/main.c ****     Error_Handler();
 403:Core/Src/main.c ****   }
 404:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 407:Core/Src/main.c **** }
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** /**
 410:Core/Src/main.c ****  * @brief GPIO Initialization Function
 411:Core/Src/main.c ****  * @param None
 412:Core/Src/main.c ****  * @retval None
 413:Core/Src/main.c ****  */
 414:Core/Src/main.c **** static void MX_GPIO_Init(void)
 415:Core/Src/main.c **** {
  28              		.loc 1 415 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 8AB0     		sub	sp, sp, #40
  39              		.cfi_def_cfa_offset 56
 416:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 416 3 view .LVU1
  41              		.loc 1 416 20 is_stmt 0 view .LVU2
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 9


  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
 417:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 418:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 421:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 421 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 421 3 view .LVU4
  51 0010 0194     		str	r4, [sp, #4]
  52              		.loc 1 421 3 view .LVU5
  53 0012 264B     		ldr	r3, .L3
  54 0014 1A6B     		ldr	r2, [r3, #48]
  55 0016 42F00402 		orr	r2, r2, #4
  56 001a 1A63     		str	r2, [r3, #48]
  57              		.loc 1 421 3 view .LVU6
  58 001c 1A6B     		ldr	r2, [r3, #48]
  59 001e 02F00402 		and	r2, r2, #4
  60 0022 0192     		str	r2, [sp, #4]
  61              		.loc 1 421 3 view .LVU7
  62 0024 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              		.loc 1 421 3 view .LVU8
 422:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  65              		.loc 1 422 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 422 3 view .LVU10
  68 0026 0294     		str	r4, [sp, #8]
  69              		.loc 1 422 3 view .LVU11
  70 0028 1A6B     		ldr	r2, [r3, #48]
  71 002a 42F08002 		orr	r2, r2, #128
  72 002e 1A63     		str	r2, [r3, #48]
  73              		.loc 1 422 3 view .LVU12
  74 0030 1A6B     		ldr	r2, [r3, #48]
  75 0032 02F08002 		and	r2, r2, #128
  76 0036 0292     		str	r2, [sp, #8]
  77              		.loc 1 422 3 view .LVU13
  78 0038 029A     		ldr	r2, [sp, #8]
  79              	.LBE5:
  80              		.loc 1 422 3 view .LVU14
 423:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  81              		.loc 1 423 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 423 3 view .LVU16
  84 003a 0394     		str	r4, [sp, #12]
  85              		.loc 1 423 3 view .LVU17
  86 003c 1A6B     		ldr	r2, [r3, #48]
  87 003e 42F00102 		orr	r2, r2, #1
  88 0042 1A63     		str	r2, [r3, #48]
  89              		.loc 1 423 3 view .LVU18
  90 0044 1A6B     		ldr	r2, [r3, #48]
  91 0046 02F00102 		and	r2, r2, #1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 10


  92 004a 0392     		str	r2, [sp, #12]
  93              		.loc 1 423 3 view .LVU19
  94 004c 039A     		ldr	r2, [sp, #12]
  95              	.LBE6:
  96              		.loc 1 423 3 view .LVU20
 424:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  97              		.loc 1 424 3 view .LVU21
  98              	.LBB7:
  99              		.loc 1 424 3 view .LVU22
 100 004e 0494     		str	r4, [sp, #16]
 101              		.loc 1 424 3 view .LVU23
 102 0050 1A6B     		ldr	r2, [r3, #48]
 103 0052 42F00202 		orr	r2, r2, #2
 104 0056 1A63     		str	r2, [r3, #48]
 105              		.loc 1 424 3 view .LVU24
 106 0058 1B6B     		ldr	r3, [r3, #48]
 107 005a 03F00203 		and	r3, r3, #2
 108 005e 0493     		str	r3, [sp, #16]
 109              		.loc 1 424 3 view .LVU25
 110 0060 049B     		ldr	r3, [sp, #16]
 111              	.LBE7:
 112              		.loc 1 424 3 view .LVU26
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   /*Configure GPIO pins : PC13 PC4 PC5 PC6
 427:Core/Src/main.c ****                            PC7 */
 428:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;
 113              		.loc 1 428 3 view .LVU27
 114              		.loc 1 428 23 is_stmt 0 view .LVU28
 115 0062 42F2F003 		movw	r3, #8432
 116 0066 0593     		str	r3, [sp, #20]
 429:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 117              		.loc 1 429 3 is_stmt 1 view .LVU29
 430:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 118              		.loc 1 430 3 view .LVU30
 119              		.loc 1 430 24 is_stmt 0 view .LVU31
 120 0068 0125     		movs	r5, #1
 121 006a 0795     		str	r5, [sp, #28]
 431:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 122              		.loc 1 431 3 is_stmt 1 view .LVU32
 123 006c 05A9     		add	r1, sp, #20
 124 006e 1048     		ldr	r0, .L3+4
 125 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL0:
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 434:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 127              		.loc 1 434 3 view .LVU33
 128              		.loc 1 434 23 is_stmt 0 view .LVU34
 129 0074 0595     		str	r5, [sp, #20]
 435:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 130              		.loc 1 435 3 is_stmt 1 view .LVU35
 131              		.loc 1 435 24 is_stmt 0 view .LVU36
 132 0076 4FF40413 		mov	r3, #2162688
 133 007a 0693     		str	r3, [sp, #24]
 436:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 134              		.loc 1 436 3 is_stmt 1 view .LVU37
 135              		.loc 1 436 24 is_stmt 0 view .LVU38
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 11


 136 007c 0795     		str	r5, [sp, #28]
 437:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 137              		.loc 1 437 3 is_stmt 1 view .LVU39
 138 007e 0D4E     		ldr	r6, .L3+8
 139 0080 05A9     		add	r1, sp, #20
 140 0082 3046     		mov	r0, r6
 141 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 142              	.LVL1:
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 440:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 143              		.loc 1 440 3 view .LVU40
 144              		.loc 1 440 23 is_stmt 0 view .LVU41
 145 0088 0223     		movs	r3, #2
 146 008a 0593     		str	r3, [sp, #20]
 441:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 147              		.loc 1 441 3 is_stmt 1 view .LVU42
 148              		.loc 1 441 24 is_stmt 0 view .LVU43
 149 008c 0694     		str	r4, [sp, #24]
 442:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 150              		.loc 1 442 3 is_stmt 1 view .LVU44
 151              		.loc 1 442 24 is_stmt 0 view .LVU45
 152 008e 0794     		str	r4, [sp, #28]
 443:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 153              		.loc 1 443 3 is_stmt 1 view .LVU46
 154 0090 05A9     		add	r1, sp, #20
 155 0092 3046     		mov	r0, r6
 156 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 157              	.LVL2:
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /* EXTI interrupt init*/
 446:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 1, 0);
 158              		.loc 1 446 3 view .LVU47
 159 0098 2246     		mov	r2, r4
 160 009a 2946     		mov	r1, r5
 161 009c 0620     		movs	r0, #6
 162 009e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 163              	.LVL3:
 447:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 164              		.loc 1 447 3 view .LVU48
 165 00a2 0620     		movs	r0, #6
 166 00a4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 167              	.LVL4:
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 450:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 451:Core/Src/main.c **** }
 168              		.loc 1 451 1 is_stmt 0 view .LVU49
 169 00a8 0AB0     		add	sp, sp, #40
 170              		.cfi_def_cfa_offset 16
 171              		@ sp needed
 172 00aa 70BD     		pop	{r4, r5, r6, pc}
 173              	.L4:
 174              		.align	2
 175              	.L3:
 176 00ac 00380240 		.word	1073887232
 177 00b0 00080240 		.word	1073874944
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 12


 178 00b4 00000240 		.word	1073872896
 179              		.cfi_endproc
 180              	.LFE143:
 182              		.section	.text.CAN1_Config,"ax",%progbits
 183              		.align	1
 184              		.global	CAN1_Config
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 189              	CAN1_Config:
 190              	.LFB144:
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 454:Core/Src/main.c **** 
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** void CAN1_Config()
 457:Core/Src/main.c **** {
 191              		.loc 1 457 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 08B5     		push	{r3, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 3, -8
 198              		.cfi_offset 14, -4
 458:Core/Src/main.c ****   CAN1_pHeader.IDE = CAN_ID_STD;
 199              		.loc 1 458 3 view .LVU51
 200              		.loc 1 458 20 is_stmt 0 view .LVU52
 201 0002 0E4A     		ldr	r2, .L7
 202 0004 0023     		movs	r3, #0
 203 0006 9360     		str	r3, [r2, #8]
 459:Core/Src/main.c ****   CAN1_pHeader.StdId = 0x7FF;
 204              		.loc 1 459 3 is_stmt 1 view .LVU53
 205              		.loc 1 459 22 is_stmt 0 view .LVU54
 206 0008 40F2FF71 		movw	r1, #2047
 207 000c 1160     		str	r1, [r2]
 460:Core/Src/main.c ****   CAN1_pHeader.RTR = CAN_RTR_DATA;
 208              		.loc 1 460 3 is_stmt 1 view .LVU55
 209              		.loc 1 460 20 is_stmt 0 view .LVU56
 210 000e D360     		str	r3, [r2, #12]
 461:Core/Src/main.c ****   CAN1_pHeader.DLC = 8;
 211              		.loc 1 461 3 is_stmt 1 view .LVU57
 212              		.loc 1 461 20 is_stmt 0 view .LVU58
 213 0010 0821     		movs	r1, #8
 214 0012 1161     		str	r1, [r2, #16]
 462:Core/Src/main.c ****   CAN1_sFilterConfig.FilterActivation = CAN_FILTER_ENABLE;
 215              		.loc 1 462 3 is_stmt 1 view .LVU59
 216              		.loc 1 462 39 is_stmt 0 view .LVU60
 217 0014 0A49     		ldr	r1, .L7+4
 218 0016 0122     		movs	r2, #1
 219 0018 0A62     		str	r2, [r1, #32]
 463:Core/Src/main.c ****   CAN1_sFilterConfig.FilterBank = 14;
 220              		.loc 1 463 3 is_stmt 1 view .LVU61
 221              		.loc 1 463 33 is_stmt 0 view .LVU62
 222 001a 0E20     		movs	r0, #14
 223 001c 4861     		str	r0, [r1, #20]
 464:Core/Src/main.c ****   CAN1_sFilterConfig.FilterFIFOAssignment = CAN_FILTER_FIFO0;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 13


 224              		.loc 1 464 3 is_stmt 1 view .LVU63
 225              		.loc 1 464 43 is_stmt 0 view .LVU64
 226 001e 0B61     		str	r3, [r1, #16]
 465:Core/Src/main.c ****   CAN1_sFilterConfig.FilterIdHigh = 0x0A2 << 5;
 227              		.loc 1 465 3 is_stmt 1 view .LVU65
 228              		.loc 1 465 35 is_stmt 0 view .LVU66
 229 0020 4FF4A250 		mov	r0, #5184
 230 0024 0860     		str	r0, [r1]
 466:Core/Src/main.c ****   CAN1_sFilterConfig.FilterIdLow = 0;
 231              		.loc 1 466 3 is_stmt 1 view .LVU67
 232              		.loc 1 466 34 is_stmt 0 view .LVU68
 233 0026 4B60     		str	r3, [r1, #4]
 467:Core/Src/main.c ****   CAN1_sFilterConfig.FilterMaskIdHigh = 0x0A2 << 5;
 234              		.loc 1 467 3 is_stmt 1 view .LVU69
 235              		.loc 1 467 39 is_stmt 0 view .LVU70
 236 0028 8860     		str	r0, [r1, #8]
 468:Core/Src/main.c ****   CAN1_sFilterConfig.FilterMaskIdLow = 0;
 237              		.loc 1 468 3 is_stmt 1 view .LVU71
 238              		.loc 1 468 38 is_stmt 0 view .LVU72
 239 002a CB60     		str	r3, [r1, #12]
 469:Core/Src/main.c ****   CAN1_sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 240              		.loc 1 469 3 is_stmt 1 view .LVU73
 241              		.loc 1 469 33 is_stmt 0 view .LVU74
 242 002c 8B61     		str	r3, [r1, #24]
 470:Core/Src/main.c ****   CAN1_sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 243              		.loc 1 470 3 is_stmt 1 view .LVU75
 244              		.loc 1 470 34 is_stmt 0 view .LVU76
 245 002e CA61     		str	r2, [r1, #28]
 471:Core/Src/main.c ****   CAN1_sFilterConfig.SlaveStartFilterBank = 16;
 246              		.loc 1 471 3 is_stmt 1 view .LVU77
 247              		.loc 1 471 43 is_stmt 0 view .LVU78
 248 0030 1023     		movs	r3, #16
 249 0032 4B62     		str	r3, [r1, #36]
 472:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan1, &CAN1_sFilterConfig);
 250              		.loc 1 472 3 is_stmt 1 view .LVU79
 251 0034 0348     		ldr	r0, .L7+8
 252 0036 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 253              	.LVL5:
 473:Core/Src/main.c **** }
 254              		.loc 1 473 1 is_stmt 0 view .LVU80
 255 003a 08BD     		pop	{r3, pc}
 256              	.L8:
 257              		.align	2
 258              	.L7:
 259 003c 00000000 		.word	CAN1_pHeader
 260 0040 00000000 		.word	CAN1_sFilterConfig
 261 0044 00000000 		.word	hcan1
 262              		.cfi_endproc
 263              	.LFE144:
 265              		.section	.text.CAN2_Config,"ax",%progbits
 266              		.align	1
 267              		.global	CAN2_Config
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 272              	CAN2_Config:
 273              	.LFB145:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 14


 474:Core/Src/main.c **** 
 475:Core/Src/main.c **** void CAN2_Config()
 476:Core/Src/main.c **** {
 274              		.loc 1 476 1 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278 0000 08B5     		push	{r3, lr}
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 3, -8
 281              		.cfi_offset 14, -4
 477:Core/Src/main.c ****   CAN2_pHeader.IDE = CAN_ID_STD;
 282              		.loc 1 477 3 view .LVU82
 283              		.loc 1 477 20 is_stmt 0 view .LVU83
 284 0002 0D4A     		ldr	r2, .L11
 285 0004 0023     		movs	r3, #0
 286 0006 9360     		str	r3, [r2, #8]
 478:Core/Src/main.c ****   CAN2_pHeader.StdId = 0x0A2;
 287              		.loc 1 478 3 is_stmt 1 view .LVU84
 288              		.loc 1 478 22 is_stmt 0 view .LVU85
 289 0008 A221     		movs	r1, #162
 290 000a 1160     		str	r1, [r2]
 479:Core/Src/main.c ****   CAN2_pHeader.RTR = CAN_RTR_DATA;
 291              		.loc 1 479 3 is_stmt 1 view .LVU86
 292              		.loc 1 479 20 is_stmt 0 view .LVU87
 293 000c D360     		str	r3, [r2, #12]
 480:Core/Src/main.c ****   CAN2_pHeader.DLC = 8;
 294              		.loc 1 480 3 is_stmt 1 view .LVU88
 295              		.loc 1 480 20 is_stmt 0 view .LVU89
 296 000e 0821     		movs	r1, #8
 297 0010 1161     		str	r1, [r2, #16]
 481:Core/Src/main.c ****   CAN2_sFilterConfig.FilterActivation = CAN_FILTER_ENABLE;
 298              		.loc 1 481 3 is_stmt 1 view .LVU90
 299              		.loc 1 481 39 is_stmt 0 view .LVU91
 300 0012 0A49     		ldr	r1, .L11+4
 301 0014 0120     		movs	r0, #1
 302 0016 0862     		str	r0, [r1, #32]
 482:Core/Src/main.c ****   CAN2_sFilterConfig.FilterBank = 18;
 303              		.loc 1 482 3 is_stmt 1 view .LVU92
 304              		.loc 1 482 33 is_stmt 0 view .LVU93
 305 0018 1222     		movs	r2, #18
 306 001a 4A61     		str	r2, [r1, #20]
 483:Core/Src/main.c ****   CAN2_sFilterConfig.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 307              		.loc 1 483 3 is_stmt 1 view .LVU94
 308              		.loc 1 483 43 is_stmt 0 view .LVU95
 309 001c 0B61     		str	r3, [r1, #16]
 484:Core/Src/main.c ****   CAN2_sFilterConfig.FilterIdHigh = CAN1_pHeader.StdId << 5;
 310              		.loc 1 484 3 is_stmt 1 view .LVU96
 311              		.loc 1 484 49 is_stmt 0 view .LVU97
 312 001e 084A     		ldr	r2, .L11+8
 313 0020 1268     		ldr	r2, [r2]
 314              		.loc 1 484 56 view .LVU98
 315 0022 5201     		lsls	r2, r2, #5
 316              		.loc 1 484 35 view .LVU99
 317 0024 0A60     		str	r2, [r1]
 485:Core/Src/main.c ****   CAN2_sFilterConfig.FilterIdLow = 0;
 318              		.loc 1 485 3 is_stmt 1 view .LVU100
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 15


 319              		.loc 1 485 34 is_stmt 0 view .LVU101
 320 0026 4B60     		str	r3, [r1, #4]
 486:Core/Src/main.c ****   CAN2_sFilterConfig.FilterMaskIdHigh = CAN1_pHeader.StdId << 5;
 321              		.loc 1 486 3 is_stmt 1 view .LVU102
 322              		.loc 1 486 39 is_stmt 0 view .LVU103
 323 0028 8A60     		str	r2, [r1, #8]
 487:Core/Src/main.c ****   CAN2_sFilterConfig.FilterMaskIdLow = 0;
 324              		.loc 1 487 3 is_stmt 1 view .LVU104
 325              		.loc 1 487 38 is_stmt 0 view .LVU105
 326 002a CB60     		str	r3, [r1, #12]
 488:Core/Src/main.c ****   CAN2_sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 327              		.loc 1 488 3 is_stmt 1 view .LVU106
 328              		.loc 1 488 33 is_stmt 0 view .LVU107
 329 002c 8B61     		str	r3, [r1, #24]
 489:Core/Src/main.c ****   CAN2_sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 330              		.loc 1 489 3 is_stmt 1 view .LVU108
 331              		.loc 1 489 34 is_stmt 0 view .LVU109
 332 002e C861     		str	r0, [r1, #28]
 490:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan2, &CAN2_sFilterConfig);
 333              		.loc 1 490 3 is_stmt 1 view .LVU110
 334 0030 0448     		ldr	r0, .L11+12
 335 0032 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 336              	.LVL6:
 491:Core/Src/main.c **** }
 337              		.loc 1 491 1 is_stmt 0 view .LVU111
 338 0036 08BD     		pop	{r3, pc}
 339              	.L12:
 340              		.align	2
 341              	.L11:
 342 0038 00000000 		.word	CAN2_pHeader
 343 003c 00000000 		.word	CAN2_sFilterConfig
 344 0040 00000000 		.word	CAN1_pHeader
 345 0044 00000000 		.word	hcan2
 346              		.cfi_endproc
 347              	.LFE145:
 349              		.section	.text.MX_CAN1_Setup,"ax",%progbits
 350              		.align	1
 351              		.global	MX_CAN1_Setup
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 356              	MX_CAN1_Setup:
 357              	.LFB146:
 492:Core/Src/main.c **** 
 493:Core/Src/main.c **** void MX_CAN1_Setup()
 494:Core/Src/main.c **** {
 358              		.loc 1 494 1 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362 0000 10B5     		push	{r4, lr}
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 4, -8
 365              		.cfi_offset 14, -4
 495:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan1, &CAN1_sFilterConfig);
 366              		.loc 1 495 3 view .LVU113
 367 0002 064C     		ldr	r4, .L15
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 16


 368 0004 0649     		ldr	r1, .L15+4
 369 0006 2046     		mov	r0, r4
 370 0008 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 371              	.LVL7:
 496:Core/Src/main.c ****   HAL_CAN_Start(&hcan1);
 372              		.loc 1 496 3 view .LVU114
 373 000c 2046     		mov	r0, r4
 374 000e FFF7FEFF 		bl	HAL_CAN_Start
 375              	.LVL8:
 497:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 376              		.loc 1 497 3 view .LVU115
 377 0012 0221     		movs	r1, #2
 378 0014 2046     		mov	r0, r4
 379 0016 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 380              	.LVL9:
 498:Core/Src/main.c **** }
 381              		.loc 1 498 1 is_stmt 0 view .LVU116
 382 001a 10BD     		pop	{r4, pc}
 383              	.L16:
 384              		.align	2
 385              	.L15:
 386 001c 00000000 		.word	hcan1
 387 0020 00000000 		.word	CAN1_sFilterConfig
 388              		.cfi_endproc
 389              	.LFE146:
 391              		.section	.text.MX_CAN2_Setup,"ax",%progbits
 392              		.align	1
 393              		.global	MX_CAN2_Setup
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 398              	MX_CAN2_Setup:
 399              	.LFB147:
 499:Core/Src/main.c **** void MX_CAN2_Setup()
 500:Core/Src/main.c **** {
 400              		.loc 1 500 1 is_stmt 1 view -0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404 0000 10B5     		push	{r4, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 4, -8
 407              		.cfi_offset 14, -4
 501:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan2, &CAN2_sFilterConfig);
 408              		.loc 1 501 3 view .LVU118
 409 0002 064C     		ldr	r4, .L19
 410 0004 0649     		ldr	r1, .L19+4
 411 0006 2046     		mov	r0, r4
 412 0008 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 413              	.LVL10:
 502:Core/Src/main.c ****   HAL_CAN_Start(&hcan2);
 414              		.loc 1 502 3 view .LVU119
 415 000c 2046     		mov	r0, r4
 416 000e FFF7FEFF 		bl	HAL_CAN_Start
 417              	.LVL11:
 503:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING);
 418              		.loc 1 503 3 view .LVU120
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 17


 419 0012 0221     		movs	r1, #2
 420 0014 2046     		mov	r0, r4
 421 0016 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 422              	.LVL12:
 504:Core/Src/main.c **** }
 423              		.loc 1 504 1 is_stmt 0 view .LVU121
 424 001a 10BD     		pop	{r4, pc}
 425              	.L20:
 426              		.align	2
 427              	.L19:
 428 001c 00000000 		.word	hcan2
 429 0020 00000000 		.word	CAN2_sFilterConfig
 430              		.cfi_endproc
 431              	.LFE147:
 433              		.section	.text.USART3_SendString,"ax",%progbits
 434              		.align	1
 435              		.global	USART3_SendString
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 440              	USART3_SendString:
 441              	.LVL13:
 442              	.LFB148:
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** void USART3_SendString(uint8_t *ch)
 507:Core/Src/main.c **** {
 443              		.loc 1 507 1 is_stmt 1 view -0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		.loc 1 507 1 is_stmt 0 view .LVU123
 448 0000 10B5     		push	{r4, lr}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 4, -8
 451              		.cfi_offset 14, -4
 452 0002 0446     		mov	r4, r0
 508:Core/Src/main.c ****   while (*ch != 0)
 453              		.loc 1 508 3 is_stmt 1 view .LVU124
 454              		.loc 1 508 9 is_stmt 0 view .LVU125
 455 0004 07E0     		b	.L22
 456              	.LVL14:
 457              	.L23:
 509:Core/Src/main.c ****   {
 510:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, ch, 1, HAL_MAX_DELAY);
 458              		.loc 1 510 5 is_stmt 1 view .LVU126
 459 0006 4FF0FF33 		mov	r3, #-1
 460 000a 0122     		movs	r2, #1
 461 000c 2146     		mov	r1, r4
 462 000e 0448     		ldr	r0, .L25
 463 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 464              	.LVL15:
 511:Core/Src/main.c ****     ch++;
 465              		.loc 1 511 5 view .LVU127
 466              		.loc 1 511 7 is_stmt 0 view .LVU128
 467 0014 0134     		adds	r4, r4, #1
 468              	.LVL16:
 469              	.L22:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 18


 508:Core/Src/main.c ****   while (*ch != 0)
 470              		.loc 1 508 14 is_stmt 1 view .LVU129
 508:Core/Src/main.c ****   while (*ch != 0)
 471              		.loc 1 508 10 is_stmt 0 view .LVU130
 472 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 508:Core/Src/main.c ****   while (*ch != 0)
 473              		.loc 1 508 14 view .LVU131
 474 0018 002B     		cmp	r3, #0
 475 001a F4D1     		bne	.L23
 512:Core/Src/main.c ****   }
 513:Core/Src/main.c **** }
 476              		.loc 1 513 1 view .LVU132
 477 001c 10BD     		pop	{r4, pc}
 478              	.LVL17:
 479              	.L26:
 480              		.loc 1 513 1 view .LVU133
 481 001e 00BF     		.align	2
 482              	.L25:
 483 0020 00000000 		.word	huart3
 484              		.cfi_endproc
 485              	.LFE148:
 487              		.section	.rodata.PrintCANLog.str1.4,"aMS",%progbits,1
 488              		.align	2
 489              	.LC2:
 490 0000 256400   		.ascii	"%d\000"
 491 0003 00       		.align	2
 492              	.LC3:
 493 0004 2000     		.ascii	" \000"
 494 0006 0000     		.align	2
 495              	.LC4:
 496 0008 25303358 		.ascii	"%03X\000"
 496      00
 497 000d 000000   		.align	2
 498              	.LC5:
 499 0010 25303258 		.ascii	"%02X\000"
 499      00
 500 0015 000000   		.align	2
 501              	.LC0:
 502 0018 20202000 		.ascii	"   \000"
 503              		.align	2
 504              	.LC1:
 505 001c 20202020 		.ascii	"        \000"
 505      20202020 
 505      00
 506              		.section	.text.PrintCANLog,"ax",%progbits
 507              		.align	1
 508              		.global	PrintCANLog
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 513              	PrintCANLog:
 514              	.LVL18:
 515              	.LFB149:
 514:Core/Src/main.c **** void PrintCANLog(uint16_t CANID, uint8_t *CAN_Frame)
 515:Core/Src/main.c **** {
 516              		.loc 1 515 1 is_stmt 1 view -0
 517              		.cfi_startproc
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 19


 518              		@ args = 0, pretend = 0, frame = 16
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		.loc 1 515 1 is_stmt 0 view .LVU135
 521 0000 70B5     		push	{r4, r5, r6, lr}
 522              		.cfi_def_cfa_offset 16
 523              		.cfi_offset 4, -16
 524              		.cfi_offset 5, -12
 525              		.cfi_offset 6, -8
 526              		.cfi_offset 14, -4
 527 0002 84B0     		sub	sp, sp, #16
 528              		.cfi_def_cfa_offset 32
 529 0004 0646     		mov	r6, r0
 530 0006 0D46     		mov	r5, r1
 516:Core/Src/main.c ****   uint16_t loopIndx = 0;
 531              		.loc 1 516 3 is_stmt 1 view .LVU136
 532              	.LVL19:
 517:Core/Src/main.c ****   char bufID[3] = "   ";
 533              		.loc 1 517 3 view .LVU137
 534              		.loc 1 517 8 is_stmt 0 view .LVU138
 535 0008 294B     		ldr	r3, .L33
 536 000a 1B68     		ldr	r3, [r3]
 537 000c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 538 0010 1B0C     		lsrs	r3, r3, #16
 539 0012 8DF80E30 		strb	r3, [sp, #14]
 518:Core/Src/main.c ****   char bufDat[2] = "  ";
 540              		.loc 1 518 3 is_stmt 1 view .LVU139
 541              		.loc 1 518 8 is_stmt 0 view .LVU140
 542 0016 42F22003 		movw	r3, #8224
 543 001a ADF80830 		strh	r3, [sp, #8]	@ movhi
 519:Core/Src/main.c ****   char bufTime[8] = "        ";
 544              		.loc 1 519 3 is_stmt 1 view .LVU141
 545              		.loc 1 519 8 is_stmt 0 view .LVU142
 546 001e 254B     		ldr	r3, .L33+4
 547 0020 6C46     		mov	r4, sp
 548 0022 93E80300 		ldm	r3, {r0, r1}
 549              	.LVL20:
 550              		.loc 1 519 8 view .LVU143
 551 0026 84E80300 		stm	r4, {r0, r1}
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****   sprintf(bufTime, "%d", TimeStamp);
 552              		.loc 1 521 3 is_stmt 1 view .LVU144
 553 002a 234B     		ldr	r3, .L33+8
 554 002c 1A68     		ldr	r2, [r3]
 555 002e 2349     		ldr	r1, .L33+12
 556 0030 2046     		mov	r0, r4
 557 0032 FFF7FEFF 		bl	sprintf
 558              	.LVL21:
 522:Core/Src/main.c ****   USART3_SendString((uint8_t *)bufTime);
 559              		.loc 1 522 3 view .LVU145
 560 0036 2046     		mov	r0, r4
 561 0038 FFF7FEFF 		bl	USART3_SendString
 562              	.LVL22:
 523:Core/Src/main.c ****   USART3_SendString((uint8_t *)" ");
 563              		.loc 1 523 3 view .LVU146
 564 003c 2048     		ldr	r0, .L33+16
 565 003e FFF7FEFF 		bl	USART3_SendString
 566              	.LVL23:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 20


 524:Core/Src/main.c **** 
 525:Core/Src/main.c ****   sprintf(bufID, "%03X", CANID);
 567              		.loc 1 525 3 view .LVU147
 568 0042 3246     		mov	r2, r6
 569 0044 1F49     		ldr	r1, .L33+20
 570 0046 03A8     		add	r0, sp, #12
 571 0048 FFF7FEFF 		bl	sprintf
 572              	.LVL24:
 526:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 3; loopIndx++)
 573              		.loc 1 526 3 view .LVU148
 574              		.loc 1 526 17 is_stmt 0 view .LVU149
 575 004c 0023     		movs	r3, #0
 576              		.loc 1 526 3 view .LVU150
 577 004e 08E0     		b	.L28
 578              	.LVL25:
 579              	.L29:
 527:Core/Src/main.c ****   {
 528:Core/Src/main.c ****     bufsend[loopIndx] = bufID[loopIndx];
 580              		.loc 1 528 5 is_stmt 1 view .LVU151
 581              		.loc 1 528 30 is_stmt 0 view .LVU152
 582 0050 03F11002 		add	r2, r3, #16
 583 0054 6A44     		add	r2, sp, r2
 584 0056 12F8041C 		ldrb	r1, [r2, #-4]	@ zero_extendqisi2
 585              		.loc 1 528 23 view .LVU153
 586 005a 1B4A     		ldr	r2, .L33+24
 587 005c D154     		strb	r1, [r2, r3]
 526:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 3; loopIndx++)
 588              		.loc 1 526 44 is_stmt 1 discriminator 3 view .LVU154
 589 005e 0133     		adds	r3, r3, #1
 590              	.LVL26:
 526:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 3; loopIndx++)
 591              		.loc 1 526 44 is_stmt 0 discriminator 3 view .LVU155
 592 0060 9BB2     		uxth	r3, r3
 593              	.LVL27:
 594              	.L28:
 526:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 3; loopIndx++)
 595              		.loc 1 526 31 is_stmt 1 discriminator 1 view .LVU156
 596 0062 022B     		cmp	r3, #2
 597 0064 F4D9     		bls	.L29
 529:Core/Src/main.c ****   }
 530:Core/Src/main.c ****   bufsend[3] = ':';
 598              		.loc 1 530 3 view .LVU157
 599              		.loc 1 530 14 is_stmt 0 view .LVU158
 600 0066 184B     		ldr	r3, .L33+24
 601              	.LVL28:
 602              		.loc 1 530 14 view .LVU159
 603 0068 3A22     		movs	r2, #58
 604 006a DA70     		strb	r2, [r3, #3]
 531:Core/Src/main.c ****   bufsend[4] = ' ';
 605              		.loc 1 531 3 is_stmt 1 view .LVU160
 606              		.loc 1 531 14 is_stmt 0 view .LVU161
 607 006c 2022     		movs	r2, #32
 608 006e 1A71     		strb	r2, [r3, #4]
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 8; loopIndx++)
 609              		.loc 1 533 3 is_stmt 1 view .LVU162
 610              	.LVL29:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 21


 611              		.loc 1 533 17 is_stmt 0 view .LVU163
 612 0070 0024     		movs	r4, #0
 613              		.loc 1 533 3 view .LVU164
 614 0072 14E0     		b	.L30
 615              	.LVL30:
 616              	.L31:
 534:Core/Src/main.c ****   {
 535:Core/Src/main.c ****     sprintf(bufDat, "%02X", CAN_Frame[loopIndx]);
 617              		.loc 1 535 5 is_stmt 1 view .LVU165
 618 0074 2A5D     		ldrb	r2, [r5, r4]	@ zero_extendqisi2
 619 0076 1549     		ldr	r1, .L33+28
 620 0078 02A8     		add	r0, sp, #8
 621 007a FFF7FEFF 		bl	sprintf
 622              	.LVL31:
 536:Core/Src/main.c ****     bufsend[loopIndx * 3 + 5] = bufDat[0];
 623              		.loc 1 536 5 view .LVU166
 624              		.loc 1 536 22 is_stmt 0 view .LVU167
 625 007e 04EB4403 		add	r3, r4, r4, lsl #1
 626              		.loc 1 536 26 view .LVU168
 627 0082 591D     		adds	r1, r3, #5
 628              		.loc 1 536 39 view .LVU169
 629 0084 9DF80800 		ldrb	r0, [sp, #8]	@ zero_extendqisi2
 630              		.loc 1 536 31 view .LVU170
 631 0088 0F4A     		ldr	r2, .L33+24
 632 008a 5054     		strb	r0, [r2, r1]
 537:Core/Src/main.c ****     bufsend[loopIndx * 3 + 6] = bufDat[1];
 633              		.loc 1 537 5 is_stmt 1 view .LVU171
 634              		.loc 1 537 26 is_stmt 0 view .LVU172
 635 008c 991D     		adds	r1, r3, #6
 636              		.loc 1 537 39 view .LVU173
 637 008e 9DF80900 		ldrb	r0, [sp, #9]	@ zero_extendqisi2
 638              		.loc 1 537 31 view .LVU174
 639 0092 5054     		strb	r0, [r2, r1]
 538:Core/Src/main.c ****     bufsend[loopIndx * 3 + 7] = ' ';
 640              		.loc 1 538 5 is_stmt 1 view .LVU175
 641              		.loc 1 538 26 is_stmt 0 view .LVU176
 642 0094 0733     		adds	r3, r3, #7
 643              		.loc 1 538 31 view .LVU177
 644 0096 2021     		movs	r1, #32
 645 0098 D154     		strb	r1, [r2, r3]
 533:Core/Src/main.c ****   {
 646              		.loc 1 533 44 is_stmt 1 discriminator 3 view .LVU178
 647 009a 0134     		adds	r4, r4, #1
 648              	.LVL32:
 533:Core/Src/main.c ****   {
 649              		.loc 1 533 44 is_stmt 0 discriminator 3 view .LVU179
 650 009c A4B2     		uxth	r4, r4
 651              	.LVL33:
 652              	.L30:
 533:Core/Src/main.c ****   {
 653              		.loc 1 533 31 is_stmt 1 discriminator 1 view .LVU180
 654 009e 072C     		cmp	r4, #7
 655 00a0 E8D9     		bls	.L31
 539:Core/Src/main.c ****   }
 540:Core/Src/main.c ****   bufsend[29] = '\n';
 656              		.loc 1 540 3 view .LVU181
 657              		.loc 1 540 15 is_stmt 0 view .LVU182
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 22


 658 00a2 0948     		ldr	r0, .L33+24
 659 00a4 0A23     		movs	r3, #10
 660 00a6 4377     		strb	r3, [r0, #29]
 541:Core/Src/main.c ****   USART3_SendString((unsigned char *)bufsend);
 661              		.loc 1 541 3 is_stmt 1 view .LVU183
 662 00a8 FFF7FEFF 		bl	USART3_SendString
 663              	.LVL34:
 542:Core/Src/main.c **** }
 664              		.loc 1 542 1 is_stmt 0 view .LVU184
 665 00ac 04B0     		add	sp, sp, #16
 666              		.cfi_def_cfa_offset 16
 667              		@ sp needed
 668 00ae 70BD     		pop	{r4, r5, r6, pc}
 669              	.LVL35:
 670              	.L34:
 671              		.loc 1 542 1 view .LVU185
 672              		.align	2
 673              	.L33:
 674 00b0 18000000 		.word	.LC0
 675 00b4 1C000000 		.word	.LC1
 676 00b8 00000000 		.word	TimeStamp
 677 00bc 00000000 		.word	.LC2
 678 00c0 04000000 		.word	.LC3
 679 00c4 08000000 		.word	.LC4
 680 00c8 00000000 		.word	bufsend
 681 00cc 10000000 		.word	.LC5
 682              		.cfi_endproc
 683              	.LFE149:
 685              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 686              		.align	1
 687              		.global	HAL_UART_RxCpltCallback
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 692              	HAL_UART_RxCpltCallback:
 693              	.LVL36:
 694              	.LFB151:
 543:Core/Src/main.c **** /* USER CODE END 4 */
 544:Core/Src/main.c **** 
 545:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 546:Core/Src/main.c **** 	HAL_StatusTypeDef ret;
 547:Core/Src/main.c **** 	if (hcan == &hcan1) {
 548:Core/Src/main.c **** 		ret = HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &CAN1_pHeaderRx,
 549:Core/Src/main.c **** 				CAN1_DATA_RX);
 550:Core/Src/main.c **** 		if (ret != HAL_OK) {
 551:Core/Src/main.c **** 			Error_Handler();
 552:Core/Src/main.c **** 		}
 553:Core/Src/main.c **** 		flag_CAN1_Received=1;
 554:Core/Src/main.c **** 		return;
 555:Core/Src/main.c **** 	}
 556:Core/Src/main.c **** 	if (hcan == &hcan2) {
 557:Core/Src/main.c **** 		ret = HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &CAN2_pHeaderRx,
 558:Core/Src/main.c **** 				CAN2_DATA_RX);
 559:Core/Src/main.c **** 		if (ret != HAL_OK) {
 560:Core/Src/main.c **** 			Error_Handler();
 561:Core/Src/main.c **** 		}
 562:Core/Src/main.c **** 		flag_CAN2_Received=1;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 23


 563:Core/Src/main.c **** 		return;
 564:Core/Src/main.c **** 	}
 565:Core/Src/main.c **** }
 566:Core/Src/main.c **** 
 567:Core/Src/main.c **** 
 568:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 695              		.loc 1 568 57 is_stmt 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 569:Core/Src/main.c **** 	REQ_BUFFER[NumBytesReq] = REQ_1BYTE_DATA;
 700              		.loc 1 569 2 view .LVU187
 701              		.loc 1 569 12 is_stmt 0 view .LVU188
 702 0000 044A     		ldr	r2, .L36
 703 0002 1388     		ldrh	r3, [r2]
 704              		.loc 1 569 26 view .LVU189
 705 0004 0449     		ldr	r1, .L36+4
 706 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 707              	.LVL37:
 708              		.loc 1 569 26 view .LVU190
 709 0008 0449     		ldr	r1, .L36+8
 710 000a C854     		strb	r0, [r1, r3]
 570:Core/Src/main.c **** 	NumBytesReq++;
 711              		.loc 1 570 2 is_stmt 1 view .LVU191
 712              		.loc 1 570 13 is_stmt 0 view .LVU192
 713 000c 0133     		adds	r3, r3, #1
 714 000e 1380     		strh	r3, [r2]	@ movhi
 571:Core/Src/main.c **** 	//REQ_BUFFER[7] = NumBytesReq;
 572:Core/Src/main.c **** }
 715              		.loc 1 572 1 view .LVU193
 716 0010 7047     		bx	lr
 717              	.L37:
 718 0012 00BF     		.align	2
 719              	.L36:
 720 0014 00000000 		.word	NumBytesReq
 721 0018 00000000 		.word	REQ_1BYTE_DATA
 722 001c 00000000 		.word	REQ_BUFFER
 723              		.cfi_endproc
 724              	.LFE151:
 726              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 727              		.align	2
 728              	.LC6:
 729 0000 4572726F 		.ascii	"Error\000"
 729      7200
 730              		.section	.text.Error_Handler,"ax",%progbits
 731              		.align	1
 732              		.global	Error_Handler
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 737              	Error_Handler:
 738              	.LFB152:
 573:Core/Src/main.c **** /**
 574:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 575:Core/Src/main.c ****  * @retval None
 576:Core/Src/main.c ****  */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 24


 577:Core/Src/main.c **** void Error_Handler(void)
 578:Core/Src/main.c **** {
 739              		.loc 1 578 1 is_stmt 1 view -0
 740              		.cfi_startproc
 741              		@ Volatile: function does not return.
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744 0000 08B5     		push	{r3, lr}
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 3, -8
 747              		.cfi_offset 14, -4
 579:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 580:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 581:Core/Src/main.c ****   __disable_irq();
 748              		.loc 1 581 3 view .LVU195
 749              	.LBB8:
 750              	.LBI8:
 751              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 25


  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 26


  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 27


 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 28


 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 29


 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 30


 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 31


 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 32


 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 33


 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 34


 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 35


 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 36


 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 37


 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 38


 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 39


 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 40


 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 41


 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 752              		.loc 2 960 27 view .LVU196
 753              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 754              		.loc 2 962 3 view .LVU197
 755              		.syntax unified
 756              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 757 0002 72B6     		cpsid i
 758              	@ 0 "" 2
 759              		.thumb
 760              		.syntax unified
 761              	.LBE9:
 762              	.LBE8:
 582:Core/Src/main.c ****   USART3_SendString((uint8_t *)"Error");
 763              		.loc 1 582 3 view .LVU198
 764 0004 0148     		ldr	r0, .L41
 765 0006 FFF7FEFF 		bl	USART3_SendString
 766              	.LVL38:
 767              	.L39:
 583:Core/Src/main.c ****   while (1)
 768              		.loc 1 583 3 view .LVU199
 584:Core/Src/main.c ****   {
 585:Core/Src/main.c ****   }
 769              		.loc 1 585 3 view .LVU200
 583:Core/Src/main.c ****   while (1)
 770              		.loc 1 583 9 view .LVU201
 771 000a FEE7     		b	.L39
 772              	.L42:
 773              		.align	2
 774              	.L41:
 775 000c 00000000 		.word	.LC6
 776              		.cfi_endproc
 777              	.LFE152:
 779              		.section	.text.MX_CAN1_Init,"ax",%progbits
 780              		.align	1
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 785              	MX_CAN1_Init:
 786              	.LFB139:
 267:Core/Src/main.c **** 
 787              		.loc 1 267 1 view -0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791 0000 08B5     		push	{r3, lr}
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 3, -8
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 42


 794              		.cfi_offset 14, -4
 276:Core/Src/main.c ****   hcan1.Init.Prescaler = 1;
 795              		.loc 1 276 3 view .LVU203
 276:Core/Src/main.c ****   hcan1.Init.Prescaler = 1;
 796              		.loc 1 276 18 is_stmt 0 view .LVU204
 797 0002 0E48     		ldr	r0, .L47
 798 0004 0E4B     		ldr	r3, .L47+4
 799 0006 0360     		str	r3, [r0]
 277:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 800              		.loc 1 277 3 is_stmt 1 view .LVU205
 277:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 801              		.loc 1 277 24 is_stmt 0 view .LVU206
 802 0008 0123     		movs	r3, #1
 803 000a 4360     		str	r3, [r0, #4]
 278:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 804              		.loc 1 278 3 is_stmt 1 view .LVU207
 278:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 805              		.loc 1 278 19 is_stmt 0 view .LVU208
 806 000c 0023     		movs	r3, #0
 807 000e 8360     		str	r3, [r0, #8]
 279:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 808              		.loc 1 279 3 is_stmt 1 view .LVU209
 279:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 809              		.loc 1 279 28 is_stmt 0 view .LVU210
 810 0010 4FF08072 		mov	r2, #16777216
 811 0014 C260     		str	r2, [r0, #12]
 280:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 812              		.loc 1 280 3 is_stmt 1 view .LVU211
 280:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 813              		.loc 1 280 23 is_stmt 0 view .LVU212
 814 0016 4FF42022 		mov	r2, #655360
 815 001a 0261     		str	r2, [r0, #16]
 281:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 816              		.loc 1 281 3 is_stmt 1 view .LVU213
 281:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 817              		.loc 1 281 23 is_stmt 0 view .LVU214
 818 001c 4FF44012 		mov	r2, #3145728
 819 0020 4261     		str	r2, [r0, #20]
 282:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 820              		.loc 1 282 3 is_stmt 1 view .LVU215
 282:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 821              		.loc 1 282 32 is_stmt 0 view .LVU216
 822 0022 0376     		strb	r3, [r0, #24]
 283:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 823              		.loc 1 283 3 is_stmt 1 view .LVU217
 283:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 824              		.loc 1 283 25 is_stmt 0 view .LVU218
 825 0024 4376     		strb	r3, [r0, #25]
 284:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 826              		.loc 1 284 3 is_stmt 1 view .LVU219
 284:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 827              		.loc 1 284 25 is_stmt 0 view .LVU220
 828 0026 8376     		strb	r3, [r0, #26]
 285:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 829              		.loc 1 285 3 is_stmt 1 view .LVU221
 285:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 830              		.loc 1 285 33 is_stmt 0 view .LVU222
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 43


 831 0028 C376     		strb	r3, [r0, #27]
 286:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 832              		.loc 1 286 3 is_stmt 1 view .LVU223
 286:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 833              		.loc 1 286 32 is_stmt 0 view .LVU224
 834 002a 0377     		strb	r3, [r0, #28]
 287:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 835              		.loc 1 287 3 is_stmt 1 view .LVU225
 287:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 836              		.loc 1 287 35 is_stmt 0 view .LVU226
 837 002c 4377     		strb	r3, [r0, #29]
 288:Core/Src/main.c ****   {
 838              		.loc 1 288 3 is_stmt 1 view .LVU227
 288:Core/Src/main.c ****   {
 839              		.loc 1 288 7 is_stmt 0 view .LVU228
 840 002e FFF7FEFF 		bl	HAL_CAN_Init
 841              	.LVL39:
 288:Core/Src/main.c ****   {
 842              		.loc 1 288 6 discriminator 1 view .LVU229
 843 0032 00B9     		cbnz	r0, .L46
 295:Core/Src/main.c **** 
 844              		.loc 1 295 1 view .LVU230
 845 0034 08BD     		pop	{r3, pc}
 846              	.L46:
 290:Core/Src/main.c ****   }
 847              		.loc 1 290 5 is_stmt 1 view .LVU231
 848 0036 FFF7FEFF 		bl	Error_Handler
 849              	.LVL40:
 850              	.L48:
 851 003a 00BF     		.align	2
 852              	.L47:
 853 003c 00000000 		.word	hcan1
 854 0040 00640040 		.word	1073767424
 855              		.cfi_endproc
 856              	.LFE139:
 858              		.section	.text.MX_CAN2_Init,"ax",%progbits
 859              		.align	1
 860              		.syntax unified
 861              		.thumb
 862              		.thumb_func
 864              	MX_CAN2_Init:
 865              	.LFB140:
 303:Core/Src/main.c **** 
 866              		.loc 1 303 1 view -0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870 0000 08B5     		push	{r3, lr}
 871              		.cfi_def_cfa_offset 8
 872              		.cfi_offset 3, -8
 873              		.cfi_offset 14, -4
 312:Core/Src/main.c ****   hcan2.Init.Prescaler = 1;
 874              		.loc 1 312 3 view .LVU233
 312:Core/Src/main.c ****   hcan2.Init.Prescaler = 1;
 875              		.loc 1 312 18 is_stmt 0 view .LVU234
 876 0002 0E48     		ldr	r0, .L53
 877 0004 0E4B     		ldr	r3, .L53+4
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 44


 878 0006 0360     		str	r3, [r0]
 313:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 879              		.loc 1 313 3 is_stmt 1 view .LVU235
 313:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 880              		.loc 1 313 24 is_stmt 0 view .LVU236
 881 0008 0123     		movs	r3, #1
 882 000a 4360     		str	r3, [r0, #4]
 314:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 883              		.loc 1 314 3 is_stmt 1 view .LVU237
 314:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 884              		.loc 1 314 19 is_stmt 0 view .LVU238
 885 000c 0023     		movs	r3, #0
 886 000e 8360     		str	r3, [r0, #8]
 315:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
 887              		.loc 1 315 3 is_stmt 1 view .LVU239
 315:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
 888              		.loc 1 315 28 is_stmt 0 view .LVU240
 889 0010 4FF08072 		mov	r2, #16777216
 890 0014 C260     		str	r2, [r0, #12]
 316:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
 891              		.loc 1 316 3 is_stmt 1 view .LVU241
 316:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
 892              		.loc 1 316 23 is_stmt 0 view .LVU242
 893 0016 4FF42022 		mov	r2, #655360
 894 001a 0261     		str	r2, [r0, #16]
 317:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 895              		.loc 1 317 3 is_stmt 1 view .LVU243
 317:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 896              		.loc 1 317 23 is_stmt 0 view .LVU244
 897 001c 4FF44012 		mov	r2, #3145728
 898 0020 4261     		str	r2, [r0, #20]
 318:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 899              		.loc 1 318 3 is_stmt 1 view .LVU245
 318:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 900              		.loc 1 318 32 is_stmt 0 view .LVU246
 901 0022 0376     		strb	r3, [r0, #24]
 319:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 902              		.loc 1 319 3 is_stmt 1 view .LVU247
 319:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 903              		.loc 1 319 25 is_stmt 0 view .LVU248
 904 0024 4376     		strb	r3, [r0, #25]
 320:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 905              		.loc 1 320 3 is_stmt 1 view .LVU249
 320:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 906              		.loc 1 320 25 is_stmt 0 view .LVU250
 907 0026 8376     		strb	r3, [r0, #26]
 321:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 908              		.loc 1 321 3 is_stmt 1 view .LVU251
 321:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 909              		.loc 1 321 33 is_stmt 0 view .LVU252
 910 0028 C376     		strb	r3, [r0, #27]
 322:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 911              		.loc 1 322 3 is_stmt 1 view .LVU253
 322:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 912              		.loc 1 322 32 is_stmt 0 view .LVU254
 913 002a 0377     		strb	r3, [r0, #28]
 323:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 45


 914              		.loc 1 323 3 is_stmt 1 view .LVU255
 323:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 915              		.loc 1 323 35 is_stmt 0 view .LVU256
 916 002c 4377     		strb	r3, [r0, #29]
 324:Core/Src/main.c ****   {
 917              		.loc 1 324 3 is_stmt 1 view .LVU257
 324:Core/Src/main.c ****   {
 918              		.loc 1 324 7 is_stmt 0 view .LVU258
 919 002e FFF7FEFF 		bl	HAL_CAN_Init
 920              	.LVL41:
 324:Core/Src/main.c ****   {
 921              		.loc 1 324 6 discriminator 1 view .LVU259
 922 0032 00B9     		cbnz	r0, .L52
 331:Core/Src/main.c **** 
 923              		.loc 1 331 1 view .LVU260
 924 0034 08BD     		pop	{r3, pc}
 925              	.L52:
 326:Core/Src/main.c ****   }
 926              		.loc 1 326 5 is_stmt 1 view .LVU261
 927 0036 FFF7FEFF 		bl	Error_Handler
 928              	.LVL42:
 929              	.L54:
 930 003a 00BF     		.align	2
 931              	.L53:
 932 003c 00000000 		.word	hcan2
 933 0040 00680040 		.word	1073768448
 934              		.cfi_endproc
 935              	.LFE140:
 937              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 938              		.align	1
 939              		.syntax unified
 940              		.thumb
 941              		.thumb_func
 943              	MX_USART3_UART_Init:
 944              	.LFB142:
 383:Core/Src/main.c **** 
 945              		.loc 1 383 1 view -0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949 0000 08B5     		push	{r3, lr}
 950              		.cfi_def_cfa_offset 8
 951              		.cfi_offset 3, -8
 952              		.cfi_offset 14, -4
 392:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 953              		.loc 1 392 3 view .LVU263
 392:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 954              		.loc 1 392 19 is_stmt 0 view .LVU264
 955 0002 0A48     		ldr	r0, .L59
 956 0004 0A4B     		ldr	r3, .L59+4
 957 0006 0360     		str	r3, [r0]
 393:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 958              		.loc 1 393 3 is_stmt 1 view .LVU265
 393:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 959              		.loc 1 393 24 is_stmt 0 view .LVU266
 960 0008 4FF4E133 		mov	r3, #115200
 961 000c 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 46


 394:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 962              		.loc 1 394 3 is_stmt 1 view .LVU267
 394:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 963              		.loc 1 394 26 is_stmt 0 view .LVU268
 964 000e 0023     		movs	r3, #0
 965 0010 8360     		str	r3, [r0, #8]
 395:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 966              		.loc 1 395 3 is_stmt 1 view .LVU269
 395:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 967              		.loc 1 395 24 is_stmt 0 view .LVU270
 968 0012 C360     		str	r3, [r0, #12]
 396:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 969              		.loc 1 396 3 is_stmt 1 view .LVU271
 396:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 970              		.loc 1 396 22 is_stmt 0 view .LVU272
 971 0014 0361     		str	r3, [r0, #16]
 397:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 972              		.loc 1 397 3 is_stmt 1 view .LVU273
 397:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 973              		.loc 1 397 20 is_stmt 0 view .LVU274
 974 0016 0C22     		movs	r2, #12
 975 0018 4261     		str	r2, [r0, #20]
 398:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 976              		.loc 1 398 3 is_stmt 1 view .LVU275
 398:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 977              		.loc 1 398 25 is_stmt 0 view .LVU276
 978 001a 8361     		str	r3, [r0, #24]
 399:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 979              		.loc 1 399 3 is_stmt 1 view .LVU277
 399:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 980              		.loc 1 399 28 is_stmt 0 view .LVU278
 981 001c C361     		str	r3, [r0, #28]
 400:Core/Src/main.c ****   {
 982              		.loc 1 400 3 is_stmt 1 view .LVU279
 400:Core/Src/main.c ****   {
 983              		.loc 1 400 7 is_stmt 0 view .LVU280
 984 001e FFF7FEFF 		bl	HAL_UART_Init
 985              	.LVL43:
 400:Core/Src/main.c ****   {
 986              		.loc 1 400 6 discriminator 1 view .LVU281
 987 0022 00B9     		cbnz	r0, .L58
 407:Core/Src/main.c **** 
 988              		.loc 1 407 1 view .LVU282
 989 0024 08BD     		pop	{r3, pc}
 990              	.L58:
 402:Core/Src/main.c ****   }
 991              		.loc 1 402 5 is_stmt 1 view .LVU283
 992 0026 FFF7FEFF 		bl	Error_Handler
 993              	.LVL44:
 994              	.L60:
 995 002a 00BF     		.align	2
 996              	.L59:
 997 002c 00000000 		.word	huart3
 998 0030 00480040 		.word	1073760256
 999              		.cfi_endproc
 1000              	.LFE142:
 1002              		.section	.text.MX_TIM2_Init,"ax",%progbits
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 47


 1003              		.align	1
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
 1008              	MX_TIM2_Init:
 1009              	.LFB141:
 339:Core/Src/main.c **** 
 1010              		.loc 1 339 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 24
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014 0000 00B5     		push	{lr}
 1015              		.cfi_def_cfa_offset 4
 1016              		.cfi_offset 14, -4
 1017 0002 87B0     		sub	sp, sp, #28
 1018              		.cfi_def_cfa_offset 32
 345:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1019              		.loc 1 345 3 view .LVU285
 345:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1020              		.loc 1 345 26 is_stmt 0 view .LVU286
 1021 0004 0023     		movs	r3, #0
 1022 0006 0293     		str	r3, [sp, #8]
 1023 0008 0393     		str	r3, [sp, #12]
 1024 000a 0493     		str	r3, [sp, #16]
 1025 000c 0593     		str	r3, [sp, #20]
 346:Core/Src/main.c **** 
 1026              		.loc 1 346 3 is_stmt 1 view .LVU287
 346:Core/Src/main.c **** 
 1027              		.loc 1 346 27 is_stmt 0 view .LVU288
 1028 000e 0093     		str	r3, [sp]
 1029 0010 0193     		str	r3, [sp, #4]
 351:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 1030              		.loc 1 351 3 is_stmt 1 view .LVU289
 351:Core/Src/main.c ****   htim2.Init.Prescaler = 7999;
 1031              		.loc 1 351 18 is_stmt 0 view .LVU290
 1032 0012 1448     		ldr	r0, .L69
 1033 0014 4FF08042 		mov	r2, #1073741824
 1034 0018 0260     		str	r2, [r0]
 352:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1035              		.loc 1 352 3 is_stmt 1 view .LVU291
 352:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1036              		.loc 1 352 24 is_stmt 0 view .LVU292
 1037 001a 41F63F72 		movw	r2, #7999
 1038 001e 4260     		str	r2, [r0, #4]
 353:Core/Src/main.c ****   htim2.Init.Period = 49999;
 1039              		.loc 1 353 3 is_stmt 1 view .LVU293
 353:Core/Src/main.c ****   htim2.Init.Period = 49999;
 1040              		.loc 1 353 26 is_stmt 0 view .LVU294
 1041 0020 8360     		str	r3, [r0, #8]
 354:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1042              		.loc 1 354 3 is_stmt 1 view .LVU295
 354:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1043              		.loc 1 354 21 is_stmt 0 view .LVU296
 1044 0022 4CF24F32 		movw	r2, #49999
 1045 0026 C260     		str	r2, [r0, #12]
 355:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1046              		.loc 1 355 3 is_stmt 1 view .LVU297
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 48


 355:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1047              		.loc 1 355 28 is_stmt 0 view .LVU298
 1048 0028 0361     		str	r3, [r0, #16]
 356:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1049              		.loc 1 356 3 is_stmt 1 view .LVU299
 356:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1050              		.loc 1 356 32 is_stmt 0 view .LVU300
 1051 002a 8361     		str	r3, [r0, #24]
 357:Core/Src/main.c ****   {
 1052              		.loc 1 357 3 is_stmt 1 view .LVU301
 357:Core/Src/main.c ****   {
 1053              		.loc 1 357 7 is_stmt 0 view .LVU302
 1054 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1055              	.LVL45:
 357:Core/Src/main.c ****   {
 1056              		.loc 1 357 6 discriminator 1 view .LVU303
 1057 0030 90B9     		cbnz	r0, .L66
 361:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1058              		.loc 1 361 3 is_stmt 1 view .LVU304
 361:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1059              		.loc 1 361 34 is_stmt 0 view .LVU305
 1060 0032 4FF48053 		mov	r3, #4096
 1061 0036 0293     		str	r3, [sp, #8]
 362:Core/Src/main.c ****   {
 1062              		.loc 1 362 3 is_stmt 1 view .LVU306
 362:Core/Src/main.c ****   {
 1063              		.loc 1 362 7 is_stmt 0 view .LVU307
 1064 0038 02A9     		add	r1, sp, #8
 1065 003a 0A48     		ldr	r0, .L69
 1066 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1067              	.LVL46:
 362:Core/Src/main.c ****   {
 1068              		.loc 1 362 6 discriminator 1 view .LVU308
 1069 0040 60B9     		cbnz	r0, .L67
 366:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1070              		.loc 1 366 3 is_stmt 1 view .LVU309
 366:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1071              		.loc 1 366 37 is_stmt 0 view .LVU310
 1072 0042 0023     		movs	r3, #0
 1073 0044 0093     		str	r3, [sp]
 367:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1074              		.loc 1 367 3 is_stmt 1 view .LVU311
 367:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1075              		.loc 1 367 33 is_stmt 0 view .LVU312
 1076 0046 0193     		str	r3, [sp, #4]
 368:Core/Src/main.c ****   {
 1077              		.loc 1 368 3 is_stmt 1 view .LVU313
 368:Core/Src/main.c ****   {
 1078              		.loc 1 368 7 is_stmt 0 view .LVU314
 1079 0048 6946     		mov	r1, sp
 1080 004a 0648     		ldr	r0, .L69
 1081 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1082              	.LVL47:
 368:Core/Src/main.c ****   {
 1083              		.loc 1 368 6 discriminator 1 view .LVU315
 1084 0050 30B9     		cbnz	r0, .L68
 375:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 49


 1085              		.loc 1 375 1 view .LVU316
 1086 0052 07B0     		add	sp, sp, #28
 1087              		.cfi_remember_state
 1088              		.cfi_def_cfa_offset 4
 1089              		@ sp needed
 1090 0054 5DF804FB 		ldr	pc, [sp], #4
 1091              	.L66:
 1092              		.cfi_restore_state
 359:Core/Src/main.c ****   }
 1093              		.loc 1 359 5 is_stmt 1 view .LVU317
 1094 0058 FFF7FEFF 		bl	Error_Handler
 1095              	.LVL48:
 1096              	.L67:
 364:Core/Src/main.c ****   }
 1097              		.loc 1 364 5 view .LVU318
 1098 005c FFF7FEFF 		bl	Error_Handler
 1099              	.LVL49:
 1100              	.L68:
 370:Core/Src/main.c ****   }
 1101              		.loc 1 370 5 view .LVU319
 1102 0060 FFF7FEFF 		bl	Error_Handler
 1103              	.LVL50:
 1104              	.L70:
 1105              		.align	2
 1106              	.L69:
 1107 0064 00000000 		.word	htim2
 1108              		.cfi_endproc
 1109              	.LFE141:
 1111              		.section	.text.SystemClock_Config,"ax",%progbits
 1112              		.align	1
 1113              		.global	SystemClock_Config
 1114              		.syntax unified
 1115              		.thumb
 1116              		.thumb_func
 1118              	SystemClock_Config:
 1119              	.LFB138:
 221:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1120              		.loc 1 221 1 view -0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 80
 1123              		@ frame_needed = 0, uses_anonymous_args = 0
 1124 0000 00B5     		push	{lr}
 1125              		.cfi_def_cfa_offset 4
 1126              		.cfi_offset 14, -4
 1127 0002 95B0     		sub	sp, sp, #84
 1128              		.cfi_def_cfa_offset 88
 222:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1129              		.loc 1 222 3 view .LVU321
 222:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1130              		.loc 1 222 22 is_stmt 0 view .LVU322
 1131 0004 3022     		movs	r2, #48
 1132 0006 0021     		movs	r1, #0
 1133 0008 08A8     		add	r0, sp, #32
 1134 000a FFF7FEFF 		bl	memset
 1135              	.LVL51:
 223:Core/Src/main.c **** 
 1136              		.loc 1 223 3 is_stmt 1 view .LVU323
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 50


 223:Core/Src/main.c **** 
 1137              		.loc 1 223 22 is_stmt 0 view .LVU324
 1138 000e 0023     		movs	r3, #0
 1139 0010 0393     		str	r3, [sp, #12]
 1140 0012 0493     		str	r3, [sp, #16]
 1141 0014 0593     		str	r3, [sp, #20]
 1142 0016 0693     		str	r3, [sp, #24]
 1143 0018 0793     		str	r3, [sp, #28]
 227:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1144              		.loc 1 227 3 is_stmt 1 view .LVU325
 1145              	.LBB10:
 227:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1146              		.loc 1 227 3 view .LVU326
 1147 001a 0193     		str	r3, [sp, #4]
 227:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1148              		.loc 1 227 3 view .LVU327
 1149 001c 1F4A     		ldr	r2, .L77
 1150 001e 116C     		ldr	r1, [r2, #64]
 1151 0020 41F08051 		orr	r1, r1, #268435456
 1152 0024 1164     		str	r1, [r2, #64]
 227:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1153              		.loc 1 227 3 view .LVU328
 1154 0026 126C     		ldr	r2, [r2, #64]
 1155 0028 02F08052 		and	r2, r2, #268435456
 1156 002c 0192     		str	r2, [sp, #4]
 227:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1157              		.loc 1 227 3 view .LVU329
 1158 002e 019A     		ldr	r2, [sp, #4]
 1159              	.LBE10:
 227:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1160              		.loc 1 227 3 view .LVU330
 228:Core/Src/main.c **** 
 1161              		.loc 1 228 3 view .LVU331
 1162              	.LBB11:
 228:Core/Src/main.c **** 
 1163              		.loc 1 228 3 view .LVU332
 1164 0030 0293     		str	r3, [sp, #8]
 228:Core/Src/main.c **** 
 1165              		.loc 1 228 3 view .LVU333
 1166 0032 1B4A     		ldr	r2, .L77+4
 1167 0034 1168     		ldr	r1, [r2]
 1168 0036 41F48041 		orr	r1, r1, #16384
 1169 003a 1160     		str	r1, [r2]
 228:Core/Src/main.c **** 
 1170              		.loc 1 228 3 view .LVU334
 1171 003c 1268     		ldr	r2, [r2]
 1172 003e 02F48042 		and	r2, r2, #16384
 1173 0042 0292     		str	r2, [sp, #8]
 228:Core/Src/main.c **** 
 1174              		.loc 1 228 3 view .LVU335
 1175 0044 029A     		ldr	r2, [sp, #8]
 1176              	.LBE11:
 228:Core/Src/main.c **** 
 1177              		.loc 1 228 3 view .LVU336
 233:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1178              		.loc 1 233 3 view .LVU337
 233:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 51


 1179              		.loc 1 233 36 is_stmt 0 view .LVU338
 1180 0046 0222     		movs	r2, #2
 1181 0048 0892     		str	r2, [sp, #32]
 234:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1182              		.loc 1 234 3 is_stmt 1 view .LVU339
 234:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1183              		.loc 1 234 30 is_stmt 0 view .LVU340
 1184 004a 0121     		movs	r1, #1
 1185 004c 0B91     		str	r1, [sp, #44]
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1186              		.loc 1 235 3 is_stmt 1 view .LVU341
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1187              		.loc 1 235 41 is_stmt 0 view .LVU342
 1188 004e 1021     		movs	r1, #16
 1189 0050 0C91     		str	r1, [sp, #48]
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1190              		.loc 1 236 3 is_stmt 1 view .LVU343
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1191              		.loc 1 236 34 is_stmt 0 view .LVU344
 1192 0052 0E92     		str	r2, [sp, #56]
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1193              		.loc 1 237 3 is_stmt 1 view .LVU345
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1194              		.loc 1 237 35 is_stmt 0 view .LVU346
 1195 0054 0F93     		str	r3, [sp, #60]
 238:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 1196              		.loc 1 238 3 is_stmt 1 view .LVU347
 238:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 1197              		.loc 1 238 30 is_stmt 0 view .LVU348
 1198 0056 0823     		movs	r3, #8
 1199 0058 1093     		str	r3, [sp, #64]
 239:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1200              		.loc 1 239 3 is_stmt 1 view .LVU349
 239:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1201              		.loc 1 239 30 is_stmt 0 view .LVU350
 1202 005a 4023     		movs	r3, #64
 1203 005c 1193     		str	r3, [sp, #68]
 240:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1204              		.loc 1 240 3 is_stmt 1 view .LVU351
 240:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1205              		.loc 1 240 30 is_stmt 0 view .LVU352
 1206 005e 1292     		str	r2, [sp, #72]
 241:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1207              		.loc 1 241 3 is_stmt 1 view .LVU353
 241:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1208              		.loc 1 241 30 is_stmt 0 view .LVU354
 1209 0060 0423     		movs	r3, #4
 1210 0062 1393     		str	r3, [sp, #76]
 242:Core/Src/main.c ****   {
 1211              		.loc 1 242 3 is_stmt 1 view .LVU355
 242:Core/Src/main.c ****   {
 1212              		.loc 1 242 7 is_stmt 0 view .LVU356
 1213 0064 08A8     		add	r0, sp, #32
 1214 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1215              	.LVL52:
 242:Core/Src/main.c ****   {
 1216              		.loc 1 242 6 discriminator 1 view .LVU357
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 52


 1217 006a 90B9     		cbnz	r0, .L75
 249:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1218              		.loc 1 249 3 is_stmt 1 view .LVU358
 249:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1219              		.loc 1 249 31 is_stmt 0 view .LVU359
 1220 006c 0F23     		movs	r3, #15
 1221 006e 0393     		str	r3, [sp, #12]
 250:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1222              		.loc 1 250 3 is_stmt 1 view .LVU360
 250:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1223              		.loc 1 250 34 is_stmt 0 view .LVU361
 1224 0070 0221     		movs	r1, #2
 1225 0072 0491     		str	r1, [sp, #16]
 251:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 1226              		.loc 1 251 3 is_stmt 1 view .LVU362
 251:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 1227              		.loc 1 251 35 is_stmt 0 view .LVU363
 1228 0074 0023     		movs	r3, #0
 1229 0076 0593     		str	r3, [sp, #20]
 252:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1230              		.loc 1 252 3 is_stmt 1 view .LVU364
 252:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1231              		.loc 1 252 36 is_stmt 0 view .LVU365
 1232 0078 4FF4C053 		mov	r3, #6144
 1233 007c 0693     		str	r3, [sp, #24]
 253:Core/Src/main.c **** 
 1234              		.loc 1 253 3 is_stmt 1 view .LVU366
 253:Core/Src/main.c **** 
 1235              		.loc 1 253 36 is_stmt 0 view .LVU367
 1236 007e 4FF48053 		mov	r3, #4096
 1237 0082 0793     		str	r3, [sp, #28]
 255:Core/Src/main.c ****   {
 1238              		.loc 1 255 3 is_stmt 1 view .LVU368
 255:Core/Src/main.c ****   {
 1239              		.loc 1 255 7 is_stmt 0 view .LVU369
 1240 0084 03A8     		add	r0, sp, #12
 1241 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1242              	.LVL53:
 255:Core/Src/main.c ****   {
 1243              		.loc 1 255 6 discriminator 1 view .LVU370
 1244 008a 20B9     		cbnz	r0, .L76
 259:Core/Src/main.c **** 
 1245              		.loc 1 259 1 view .LVU371
 1246 008c 15B0     		add	sp, sp, #84
 1247              		.cfi_remember_state
 1248              		.cfi_def_cfa_offset 4
 1249              		@ sp needed
 1250 008e 5DF804FB 		ldr	pc, [sp], #4
 1251              	.L75:
 1252              		.cfi_restore_state
 244:Core/Src/main.c ****   }
 1253              		.loc 1 244 5 is_stmt 1 view .LVU372
 1254 0092 FFF7FEFF 		bl	Error_Handler
 1255              	.LVL54:
 1256              	.L76:
 257:Core/Src/main.c ****   }
 1257              		.loc 1 257 5 view .LVU373
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 53


 1258 0096 FFF7FEFF 		bl	Error_Handler
 1259              	.LVL55:
 1260              	.L78:
 1261 009a 00BF     		.align	2
 1262              	.L77:
 1263 009c 00380240 		.word	1073887232
 1264 00a0 00700040 		.word	1073770496
 1265              		.cfi_endproc
 1266              	.LFE138:
 1268              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1269              		.align	2
 1270              	.LC7:
 1271 0000 436F6465 		.ascii	"Coder Lazada\012\000"
 1271      72204C61 
 1271      7A616461 
 1271      0A00
 1272 000e 0000     		.align	2
 1273              	.LC8:
 1274 0010 53657276 		.ascii	"Service not support\012\000"
 1274      69636520 
 1274      6E6F7420 
 1274      73757070 
 1274      6F72740A 
 1275 0025 000000   		.align	2
 1276              	.LC9:
 1277 0028 45435520 		.ascii	"ECU Response: \000"
 1277      52657370 
 1277      6F6E7365 
 1277      3A2000
 1278 0037 00       		.align	2
 1279              	.LC10:
 1280 0038 4947204F 		.ascii	"IG OFF \000"
 1280      46462000 
 1281              		.align	2
 1282              	.LC11:
 1283 0040 2D3E2049 		.ascii	"-> IG ON \012\000"
 1283      47204F4E 
 1283      200A00
 1284              		.section	.text.main,"ax",%progbits
 1285              		.align	1
 1286              		.global	main
 1287              		.syntax unified
 1288              		.thumb
 1289              		.thumb_func
 1291              	main:
 1292              	.LFB137:
 113:Core/Src/main.c **** 
 1293              		.loc 1 113 1 view -0
 1294              		.cfi_startproc
 1295              		@ Volatile: function does not return.
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 1298 0000 08B5     		push	{r3, lr}
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 3, -8
 1301              		.cfi_offset 14, -4
 122:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 54


 1302              		.loc 1 122 3 view .LVU375
 1303 0002 FFF7FEFF 		bl	HAL_Init
 1304              	.LVL56:
 129:Core/Src/main.c **** 
 1305              		.loc 1 129 3 view .LVU376
 1306 0006 FFF7FEFF 		bl	SystemClock_Config
 1307              	.LVL57:
 136:Core/Src/main.c ****   MX_CAN1_Init();
 1308              		.loc 1 136 3 view .LVU377
 1309 000a FFF7FEFF 		bl	MX_GPIO_Init
 1310              	.LVL58:
 137:Core/Src/main.c ****   MX_CAN2_Init();
 1311              		.loc 1 137 3 view .LVU378
 1312 000e FFF7FEFF 		bl	MX_CAN1_Init
 1313              	.LVL59:
 138:Core/Src/main.c ****   MX_USART3_UART_Init();
 1314              		.loc 1 138 3 view .LVU379
 1315 0012 FFF7FEFF 		bl	MX_CAN2_Init
 1316              	.LVL60:
 139:Core/Src/main.c ****   MX_TIM2_Init();
 1317              		.loc 1 139 3 view .LVU380
 1318 0016 FFF7FEFF 		bl	MX_USART3_UART_Init
 1319              	.LVL61:
 140:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1320              		.loc 1 140 3 view .LVU381
 1321 001a FFF7FEFF 		bl	MX_TIM2_Init
 1322              	.LVL62:
 142:Core/Src/main.c ****   MX_CAN2_Setup();
 1323              		.loc 1 142 3 view .LVU382
 1324 001e FFF7FEFF 		bl	MX_CAN1_Setup
 1325              	.LVL63:
 143:Core/Src/main.c ****   CAN1_Config();
 1326              		.loc 1 143 3 view .LVU383
 1327 0022 FFF7FEFF 		bl	MX_CAN2_Setup
 1328              	.LVL64:
 144:Core/Src/main.c ****   CAN2_Config();
 1329              		.loc 1 144 3 view .LVU384
 1330 0026 FFF7FEFF 		bl	CAN1_Config
 1331              	.LVL65:
 145:Core/Src/main.c **** 
 1332              		.loc 1 145 3 view .LVU385
 1333 002a FFF7FEFF 		bl	CAN2_Config
 1334              	.LVL66:
 147:Core/Src/main.c **** 
 1335              		.loc 1 147 3 view .LVU386
 1336 002e 384B     		ldr	r3, .L96
 1337 0030 1A68     		ldr	r2, [r3]
 1338 0032 D368     		ldr	r3, [r2, #12]
 1339 0034 43F02003 		orr	r3, r3, #32
 1340 0038 D360     		str	r3, [r2, #12]
 149:Core/Src/main.c ****   while (1)
 1341              		.loc 1 149 3 view .LVU387
 1342 003a 3648     		ldr	r0, .L96+4
 1343 003c FFF7FEFF 		bl	USART3_SendString
 1344              	.LVL67:
 1345 0040 1FE0     		b	.L88
 1346              	.L95:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 55


 154:Core/Src/main.c ****       UART_ReadString(REQ_BUFFER, CAN1_DATA_TX, NumBytesReq);
 1347              		.loc 1 154 7 view .LVU388
 1348 0042 6420     		movs	r0, #100
 1349 0044 FFF7FEFF 		bl	HAL_Delay
 1350              	.LVL68:
 155:Core/Src/main.c ****       CAN1_Send();
 1351              		.loc 1 155 7 view .LVU389
 1352 0048 334C     		ldr	r4, .L96+8
 1353 004a 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1354 004c 3349     		ldr	r1, .L96+12
 1355 004e 3448     		ldr	r0, .L96+16
 1356 0050 FFF7FEFF 		bl	UART_ReadString
 1357              	.LVL69:
 156:Core/Src/main.c ****       HAL_Delay(100);
 1358              		.loc 1 156 7 view .LVU390
 1359 0054 FFF7FEFF 		bl	CAN1_Send
 1360              	.LVL70:
 157:Core/Src/main.c ****       NumBytesReq = 0;
 1361              		.loc 1 157 7 view .LVU391
 1362 0058 6420     		movs	r0, #100
 1363 005a FFF7FEFF 		bl	HAL_Delay
 1364              	.LVL71:
 158:Core/Src/main.c ****     }
 1365              		.loc 1 158 7 view .LVU392
 158:Core/Src/main.c ****     }
 1366              		.loc 1 158 19 is_stmt 0 view .LVU393
 1367 005e 0023     		movs	r3, #0
 1368 0060 2380     		strh	r3, [r4]	@ movhi
 1369 0062 12E0     		b	.L80
 1370              	.L82:
 166:Core/Src/main.c ****         break;
 1371              		.loc 1 166 9 is_stmt 1 view .LVU394
 1372 0064 2F49     		ldr	r1, .L96+20
 1373 0066 3048     		ldr	r0, .L96+24
 1374 0068 FFF7FEFF 		bl	SID27_Practice
 1375              	.LVL72:
 167:Core/Src/main.c ****       case 0x22:
 1376              		.loc 1 167 9 view .LVU395
 1377              	.L86:
 178:Core/Src/main.c ****     }
 1378              		.loc 1 178 7 view .LVU396
 178:Core/Src/main.c ****     }
 1379              		.loc 1 178 26 is_stmt 0 view .LVU397
 1380 006c 2F4B     		ldr	r3, .L96+28
 1381 006e 0022     		movs	r2, #0
 1382 0070 1A70     		strb	r2, [r3]
 1383              	.L81:
 180:Core/Src/main.c ****     {
 1384              		.loc 1 180 5 is_stmt 1 view .LVU398
 180:Core/Src/main.c ****     {
 1385              		.loc 1 180 9 is_stmt 0 view .LVU399
 1386 0072 2F4B     		ldr	r3, .L96+32
 1387 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 180:Core/Src/main.c ****     {
 1388              		.loc 1 180 8 view .LVU400
 1389 0076 13BB     		cbnz	r3, .L93
 1390              	.L87:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 56


 186:Core/Src/main.c ****     {
 1391              		.loc 1 186 5 is_stmt 1 view .LVU401
 186:Core/Src/main.c ****     {
 1392              		.loc 1 186 10 is_stmt 0 view .LVU402
 1393 0078 0221     		movs	r1, #2
 1394 007a 2E48     		ldr	r0, .L96+36
 1395 007c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1396              	.LVL73:
 186:Core/Src/main.c ****     {
 1397              		.loc 1 186 8 discriminator 1 view .LVU403
 1398 0080 48B3     		cbz	r0, .L94
 1399              	.L88:
 150:Core/Src/main.c ****   {
 1400              		.loc 1 150 3 is_stmt 1 view .LVU404
 152:Core/Src/main.c ****     {
 1401              		.loc 1 152 5 view .LVU405
 152:Core/Src/main.c ****     {
 1402              		.loc 1 152 21 is_stmt 0 view .LVU406
 1403 0082 254B     		ldr	r3, .L96+8
 1404 0084 1B88     		ldrh	r3, [r3]
 152:Core/Src/main.c ****     {
 1405              		.loc 1 152 8 view .LVU407
 1406 0086 002B     		cmp	r3, #0
 1407 0088 DBD1     		bne	.L95
 1408              	.L80:
 161:Core/Src/main.c ****     {
 1409              		.loc 1 161 5 is_stmt 1 view .LVU408
 161:Core/Src/main.c ****     {
 1410              		.loc 1 161 9 is_stmt 0 view .LVU409
 1411 008a 284B     		ldr	r3, .L96+28
 1412 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 161:Core/Src/main.c ****     {
 1413              		.loc 1 161 8 view .LVU410
 1414 008e 002B     		cmp	r3, #0
 1415 0090 EFD0     		beq	.L81
 163:Core/Src/main.c ****       {
 1416              		.loc 1 163 7 is_stmt 1 view .LVU411
 163:Core/Src/main.c ****       {
 1417              		.loc 1 163 25 is_stmt 0 view .LVU412
 1418 0092 234B     		ldr	r3, .L96+16
 1419 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 163:Core/Src/main.c ****       {
 1420              		.loc 1 163 7 view .LVU413
 1421 0096 272B     		cmp	r3, #39
 1422 0098 E4D0     		beq	.L82
 1423 009a 2E2B     		cmp	r3, #46
 1424 009c 0AD0     		beq	.L83
 1425 009e 222B     		cmp	r3, #34
 1426 00a0 03D0     		beq	.L84
 175:Core/Src/main.c ****         break;
 1427              		.loc 1 175 9 is_stmt 1 view .LVU414
 1428 00a2 2548     		ldr	r0, .L96+40
 1429 00a4 FFF7FEFF 		bl	USART3_SendString
 1430              	.LVL74:
 176:Core/Src/main.c ****       }
 1431              		.loc 1 176 9 view .LVU415
 1432 00a8 E0E7     		b	.L86
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 57


 1433              	.L84:
 169:Core/Src/main.c ****         break;
 1434              		.loc 1 169 9 view .LVU416
 1435 00aa 1E49     		ldr	r1, .L96+20
 1436 00ac 1E48     		ldr	r0, .L96+24
 1437 00ae FFF7FEFF 		bl	SID22_Practice
 1438              	.LVL75:
 170:Core/Src/main.c ****       case 0x2E:
 1439              		.loc 1 170 9 view .LVU417
 1440 00b2 DBE7     		b	.L86
 1441              	.L83:
 172:Core/Src/main.c ****         break;
 1442              		.loc 1 172 9 view .LVU418
 1443 00b4 1B49     		ldr	r1, .L96+20
 1444 00b6 1C48     		ldr	r0, .L96+24
 1445 00b8 FFF7FEFF 		bl	SID2E_Practice
 1446              	.LVL76:
 173:Core/Src/main.c ****       default:
 1447              		.loc 1 173 9 view .LVU419
 1448 00bc D6E7     		b	.L86
 1449              	.L93:
 182:Core/Src/main.c ****       PrintCANLog(CAN1_pHeaderRx.StdId, CAN1_DATA_RX);
 1450              		.loc 1 182 7 view .LVU420
 1451 00be 1F48     		ldr	r0, .L96+44
 1452 00c0 FFF7FEFF 		bl	USART3_SendString
 1453              	.LVL77:
 183:Core/Src/main.c ****       flag_CAN1_Received = 0;
 1454              		.loc 1 183 7 view .LVU421
 1455 00c4 1E49     		ldr	r1, .L96+48
 1456 00c6 1F4B     		ldr	r3, .L96+52
 1457 00c8 1888     		ldrh	r0, [r3]
 1458 00ca FFF7FEFF 		bl	PrintCANLog
 1459              	.LVL78:
 184:Core/Src/main.c ****     }
 1460              		.loc 1 184 7 view .LVU422
 184:Core/Src/main.c ****     }
 1461              		.loc 1 184 26 is_stmt 0 view .LVU423
 1462 00ce 184B     		ldr	r3, .L96+32
 1463 00d0 0022     		movs	r2, #0
 1464 00d2 1A70     		strb	r2, [r3]
 1465 00d4 D0E7     		b	.L87
 1466              	.L94:
 188:Core/Src/main.c ****       USART3_SendString((uint8_t *)"IG OFF ");
 1467              		.loc 1 188 7 is_stmt 1 view .LVU424
 1468 00d6 1420     		movs	r0, #20
 1469 00d8 FFF7FEFF 		bl	HAL_Delay
 1470              	.LVL79:
 189:Core/Src/main.c ****       while (!BtnU)
 1471              		.loc 1 189 7 view .LVU425
 1472 00dc 1A48     		ldr	r0, .L96+56
 1473 00de FFF7FEFF 		bl	USART3_SendString
 1474              	.LVL80:
 190:Core/Src/main.c ****         ;
 1475              		.loc 1 190 7 view .LVU426
 1476              	.L89:
 190:Core/Src/main.c ****         ;
 1477              		.loc 1 190 14 discriminator 1 view .LVU427
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 58


 190:Core/Src/main.c ****         ;
 1478              		.loc 1 190 15 is_stmt 0 discriminator 1 view .LVU428
 1479 00e2 0221     		movs	r1, #2
 1480 00e4 1348     		ldr	r0, .L96+36
 1481 00e6 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1482              	.LVL81:
 190:Core/Src/main.c ****         ;
 1483              		.loc 1 190 14 discriminator 1 view .LVU429
 1484 00ea 0028     		cmp	r0, #0
 1485 00ec F9D0     		beq	.L89
 192:Core/Src/main.c ****       CAN2_Config();
 1486              		.loc 1 192 7 is_stmt 1 view .LVU430
 192:Core/Src/main.c ****       CAN2_Config();
 1487              		.loc 1 192 26 is_stmt 0 view .LVU431
 1488 00ee 174B     		ldr	r3, .L96+60
 1489 00f0 1A88     		ldrh	r2, [r3]
 1490 00f2 174B     		ldr	r3, .L96+64
 1491 00f4 1A60     		str	r2, [r3]
 193:Core/Src/main.c ****       MX_CAN1_Setup();
 1492              		.loc 1 193 7 is_stmt 1 view .LVU432
 1493 00f6 FFF7FEFF 		bl	CAN2_Config
 1494              	.LVL82:
 194:Core/Src/main.c ****       MX_CAN2_Setup();
 1495              		.loc 1 194 7 view .LVU433
 1496 00fa FFF7FEFF 		bl	MX_CAN1_Setup
 1497              	.LVL83:
 195:Core/Src/main.c ****       USART3_SendString((uint8_t *)"-> IG ON \n");
 1498              		.loc 1 195 7 view .LVU434
 1499 00fe FFF7FEFF 		bl	MX_CAN2_Setup
 1500              	.LVL84:
 196:Core/Src/main.c ****       HAL_Delay(20);
 1501              		.loc 1 196 7 view .LVU435
 1502 0102 1448     		ldr	r0, .L96+68
 1503 0104 FFF7FEFF 		bl	USART3_SendString
 1504              	.LVL85:
 197:Core/Src/main.c ****     }
 1505              		.loc 1 197 7 view .LVU436
 1506 0108 1420     		movs	r0, #20
 1507 010a FFF7FEFF 		bl	HAL_Delay
 1508              	.LVL86:
 1509 010e B8E7     		b	.L88
 1510              	.L97:
 1511              		.align	2
 1512              	.L96:
 1513 0110 00000000 		.word	huart3
 1514 0114 00000000 		.word	.LC7
 1515 0118 00000000 		.word	NumBytesReq
 1516 011c 00000000 		.word	CAN1_DATA_TX
 1517 0120 00000000 		.word	REQ_BUFFER
 1518 0124 00000000 		.word	CAN2_DATA_RX
 1519 0128 00000000 		.word	CAN2_DATA_TX
 1520 012c 00000000 		.word	flag_CAN2_Received
 1521 0130 00000000 		.word	flag_CAN1_Received
 1522 0134 00000240 		.word	1073872896
 1523 0138 10000000 		.word	.LC8
 1524 013c 28000000 		.word	.LC9
 1525 0140 00000000 		.word	CAN1_DATA_RX
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 59


 1526 0144 00000000 		.word	CAN1_pHeaderRx
 1527 0148 38000000 		.word	.LC10
 1528 014c 00000000 		.word	newStdId
 1529 0150 00000000 		.word	CAN1_pHeader
 1530 0154 40000000 		.word	.LC11
 1531              		.cfi_endproc
 1532              	.LFE137:
 1534              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 1535              		.align	1
 1536              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 1537              		.syntax unified
 1538              		.thumb
 1539              		.thumb_func
 1541              	HAL_CAN_RxFifo0MsgPendingCallback:
 1542              	.LVL87:
 1543              	.LFB150:
 545:Core/Src/main.c **** 	HAL_StatusTypeDef ret;
 1544              		.loc 1 545 65 view -0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 0
 1547              		@ frame_needed = 0, uses_anonymous_args = 0
 545:Core/Src/main.c **** 	HAL_StatusTypeDef ret;
 1548              		.loc 1 545 65 is_stmt 0 view .LVU438
 1549 0000 08B5     		push	{r3, lr}
 1550              		.cfi_def_cfa_offset 8
 1551              		.cfi_offset 3, -8
 1552              		.cfi_offset 14, -4
 546:Core/Src/main.c **** 	if (hcan == &hcan1) {
 1553              		.loc 1 546 2 is_stmt 1 view .LVU439
 547:Core/Src/main.c **** 		ret = HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &CAN1_pHeaderRx,
 1554              		.loc 1 547 2 view .LVU440
 547:Core/Src/main.c **** 		ret = HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &CAN1_pHeaderRx,
 1555              		.loc 1 547 5 is_stmt 0 view .LVU441
 1556 0002 0F4B     		ldr	r3, .L108
 1557 0004 9842     		cmp	r0, r3
 1558 0006 03D0     		beq	.L104
 556:Core/Src/main.c **** 		ret = HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &CAN2_pHeaderRx,
 1559              		.loc 1 556 2 is_stmt 1 view .LVU442
 556:Core/Src/main.c **** 		ret = HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &CAN2_pHeaderRx,
 1560              		.loc 1 556 5 is_stmt 0 view .LVU443
 1561 0008 0E4B     		ldr	r3, .L108+4
 1562 000a 9842     		cmp	r0, r3
 1563 000c 0CD0     		beq	.L105
 1564              	.LVL88:
 1565              	.L98:
 565:Core/Src/main.c **** 
 1566              		.loc 1 565 1 view .LVU444
 1567 000e 08BD     		pop	{r3, pc}
 1568              	.LVL89:
 1569              	.L104:
 548:Core/Src/main.c **** 				CAN1_DATA_RX);
 1570              		.loc 1 548 3 is_stmt 1 view .LVU445
 548:Core/Src/main.c **** 				CAN1_DATA_RX);
 1571              		.loc 1 548 9 is_stmt 0 view .LVU446
 1572 0010 0D4B     		ldr	r3, .L108+8
 1573 0012 0E4A     		ldr	r2, .L108+12
 1574 0014 0021     		movs	r1, #0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 60


 1575 0016 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 1576              	.LVL90:
 550:Core/Src/main.c **** 			Error_Handler();
 1577              		.loc 1 550 3 is_stmt 1 view .LVU447
 550:Core/Src/main.c **** 			Error_Handler();
 1578              		.loc 1 550 6 is_stmt 0 view .LVU448
 1579 001a 18B9     		cbnz	r0, .L106
 553:Core/Src/main.c **** 		return;
 1580              		.loc 1 553 3 is_stmt 1 view .LVU449
 553:Core/Src/main.c **** 		return;
 1581              		.loc 1 553 21 is_stmt 0 view .LVU450
 1582 001c 0C4B     		ldr	r3, .L108+16
 1583 001e 0122     		movs	r2, #1
 1584 0020 1A70     		strb	r2, [r3]
 554:Core/Src/main.c **** 	}
 1585              		.loc 1 554 3 is_stmt 1 view .LVU451
 1586 0022 F4E7     		b	.L98
 1587              	.L106:
 551:Core/Src/main.c **** 		}
 1588              		.loc 1 551 4 view .LVU452
 1589 0024 FFF7FEFF 		bl	Error_Handler
 1590              	.LVL91:
 1591              	.L105:
 557:Core/Src/main.c **** 				CAN2_DATA_RX);
 1592              		.loc 1 557 3 view .LVU453
 557:Core/Src/main.c **** 				CAN2_DATA_RX);
 1593              		.loc 1 557 9 is_stmt 0 view .LVU454
 1594 0028 0A4B     		ldr	r3, .L108+20
 1595 002a 0B4A     		ldr	r2, .L108+24
 1596 002c 0021     		movs	r1, #0
 1597 002e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 1598              	.LVL92:
 559:Core/Src/main.c **** 			Error_Handler();
 1599              		.loc 1 559 3 is_stmt 1 view .LVU455
 559:Core/Src/main.c **** 			Error_Handler();
 1600              		.loc 1 559 6 is_stmt 0 view .LVU456
 1601 0032 18B9     		cbnz	r0, .L107
 562:Core/Src/main.c **** 		return;
 1602              		.loc 1 562 3 is_stmt 1 view .LVU457
 562:Core/Src/main.c **** 		return;
 1603              		.loc 1 562 21 is_stmt 0 view .LVU458
 1604 0034 094B     		ldr	r3, .L108+28
 1605 0036 0122     		movs	r2, #1
 1606 0038 1A70     		strb	r2, [r3]
 563:Core/Src/main.c **** 	}
 1607              		.loc 1 563 3 is_stmt 1 view .LVU459
 1608 003a E8E7     		b	.L98
 1609              	.L107:
 560:Core/Src/main.c **** 		}
 1610              		.loc 1 560 4 view .LVU460
 1611 003c FFF7FEFF 		bl	Error_Handler
 1612              	.LVL93:
 1613              	.L109:
 560:Core/Src/main.c **** 		}
 1614              		.loc 1 560 4 is_stmt 0 view .LVU461
 1615              		.align	2
 1616              	.L108:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 61


 1617 0040 00000000 		.word	hcan1
 1618 0044 00000000 		.word	hcan2
 1619 0048 00000000 		.word	CAN1_DATA_RX
 1620 004c 00000000 		.word	CAN1_pHeaderRx
 1621 0050 00000000 		.word	flag_CAN1_Received
 1622 0054 00000000 		.word	CAN2_DATA_RX
 1623 0058 00000000 		.word	CAN2_pHeaderRx
 1624 005c 00000000 		.word	flag_CAN2_Received
 1625              		.cfi_endproc
 1626              	.LFE150:
 1628              		.global	bufsend
 1629              		.section	.data.bufsend,"aw"
 1630              		.align	2
 1633              	bufsend:
 1634 0000 5858583A 		.ascii	"XXX: D1 D2 D3 D4 D5 D6 D7 D8  "
 1634      20443120 
 1634      44322044 
 1634      33204434 
 1634      20443520 
 1635              		.global	TimeStamp
 1636              		.section	.bss.TimeStamp,"aw",%nobits
 1637              		.align	2
 1640              	TimeStamp:
 1641 0000 00000000 		.space	4
 1642              		.global	flag_CAN2_Received
 1643              		.section	.bss.flag_CAN2_Received,"aw",%nobits
 1646              	flag_CAN2_Received:
 1647 0000 00       		.space	1
 1648              		.global	flag_CAN1_Received
 1649              		.section	.bss.flag_CAN1_Received,"aw",%nobits
 1652              	flag_CAN1_Received:
 1653 0000 00       		.space	1
 1654              		.global	CAN2_DATA_RX
 1655              		.section	.bss.CAN2_DATA_RX,"aw",%nobits
 1656              		.align	2
 1659              	CAN2_DATA_RX:
 1660 0000 00000000 		.space	8
 1660      00000000 
 1661              		.global	CAN2_DATA_TX
 1662              		.section	.bss.CAN2_DATA_TX,"aw",%nobits
 1663              		.align	2
 1666              	CAN2_DATA_TX:
 1667 0000 00000000 		.space	8
 1667      00000000 
 1668              		.global	CAN1_DATA_RX
 1669              		.section	.bss.CAN1_DATA_RX,"aw",%nobits
 1670              		.align	2
 1673              	CAN1_DATA_RX:
 1674 0000 00000000 		.space	8
 1674      00000000 
 1675              		.global	CAN1_DATA_TX
 1676              		.section	.bss.CAN1_DATA_TX,"aw",%nobits
 1677              		.align	2
 1680              	CAN1_DATA_TX:
 1681 0000 00000000 		.space	8
 1681      00000000 
 1682              		.global	REQ_1BYTE_DATA
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 62


 1683              		.section	.bss.REQ_1BYTE_DATA,"aw",%nobits
 1686              	REQ_1BYTE_DATA:
 1687 0000 00       		.space	1
 1688              		.global	REQ_BUFFER
 1689              		.section	.bss.REQ_BUFFER,"aw",%nobits
 1690              		.align	2
 1693              	REQ_BUFFER:
 1694 0000 00000000 		.space	4096
 1694      00000000 
 1694      00000000 
 1694      00000000 
 1694      00000000 
 1695              		.global	NumBytesReq
 1696              		.section	.bss.NumBytesReq,"aw",%nobits
 1697              		.align	1
 1700              	NumBytesReq:
 1701 0000 0000     		.space	2
 1702              		.global	CAN2_pTxMailbox
 1703              		.section	.bss.CAN2_pTxMailbox,"aw",%nobits
 1704              		.align	2
 1707              	CAN2_pTxMailbox:
 1708 0000 00000000 		.space	4
 1709              		.global	CAN1_pTxMailbox
 1710              		.section	.bss.CAN1_pTxMailbox,"aw",%nobits
 1711              		.align	2
 1714              	CAN1_pTxMailbox:
 1715 0000 00000000 		.space	4
 1716              		.global	CAN2_sFilterConfig
 1717              		.section	.bss.CAN2_sFilterConfig,"aw",%nobits
 1718              		.align	2
 1721              	CAN2_sFilterConfig:
 1722 0000 00000000 		.space	40
 1722      00000000 
 1722      00000000 
 1722      00000000 
 1722      00000000 
 1723              		.global	CAN2_pHeaderRx
 1724              		.section	.bss.CAN2_pHeaderRx,"aw",%nobits
 1725              		.align	2
 1728              	CAN2_pHeaderRx:
 1729 0000 00000000 		.space	28
 1729      00000000 
 1729      00000000 
 1729      00000000 
 1729      00000000 
 1730              		.global	CAN2_pHeader
 1731              		.section	.bss.CAN2_pHeader,"aw",%nobits
 1732              		.align	2
 1735              	CAN2_pHeader:
 1736 0000 00000000 		.space	24
 1736      00000000 
 1736      00000000 
 1736      00000000 
 1736      00000000 
 1737              		.global	CAN1_sFilterConfig
 1738              		.section	.bss.CAN1_sFilterConfig,"aw",%nobits
 1739              		.align	2
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 63


 1742              	CAN1_sFilterConfig:
 1743 0000 00000000 		.space	40
 1743      00000000 
 1743      00000000 
 1743      00000000 
 1743      00000000 
 1744              		.global	CAN1_pHeaderRx
 1745              		.section	.bss.CAN1_pHeaderRx,"aw",%nobits
 1746              		.align	2
 1749              	CAN1_pHeaderRx:
 1750 0000 00000000 		.space	28
 1750      00000000 
 1750      00000000 
 1750      00000000 
 1750      00000000 
 1751              		.global	CAN1_pHeader
 1752              		.section	.bss.CAN1_pHeader,"aw",%nobits
 1753              		.align	2
 1756              	CAN1_pHeader:
 1757 0000 00000000 		.space	24
 1757      00000000 
 1757      00000000 
 1757      00000000 
 1757      00000000 
 1758              		.global	uart3_receive
 1759              		.section	.bss.uart3_receive,"aw",%nobits
 1762              	uart3_receive:
 1763 0000 00       		.space	1
 1764              		.global	huart3
 1765              		.section	.bss.huart3,"aw",%nobits
 1766              		.align	2
 1769              	huart3:
 1770 0000 00000000 		.space	72
 1770      00000000 
 1770      00000000 
 1770      00000000 
 1770      00000000 
 1771              		.global	htim2
 1772              		.section	.bss.htim2,"aw",%nobits
 1773              		.align	2
 1776              	htim2:
 1777 0000 00000000 		.space	72
 1777      00000000 
 1777      00000000 
 1777      00000000 
 1777      00000000 
 1778              		.global	hcan2
 1779              		.section	.bss.hcan2,"aw",%nobits
 1780              		.align	2
 1783              	hcan2:
 1784 0000 00000000 		.space	40
 1784      00000000 
 1784      00000000 
 1784      00000000 
 1784      00000000 
 1785              		.global	hcan1
 1786              		.section	.bss.hcan1,"aw",%nobits
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 64


 1787              		.align	2
 1790              	hcan1:
 1791 0000 00000000 		.space	40
 1791      00000000 
 1791      00000000 
 1791      00000000 
 1791      00000000 
 1792              		.text
 1793              	.Letext0:
 1794              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1795              		.file 4 "C:/Users/PC/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools
 1796              		.file 5 "C:/Users/PC/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools
 1797              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1798              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1799              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1800              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1801              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1802              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1803              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1804              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1805              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1806              		.file 15 "Core/Inc/UDS.h"
 1807              		.file 16 "Core/Inc/main.h"
 1808              		.file 17 "C:/Users/PC/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 1809              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1810              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1811              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1812              		.file 21 "<built-in>"
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 65


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:176    .text.MX_GPIO_Init:000000ac $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:183    .text.CAN1_Config:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:189    .text.CAN1_Config:00000000 CAN1_Config
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:259    .text.CAN1_Config:0000003c $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1756   .bss.CAN1_pHeader:00000000 CAN1_pHeader
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1742   .bss.CAN1_sFilterConfig:00000000 CAN1_sFilterConfig
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1790   .bss.hcan1:00000000 hcan1
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:266    .text.CAN2_Config:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:272    .text.CAN2_Config:00000000 CAN2_Config
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:342    .text.CAN2_Config:00000038 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1735   .bss.CAN2_pHeader:00000000 CAN2_pHeader
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1721   .bss.CAN2_sFilterConfig:00000000 CAN2_sFilterConfig
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1783   .bss.hcan2:00000000 hcan2
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:350    .text.MX_CAN1_Setup:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:356    .text.MX_CAN1_Setup:00000000 MX_CAN1_Setup
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:386    .text.MX_CAN1_Setup:0000001c $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:392    .text.MX_CAN2_Setup:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:398    .text.MX_CAN2_Setup:00000000 MX_CAN2_Setup
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:428    .text.MX_CAN2_Setup:0000001c $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:434    .text.USART3_SendString:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:440    .text.USART3_SendString:00000000 USART3_SendString
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:483    .text.USART3_SendString:00000020 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1769   .bss.huart3:00000000 huart3
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:488    .rodata.PrintCANLog.str1.4:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:507    .text.PrintCANLog:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:513    .text.PrintCANLog:00000000 PrintCANLog
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:674    .text.PrintCANLog:000000b0 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1640   .bss.TimeStamp:00000000 TimeStamp
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1633   .data.bufsend:00000000 bufsend
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:686    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:692    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:720    .text.HAL_UART_RxCpltCallback:00000014 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1700   .bss.NumBytesReq:00000000 NumBytesReq
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1686   .bss.REQ_1BYTE_DATA:00000000 REQ_1BYTE_DATA
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1693   .bss.REQ_BUFFER:00000000 REQ_BUFFER
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:727    .rodata.Error_Handler.str1.4:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:731    .text.Error_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:737    .text.Error_Handler:00000000 Error_Handler
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:775    .text.Error_Handler:0000000c $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:780    .text.MX_CAN1_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:785    .text.MX_CAN1_Init:00000000 MX_CAN1_Init
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:853    .text.MX_CAN1_Init:0000003c $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:859    .text.MX_CAN2_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:864    .text.MX_CAN2_Init:00000000 MX_CAN2_Init
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:932    .text.MX_CAN2_Init:0000003c $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:938    .text.MX_USART3_UART_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:943    .text.MX_USART3_UART_Init:00000000 MX_USART3_UART_Init
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:997    .text.MX_USART3_UART_Init:0000002c $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1003   .text.MX_TIM2_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1008   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1107   .text.MX_TIM2_Init:00000064 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1776   .bss.htim2:00000000 htim2
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1112   .text.SystemClock_Config:00000000 $t
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 66


C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1118   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1263   .text.SystemClock_Config:0000009c $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1269   .rodata.main.str1.4:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1285   .text.main:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1291   .text.main:00000000 main
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1513   .text.main:00000110 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1680   .bss.CAN1_DATA_TX:00000000 CAN1_DATA_TX
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1659   .bss.CAN2_DATA_RX:00000000 CAN2_DATA_RX
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1666   .bss.CAN2_DATA_TX:00000000 CAN2_DATA_TX
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1646   .bss.flag_CAN2_Received:00000000 flag_CAN2_Received
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1652   .bss.flag_CAN1_Received:00000000 flag_CAN1_Received
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1673   .bss.CAN1_DATA_RX:00000000 CAN1_DATA_RX
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1749   .bss.CAN1_pHeaderRx:00000000 CAN1_pHeaderRx
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1535   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1541   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1617   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000040 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1728   .bss.CAN2_pHeaderRx:00000000 CAN2_pHeaderRx
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1630   .data.bufsend:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1637   .bss.TimeStamp:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1647   .bss.flag_CAN2_Received:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1653   .bss.flag_CAN1_Received:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1656   .bss.CAN2_DATA_RX:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1663   .bss.CAN2_DATA_TX:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1670   .bss.CAN1_DATA_RX:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1677   .bss.CAN1_DATA_TX:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1687   .bss.REQ_1BYTE_DATA:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1690   .bss.REQ_BUFFER:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1697   .bss.NumBytesReq:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1707   .bss.CAN2_pTxMailbox:00000000 CAN2_pTxMailbox
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1704   .bss.CAN2_pTxMailbox:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1714   .bss.CAN1_pTxMailbox:00000000 CAN1_pTxMailbox
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1711   .bss.CAN1_pTxMailbox:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1718   .bss.CAN2_sFilterConfig:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1725   .bss.CAN2_pHeaderRx:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1732   .bss.CAN2_pHeader:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1739   .bss.CAN1_sFilterConfig:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1746   .bss.CAN1_pHeaderRx:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1753   .bss.CAN1_pHeader:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1762   .bss.uart3_receive:00000000 uart3_receive
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1763   .bss.uart3_receive:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1766   .bss.huart3:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1773   .bss.htim2:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1780   .bss.hcan2:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s:1787   .bss.hcan1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_UART_Transmit
sprintf
HAL_CAN_Init
HAL_UART_Init
HAL_TIM_Base_Init
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc7HPoyL.s 			page 67


HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
UART_ReadString
CAN1_Send
SID27_Practice
HAL_GPIO_ReadPin
SID22_Practice
SID2E_Practice
newStdId
HAL_CAN_GetRxMessage
