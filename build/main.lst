ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB143:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  44:Core/Src/main.c **** CAN_HandleTypeDef hcan2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** UART_HandleTypeDef huart3;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** uint8_t uart3_receive;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  52:Core/Src/main.c **** CAN_HandleTypeDef hcan2;
  53:Core/Src/main.c **** CAN_TxHeaderTypeDef CAN1_pHeader;
  54:Core/Src/main.c **** CAN_RxHeaderTypeDef CAN1_pHeaderRx;
  55:Core/Src/main.c **** CAN_FilterTypeDef CAN1_sFilterConfig;
  56:Core/Src/main.c **** CAN_TxHeaderTypeDef CAN2_pHeader;
  57:Core/Src/main.c **** CAN_RxHeaderTypeDef CAN2_pHeaderRx;
  58:Core/Src/main.c **** CAN_FilterTypeDef CAN2_sFilterConfig;
  59:Core/Src/main.c **** uint32_t CAN1_pTxMailbox;
  60:Core/Src/main.c **** uint32_t CAN2_pTxMailbox;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** uint8_t CAN1_DATA_TX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00};
  63:Core/Src/main.c **** uint8_t CAN1_DATA_RX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00};
  64:Core/Src/main.c **** uint8_t CAN2_DATA_TX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00};
  65:Core/Src/main.c **** uint8_t CAN2_DATA_RX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00};
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** uint16_t NumBytesReq = 0;
  68:Core/Src/main.c **** uint8_t REQ_BUFFER[4096];
  69:Core/Src/main.c **** uint8_t REQ_1BYTE_DATA;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** unsigned int TimeStamp;
  72:Core/Src/main.c **** char bufsend[30] = "XXX: D1 D2 D3 D4 D5 D6 D7 D8  ";
  73:Core/Src/main.c **** /* USER CODE END PV */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  76:Core/Src/main.c **** void SystemClock_Config(void);
  77:Core/Src/main.c **** static void MX_GPIO_Init(void);
  78:Core/Src/main.c **** static void MX_CAN1_Init(void);
  79:Core/Src/main.c **** static void MX_CAN2_Init(void);
  80:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  81:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  82:Core/Src/main.c **** void USART3_SendString(char *ch);
  83:Core/Src/main.c **** void PrintCANLog(uint16_t CANID, uint8_t *CAN_Frame);
  84:Core/Src/main.c **** uint8_t calc_crc(uint8_t *data, uint8_t crc_len);
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
  88:Core/Src/main.c **** {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 3


  89:Core/Src/main.c ****   REQ_BUFFER[NumBytesReq] = REQ_1BYTE_DATA;
  90:Core/Src/main.c ****   NumBytesReq++;
  91:Core/Src/main.c ****   // REQ_BUFFER[7] = NumBytesReq;
  92:Core/Src/main.c **** }
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** void MX_CAN1_Setup();
  95:Core/Src/main.c **** void MX_CAN2_Setup();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /* USER CODE END PFP */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 100:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* USER CODE END 0 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /**
 105:Core/Src/main.c ****  * @brief  The application entry point.
 106:Core/Src/main.c ****  * @retval int
 107:Core/Src/main.c ****  */
 108:Core/Src/main.c **** int main(void)
 109:Core/Src/main.c **** {
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END 1 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 118:Core/Src/main.c ****   HAL_Init();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END Init */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Configure the system clock */
 125:Core/Src/main.c ****   SystemClock_Config();
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END SysInit */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Initialize all configured peripherals */
 132:Core/Src/main.c ****   MX_GPIO_Init();
 133:Core/Src/main.c ****   MX_CAN1_Init();
 134:Core/Src/main.c ****   MX_CAN2_Init();
 135:Core/Src/main.c ****   MX_USART3_UART_Init();
 136:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 137:Core/Src/main.c ****   MX_CAN1_Setup();
 138:Core/Src/main.c ****   MX_CAN2_Setup();
 139:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart3, UART_IT_RXNE);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE END 2 */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Infinite loop */
 144:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 145:Core/Src/main.c ****   while (1)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 4


 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     /* USER CODE END WHILE */
 148:Core/Src/main.c ****     CAN1_SendRequest();
 149:Core/Src/main.c ****     SID_22_Practice();
 150:Core/Src/main.c ****     HAL_Delay(2000);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c ****   /* USER CODE END 3 */
 155:Core/Src/main.c **** }
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /**
 158:Core/Src/main.c ****  * @brief System Clock Configuration
 159:Core/Src/main.c ****  * @retval None
 160:Core/Src/main.c ****  */
 161:Core/Src/main.c **** void SystemClock_Config(void)
 162:Core/Src/main.c **** {
 163:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 164:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 167:Core/Src/main.c ****    */
 168:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 172:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 173:Core/Src/main.c ****    */
 174:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     Error_Handler();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 189:Core/Src/main.c ****    */
 190:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 191:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     Error_Handler();
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c **** }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 5


 203:Core/Src/main.c ****  * @brief CAN1 Initialization Function
 204:Core/Src/main.c ****  * @param None
 205:Core/Src/main.c ****  * @retval None
 206:Core/Src/main.c ****  */
 207:Core/Src/main.c **** static void MX_CAN1_Init(void)
 208:Core/Src/main.c **** {
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 217:Core/Src/main.c ****   hcan1.Instance = CAN1;
 218:Core/Src/main.c ****   hcan1.Init.Prescaler = 1;
 219:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 220:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 221:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 222:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 223:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 224:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 225:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 226:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 227:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 228:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 229:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     Error_Handler();
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 236:Core/Src/main.c **** }
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** /**
 239:Core/Src/main.c ****  * @brief CAN2 Initialization Function
 240:Core/Src/main.c ****  * @param None
 241:Core/Src/main.c ****  * @retval None
 242:Core/Src/main.c ****  */
 243:Core/Src/main.c **** static void MX_CAN2_Init(void)
 244:Core/Src/main.c **** {
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 0 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE END CAN2_Init 0 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 1 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE END CAN2_Init 1 */
 253:Core/Src/main.c ****   hcan2.Instance = CAN2;
 254:Core/Src/main.c ****   hcan2.Init.Prescaler = 1;
 255:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 256:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 257:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
 258:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
 259:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 6


 260:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 261:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 262:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 263:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 264:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 265:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 266:Core/Src/main.c ****   {
 267:Core/Src/main.c ****     Error_Handler();
 268:Core/Src/main.c ****   }
 269:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 2 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE END CAN2_Init 2 */
 272:Core/Src/main.c **** }
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** /**
 275:Core/Src/main.c ****  * @brief USART3 Initialization Function
 276:Core/Src/main.c ****  * @param None
 277:Core/Src/main.c ****  * @retval None
 278:Core/Src/main.c ****  */
 279:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 280:Core/Src/main.c **** {
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 289:Core/Src/main.c ****   huart3.Instance = USART3;
 290:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 291:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 292:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 293:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 294:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 295:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 296:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 297:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 298:Core/Src/main.c ****   {
 299:Core/Src/main.c ****     Error_Handler();
 300:Core/Src/main.c ****   }
 301:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 304:Core/Src/main.c **** }
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** /**
 307:Core/Src/main.c ****  * @brief GPIO Initialization Function
 308:Core/Src/main.c ****  * @param None
 309:Core/Src/main.c ****  * @retval None
 310:Core/Src/main.c ****  */
 311:Core/Src/main.c **** static void MX_GPIO_Init(void)
 312:Core/Src/main.c **** {
  28              		.loc 1 312 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 7


  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 8BB0     		sub	sp, sp, #44
  40              		.cfi_def_cfa_offset 64
 313:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 313 3 view .LVU1
  42              		.loc 1 313 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 314:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 315:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 318:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 318 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 318 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 318 3 view .LVU5
  54 0012 2B4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 318 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 318 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 318 3 view .LVU8
 319:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 319 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 319 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 319 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 319 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 319 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 319 3 view .LVU14
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 8


 320:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 320 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 320 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 320 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 320 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 320 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 320 3 view .LVU20
 321:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 321 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 321 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 321 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 321 3 view .LVU24
 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00203 		and	r3, r3, #2
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 321 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 321 3 view .LVU26
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /*Configure GPIO pins : PC13 PC4 PC5 PC6
 324:Core/Src/main.c ****                            PC7 */
 325:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;
 114              		.loc 1 325 3 view .LVU27
 115              		.loc 1 325 23 is_stmt 0 view .LVU28
 116 0062 42F2F003 		movw	r3, #8432
 117 0066 0593     		str	r3, [sp, #20]
 326:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 118              		.loc 1 326 3 is_stmt 1 view .LVU29
 327:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 119              		.loc 1 327 3 view .LVU30
 120              		.loc 1 327 24 is_stmt 0 view .LVU31
 121 0068 0125     		movs	r5, #1
 122 006a 0795     		str	r5, [sp, #28]
 328:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 123              		.loc 1 328 3 is_stmt 1 view .LVU32
 124 006c 05A9     		add	r1, sp, #20
 125 006e 1548     		ldr	r0, .L3+4
 126 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 127              	.LVL0:
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 9


 331:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 128              		.loc 1 331 3 view .LVU33
 129              		.loc 1 331 23 is_stmt 0 view .LVU34
 130 0074 0595     		str	r5, [sp, #20]
 332:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 131              		.loc 1 332 3 is_stmt 1 view .LVU35
 132              		.loc 1 332 24 is_stmt 0 view .LVU36
 133 0076 4FF40413 		mov	r3, #2162688
 134 007a 0693     		str	r3, [sp, #24]
 333:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 135              		.loc 1 333 3 is_stmt 1 view .LVU37
 136              		.loc 1 333 24 is_stmt 0 view .LVU38
 137 007c 0795     		str	r5, [sp, #28]
 334:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 138              		.loc 1 334 3 is_stmt 1 view .LVU39
 139 007e 124F     		ldr	r7, .L3+8
 140 0080 05A9     		add	r1, sp, #20
 141 0082 3846     		mov	r0, r7
 142 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL1:
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 337:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 144              		.loc 1 337 3 view .LVU40
 145              		.loc 1 337 23 is_stmt 0 view .LVU41
 146 0088 0226     		movs	r6, #2
 147 008a 0596     		str	r6, [sp, #20]
 338:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 148              		.loc 1 338 3 is_stmt 1 view .LVU42
 149              		.loc 1 338 24 is_stmt 0 view .LVU43
 150 008c 4FF48813 		mov	r3, #1114112
 151 0090 0693     		str	r3, [sp, #24]
 339:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 152              		.loc 1 339 3 is_stmt 1 view .LVU44
 153              		.loc 1 339 24 is_stmt 0 view .LVU45
 154 0092 0794     		str	r4, [sp, #28]
 340:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 155              		.loc 1 340 3 is_stmt 1 view .LVU46
 156 0094 05A9     		add	r1, sp, #20
 157 0096 3846     		mov	r0, r7
 158 0098 FFF7FEFF 		bl	HAL_GPIO_Init
 159              	.LVL2:
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* EXTI interrupt init*/
 343:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 1, 0);
 160              		.loc 1 343 3 view .LVU47
 161 009c 2246     		mov	r2, r4
 162 009e 2946     		mov	r1, r5
 163 00a0 0620     		movs	r0, #6
 164 00a2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 165              	.LVL3:
 344:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 166              		.loc 1 344 3 view .LVU48
 167 00a6 0620     		movs	r0, #6
 168 00a8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 169              	.LVL4:
 345:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 10


 346:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI1_IRQn, 2, 0);
 170              		.loc 1 346 3 view .LVU49
 171 00ac 2246     		mov	r2, r4
 172 00ae 3146     		mov	r1, r6
 173 00b0 0720     		movs	r0, #7
 174 00b2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 175              	.LVL5:
 347:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 176              		.loc 1 347 3 view .LVU50
 177 00b6 0720     		movs	r0, #7
 178 00b8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 179              	.LVL6:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 350:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 351:Core/Src/main.c **** }
 180              		.loc 1 351 1 is_stmt 0 view .LVU51
 181 00bc 0BB0     		add	sp, sp, #44
 182              		.cfi_def_cfa_offset 20
 183              		@ sp needed
 184 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 185              	.L4:
 186              		.align	2
 187              	.L3:
 188 00c0 00380240 		.word	1073887232
 189 00c4 00080240 		.word	1073874944
 190 00c8 00000240 		.word	1073872896
 191              		.cfi_endproc
 192              	.LFE143:
 194              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 195              		.align	1
 196              		.global	HAL_UART_RxCpltCallback
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	HAL_UART_RxCpltCallback:
 202              	.LVL7:
 203              	.LFB137:
  88:Core/Src/main.c ****   REQ_BUFFER[NumBytesReq] = REQ_1BYTE_DATA;
 204              		.loc 1 88 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
  89:Core/Src/main.c ****   NumBytesReq++;
 209              		.loc 1 89 3 view .LVU53
  89:Core/Src/main.c ****   NumBytesReq++;
 210              		.loc 1 89 13 is_stmt 0 view .LVU54
 211 0000 044A     		ldr	r2, .L6
 212 0002 1388     		ldrh	r3, [r2]
  89:Core/Src/main.c ****   NumBytesReq++;
 213              		.loc 1 89 27 view .LVU55
 214 0004 0449     		ldr	r1, .L6+4
 215 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 216              	.LVL8:
  89:Core/Src/main.c ****   NumBytesReq++;
 217              		.loc 1 89 27 view .LVU56
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 11


 218 0008 0449     		ldr	r1, .L6+8
 219 000a C854     		strb	r0, [r1, r3]
  90:Core/Src/main.c ****   // REQ_BUFFER[7] = NumBytesReq;
 220              		.loc 1 90 3 is_stmt 1 view .LVU57
  90:Core/Src/main.c ****   // REQ_BUFFER[7] = NumBytesReq;
 221              		.loc 1 90 14 is_stmt 0 view .LVU58
 222 000c 0133     		adds	r3, r3, #1
 223 000e 1380     		strh	r3, [r2]	@ movhi
  92:Core/Src/main.c **** 
 224              		.loc 1 92 1 view .LVU59
 225 0010 7047     		bx	lr
 226              	.L7:
 227 0012 00BF     		.align	2
 228              	.L6:
 229 0014 00000000 		.word	NumBytesReq
 230 0018 00000000 		.word	REQ_1BYTE_DATA
 231 001c 00000000 		.word	REQ_BUFFER
 232              		.cfi_endproc
 233              	.LFE137:
 235              		.section	.text.MX_CAN1_Setup,"ax",%progbits
 236              		.align	1
 237              		.global	MX_CAN1_Setup
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	MX_CAN1_Setup:
 243              	.LFB144:
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 354:Core/Src/main.c **** void MX_CAN1_Setup()
 355:Core/Src/main.c **** {
 244              		.loc 1 355 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248 0000 10B5     		push	{r4, lr}
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 4, -8
 251              		.cfi_offset 14, -4
 356:Core/Src/main.c ****   CAN1_sFilterConfig.FilterActivation = CAN_FILTER_ENABLE;
 252              		.loc 1 356 3 view .LVU61
 253              		.loc 1 356 39 is_stmt 0 view .LVU62
 254 0002 0E49     		ldr	r1, .L10
 255 0004 0123     		movs	r3, #1
 256 0006 0B62     		str	r3, [r1, #32]
 357:Core/Src/main.c ****   CAN1_sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 257              		.loc 1 357 3 is_stmt 1 view .LVU63
 258              		.loc 1 357 43 is_stmt 0 view .LVU64
 259 0008 0023     		movs	r3, #0
 260 000a 0B61     		str	r3, [r1, #16]
 358:Core/Src/main.c ****   CAN1_sFilterConfig.SlaveStartFilterBank = 13;
 261              		.loc 1 358 3 is_stmt 1 view .LVU65
 262              		.loc 1 358 43 is_stmt 0 view .LVU66
 263 000c 0D22     		movs	r2, #13
 264 000e 4A62     		str	r2, [r1, #36]
 359:Core/Src/main.c ****   CAN1_sFilterConfig.FilterBank = 8;
 265              		.loc 1 359 3 is_stmt 1 view .LVU67
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 12


 266              		.loc 1 359 33 is_stmt 0 view .LVU68
 267 0010 0822     		movs	r2, #8
 268 0012 4A61     		str	r2, [r1, #20]
 360:Core/Src/main.c ****   CAN1_sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 269              		.loc 1 360 3 is_stmt 1 view .LVU69
 270              		.loc 1 360 33 is_stmt 0 view .LVU70
 271 0014 8B61     		str	r3, [r1, #24]
 361:Core/Src/main.c ****   CAN1_sFilterConfig.FilterScale = CAN_FILTERSCALE_16BIT;
 272              		.loc 1 361 3 is_stmt 1 view .LVU71
 273              		.loc 1 361 34 is_stmt 0 view .LVU72
 274 0016 CB61     		str	r3, [r1, #28]
 362:Core/Src/main.c ****   CAN1_sFilterConfig.FilterIdHigh = 0x712 << 5;
 275              		.loc 1 362 3 is_stmt 1 view .LVU73
 276              		.loc 1 362 35 is_stmt 0 view .LVU74
 277 0018 4EF24022 		movw	r2, #57920
 278 001c 0A60     		str	r2, [r1]
 363:Core/Src/main.c ****   CAN1_sFilterConfig.FilterIdLow = 0;
 279              		.loc 1 363 3 is_stmt 1 view .LVU75
 280              		.loc 1 363 34 is_stmt 0 view .LVU76
 281 001e 4B60     		str	r3, [r1, #4]
 364:Core/Src/main.c ****   CAN1_sFilterConfig.FilterMaskIdHigh = 0x712 << 5;
 282              		.loc 1 364 3 is_stmt 1 view .LVU77
 283              		.loc 1 364 39 is_stmt 0 view .LVU78
 284 0020 8A60     		str	r2, [r1, #8]
 365:Core/Src/main.c ****   CAN1_sFilterConfig.FilterMaskIdLow = 0;
 285              		.loc 1 365 3 is_stmt 1 view .LVU79
 286              		.loc 1 365 38 is_stmt 0 view .LVU80
 287 0022 CB60     		str	r3, [r1, #12]
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan1, &CAN1_sFilterConfig);
 288              		.loc 1 367 3 is_stmt 1 view .LVU81
 289 0024 064C     		ldr	r4, .L10+4
 290 0026 2046     		mov	r0, r4
 291 0028 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 292              	.LVL9:
 368:Core/Src/main.c ****   HAL_CAN_Start(&hcan1);
 293              		.loc 1 368 3 view .LVU82
 294 002c 2046     		mov	r0, r4
 295 002e FFF7FEFF 		bl	HAL_CAN_Start
 296              	.LVL10:
 369:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 297              		.loc 1 369 3 view .LVU83
 298 0032 0221     		movs	r1, #2
 299 0034 2046     		mov	r0, r4
 300 0036 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 301              	.LVL11:
 370:Core/Src/main.c **** }
 302              		.loc 1 370 1 is_stmt 0 view .LVU84
 303 003a 10BD     		pop	{r4, pc}
 304              	.L11:
 305              		.align	2
 306              	.L10:
 307 003c 00000000 		.word	CAN1_sFilterConfig
 308 0040 00000000 		.word	hcan1
 309              		.cfi_endproc
 310              	.LFE144:
 312              		.section	.text.MX_CAN2_Setup,"ax",%progbits
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 13


 313              		.align	1
 314              		.global	MX_CAN2_Setup
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 319              	MX_CAN2_Setup:
 320              	.LFB145:
 371:Core/Src/main.c **** 
 372:Core/Src/main.c **** void MX_CAN2_Setup(void)
 373:Core/Src/main.c **** {
 321              		.loc 1 373 1 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 10B5     		push	{r4, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 4, -8
 328              		.cfi_offset 14, -4
 374:Core/Src/main.c ****   CAN2_sFilterConfig.FilterActivation = CAN_FILTER_ENABLE;
 329              		.loc 1 374 3 view .LVU86
 330              		.loc 1 374 39 is_stmt 0 view .LVU87
 331 0002 0E49     		ldr	r1, .L14
 332 0004 0123     		movs	r3, #1
 333 0006 0B62     		str	r3, [r1, #32]
 375:Core/Src/main.c ****   CAN2_sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 334              		.loc 1 375 3 is_stmt 1 view .LVU88
 335              		.loc 1 375 43 is_stmt 0 view .LVU89
 336 0008 0023     		movs	r3, #0
 337 000a 0B61     		str	r3, [r1, #16]
 376:Core/Src/main.c ****   CAN2_sFilterConfig.SlaveStartFilterBank = 13;
 338              		.loc 1 376 3 is_stmt 1 view .LVU90
 339              		.loc 1 376 43 is_stmt 0 view .LVU91
 340 000c 0D22     		movs	r2, #13
 341 000e 4A62     		str	r2, [r1, #36]
 377:Core/Src/main.c ****   CAN2_sFilterConfig.FilterBank = 19;
 342              		.loc 1 377 3 is_stmt 1 view .LVU92
 343              		.loc 1 377 33 is_stmt 0 view .LVU93
 344 0010 1322     		movs	r2, #19
 345 0012 4A61     		str	r2, [r1, #20]
 378:Core/Src/main.c ****   CAN2_sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 346              		.loc 1 378 3 is_stmt 1 view .LVU94
 347              		.loc 1 378 33 is_stmt 0 view .LVU95
 348 0014 8B61     		str	r3, [r1, #24]
 379:Core/Src/main.c ****   CAN2_sFilterConfig.FilterScale = CAN_FILTERSCALE_16BIT;
 349              		.loc 1 379 3 is_stmt 1 view .LVU96
 350              		.loc 1 379 34 is_stmt 0 view .LVU97
 351 0016 CB61     		str	r3, [r1, #28]
 380:Core/Src/main.c ****   CAN2_sFilterConfig.FilterIdHigh = 0x7A2 << 5;
 352              		.loc 1 380 3 is_stmt 1 view .LVU98
 353              		.loc 1 380 35 is_stmt 0 view .LVU99
 354 0018 4FF24042 		movw	r2, #62528
 355 001c 0A60     		str	r2, [r1]
 381:Core/Src/main.c ****   CAN2_sFilterConfig.FilterIdLow = 0;
 356              		.loc 1 381 3 is_stmt 1 view .LVU100
 357              		.loc 1 381 34 is_stmt 0 view .LVU101
 358 001e 4B60     		str	r3, [r1, #4]
 382:Core/Src/main.c ****   CAN2_sFilterConfig.FilterMaskIdHigh = 0x7A2 << 5;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 14


 359              		.loc 1 382 3 is_stmt 1 view .LVU102
 360              		.loc 1 382 39 is_stmt 0 view .LVU103
 361 0020 8A60     		str	r2, [r1, #8]
 383:Core/Src/main.c ****   CAN2_sFilterConfig.FilterMaskIdLow = 0;
 362              		.loc 1 383 3 is_stmt 1 view .LVU104
 363              		.loc 1 383 38 is_stmt 0 view .LVU105
 364 0022 CB60     		str	r3, [r1, #12]
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan2, &CAN2_sFilterConfig);
 365              		.loc 1 385 3 is_stmt 1 view .LVU106
 366 0024 064C     		ldr	r4, .L14+4
 367 0026 2046     		mov	r0, r4
 368 0028 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 369              	.LVL12:
 386:Core/Src/main.c ****   HAL_CAN_Start(&hcan2);
 370              		.loc 1 386 3 view .LVU107
 371 002c 2046     		mov	r0, r4
 372 002e FFF7FEFF 		bl	HAL_CAN_Start
 373              	.LVL13:
 387:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING);
 374              		.loc 1 387 3 view .LVU108
 375 0032 0221     		movs	r1, #2
 376 0034 2046     		mov	r0, r4
 377 0036 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 378              	.LVL14:
 388:Core/Src/main.c **** }
 379              		.loc 1 388 1 is_stmt 0 view .LVU109
 380 003a 10BD     		pop	{r4, pc}
 381              	.L15:
 382              		.align	2
 383              	.L14:
 384 003c 00000000 		.word	CAN2_sFilterConfig
 385 0040 00000000 		.word	hcan2
 386              		.cfi_endproc
 387              	.LFE145:
 389              		.section	.text.USART3_SendString,"ax",%progbits
 390              		.align	1
 391              		.global	USART3_SendString
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	USART3_SendString:
 397              	.LVL15:
 398              	.LFB146:
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** void USART3_SendString(char *ch)
 391:Core/Src/main.c **** {
 399              		.loc 1 391 1 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		.loc 1 391 1 is_stmt 0 view .LVU111
 404 0000 10B5     		push	{r4, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 4, -8
 407              		.cfi_offset 14, -4
 408 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 15


 392:Core/Src/main.c ****   while (*ch != 0)
 409              		.loc 1 392 3 is_stmt 1 view .LVU112
 410              		.loc 1 392 9 is_stmt 0 view .LVU113
 411 0004 07E0     		b	.L17
 412              	.LVL16:
 413              	.L18:
 393:Core/Src/main.c ****   {
 394:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, ch, 1, HAL_MAX_DELAY);
 414              		.loc 1 394 5 is_stmt 1 view .LVU114
 415 0006 4FF0FF33 		mov	r3, #-1
 416 000a 0122     		movs	r2, #1
 417 000c 2146     		mov	r1, r4
 418 000e 0448     		ldr	r0, .L20
 419 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 420              	.LVL17:
 395:Core/Src/main.c ****     ch++;
 421              		.loc 1 395 5 view .LVU115
 422              		.loc 1 395 7 is_stmt 0 view .LVU116
 423 0014 0134     		adds	r4, r4, #1
 424              	.LVL18:
 425              	.L17:
 392:Core/Src/main.c ****   while (*ch != 0)
 426              		.loc 1 392 14 is_stmt 1 view .LVU117
 392:Core/Src/main.c ****   while (*ch != 0)
 427              		.loc 1 392 10 is_stmt 0 view .LVU118
 428 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 392:Core/Src/main.c ****   while (*ch != 0)
 429              		.loc 1 392 14 view .LVU119
 430 0018 002B     		cmp	r3, #0
 431 001a F4D1     		bne	.L18
 396:Core/Src/main.c ****   }
 397:Core/Src/main.c **** }
 432              		.loc 1 397 1 view .LVU120
 433 001c 10BD     		pop	{r4, pc}
 434              	.LVL19:
 435              	.L21:
 436              		.loc 1 397 1 view .LVU121
 437 001e 00BF     		.align	2
 438              	.L20:
 439 0020 00000000 		.word	huart3
 440              		.cfi_endproc
 441              	.LFE146:
 443              		.section	.rodata.PrintCANLog.str1.4,"aMS",%progbits,1
 444              		.align	2
 445              	.LC2:
 446 0000 256400   		.ascii	"%d\000"
 447 0003 00       		.align	2
 448              	.LC3:
 449 0004 2000     		.ascii	" \000"
 450 0006 0000     		.align	2
 451              	.LC4:
 452 0008 25303358 		.ascii	"%03X\000"
 452      00
 453 000d 000000   		.align	2
 454              	.LC5:
 455 0010 25303258 		.ascii	"%02X\000"
 455      00
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 16


 456 0015 000000   		.align	2
 457              	.LC0:
 458 0018 20202000 		.ascii	"   \000"
 459              		.align	2
 460              	.LC1:
 461 001c 20202020 		.ascii	"        \000"
 461      20202020 
 461      00
 462              		.section	.text.PrintCANLog,"ax",%progbits
 463              		.align	1
 464              		.global	PrintCANLog
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 469              	PrintCANLog:
 470              	.LVL20:
 471              	.LFB147:
 398:Core/Src/main.c **** 
 399:Core/Src/main.c **** void PrintCANLog(uint16_t CANID, uint8_t *CAN_Frame)
 400:Core/Src/main.c **** {
 472              		.loc 1 400 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 16
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		.loc 1 400 1 is_stmt 0 view .LVU123
 477 0000 70B5     		push	{r4, r5, r6, lr}
 478              		.cfi_def_cfa_offset 16
 479              		.cfi_offset 4, -16
 480              		.cfi_offset 5, -12
 481              		.cfi_offset 6, -8
 482              		.cfi_offset 14, -4
 483 0002 84B0     		sub	sp, sp, #16
 484              		.cfi_def_cfa_offset 32
 485 0004 0646     		mov	r6, r0
 486 0006 0D46     		mov	r5, r1
 401:Core/Src/main.c ****   uint16_t loopIndx = 0;
 487              		.loc 1 401 3 is_stmt 1 view .LVU124
 488              	.LVL21:
 402:Core/Src/main.c ****   char bufID[3] = "   ";
 489              		.loc 1 402 3 view .LVU125
 490              		.loc 1 402 8 is_stmt 0 view .LVU126
 491 0008 294B     		ldr	r3, .L28
 492 000a 1B68     		ldr	r3, [r3]
 493 000c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 494 0010 1B0C     		lsrs	r3, r3, #16
 495 0012 8DF80E30 		strb	r3, [sp, #14]
 403:Core/Src/main.c ****   char bufDat[2] = "  ";
 496              		.loc 1 403 3 is_stmt 1 view .LVU127
 497              		.loc 1 403 8 is_stmt 0 view .LVU128
 498 0016 42F22003 		movw	r3, #8224
 499 001a ADF80830 		strh	r3, [sp, #8]	@ movhi
 404:Core/Src/main.c ****   char bufTime[8] = "        ";
 500              		.loc 1 404 3 is_stmt 1 view .LVU129
 501              		.loc 1 404 8 is_stmt 0 view .LVU130
 502 001e 254B     		ldr	r3, .L28+4
 503 0020 6C46     		mov	r4, sp
 504 0022 93E80300 		ldm	r3, {r0, r1}
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 17


 505              	.LVL22:
 506              		.loc 1 404 8 view .LVU131
 507 0026 84E80300 		stm	r4, {r0, r1}
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   sprintf(bufTime, "%d", TimeStamp);
 508              		.loc 1 406 3 is_stmt 1 view .LVU132
 509 002a 234B     		ldr	r3, .L28+8
 510 002c 1A68     		ldr	r2, [r3]
 511 002e 2349     		ldr	r1, .L28+12
 512 0030 2046     		mov	r0, r4
 513 0032 FFF7FEFF 		bl	sprintf
 514              	.LVL23:
 407:Core/Src/main.c ****   USART3_SendString((uint8_t *)bufTime);
 515              		.loc 1 407 3 view .LVU133
 516 0036 2046     		mov	r0, r4
 517 0038 FFF7FEFF 		bl	USART3_SendString
 518              	.LVL24:
 408:Core/Src/main.c ****   USART3_SendString((uint8_t *)" ");
 519              		.loc 1 408 3 view .LVU134
 520 003c 2048     		ldr	r0, .L28+16
 521 003e FFF7FEFF 		bl	USART3_SendString
 522              	.LVL25:
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   sprintf(bufID, "%03X", CANID);
 523              		.loc 1 410 3 view .LVU135
 524 0042 3246     		mov	r2, r6
 525 0044 1F49     		ldr	r1, .L28+20
 526 0046 03A8     		add	r0, sp, #12
 527 0048 FFF7FEFF 		bl	sprintf
 528              	.LVL26:
 411:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 3; loopIndx++)
 529              		.loc 1 411 3 view .LVU136
 530              		.loc 1 411 17 is_stmt 0 view .LVU137
 531 004c 0023     		movs	r3, #0
 532              		.loc 1 411 3 view .LVU138
 533 004e 08E0     		b	.L23
 534              	.LVL27:
 535              	.L24:
 412:Core/Src/main.c ****   {
 413:Core/Src/main.c ****     bufsend[loopIndx] = bufID[loopIndx];
 536              		.loc 1 413 5 is_stmt 1 view .LVU139
 537              		.loc 1 413 30 is_stmt 0 view .LVU140
 538 0050 03F11002 		add	r2, r3, #16
 539 0054 6A44     		add	r2, sp, r2
 540 0056 12F8041C 		ldrb	r1, [r2, #-4]	@ zero_extendqisi2
 541              		.loc 1 413 23 view .LVU141
 542 005a 1B4A     		ldr	r2, .L28+24
 543 005c D154     		strb	r1, [r2, r3]
 411:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 3; loopIndx++)
 544              		.loc 1 411 44 is_stmt 1 discriminator 3 view .LVU142
 545 005e 0133     		adds	r3, r3, #1
 546              	.LVL28:
 411:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 3; loopIndx++)
 547              		.loc 1 411 44 is_stmt 0 discriminator 3 view .LVU143
 548 0060 9BB2     		uxth	r3, r3
 549              	.LVL29:
 550              	.L23:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 18


 411:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 3; loopIndx++)
 551              		.loc 1 411 31 is_stmt 1 discriminator 1 view .LVU144
 552 0062 022B     		cmp	r3, #2
 553 0064 F4D9     		bls	.L24
 414:Core/Src/main.c ****   }
 415:Core/Src/main.c ****   bufsend[3] = ':';
 554              		.loc 1 415 3 view .LVU145
 555              		.loc 1 415 14 is_stmt 0 view .LVU146
 556 0066 184B     		ldr	r3, .L28+24
 557              	.LVL30:
 558              		.loc 1 415 14 view .LVU147
 559 0068 3A22     		movs	r2, #58
 560 006a DA70     		strb	r2, [r3, #3]
 416:Core/Src/main.c ****   bufsend[4] = ' ';
 561              		.loc 1 416 3 is_stmt 1 view .LVU148
 562              		.loc 1 416 14 is_stmt 0 view .LVU149
 563 006c 2022     		movs	r2, #32
 564 006e 1A71     		strb	r2, [r3, #4]
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 8; loopIndx++)
 565              		.loc 1 418 3 is_stmt 1 view .LVU150
 566              	.LVL31:
 567              		.loc 1 418 17 is_stmt 0 view .LVU151
 568 0070 0024     		movs	r4, #0
 569              		.loc 1 418 3 view .LVU152
 570 0072 14E0     		b	.L25
 571              	.LVL32:
 572              	.L26:
 419:Core/Src/main.c ****   {
 420:Core/Src/main.c ****     sprintf(bufDat, "%02X", CAN_Frame[loopIndx]);
 573              		.loc 1 420 5 is_stmt 1 view .LVU153
 574 0074 2A5D     		ldrb	r2, [r5, r4]	@ zero_extendqisi2
 575 0076 1549     		ldr	r1, .L28+28
 576 0078 02A8     		add	r0, sp, #8
 577 007a FFF7FEFF 		bl	sprintf
 578              	.LVL33:
 421:Core/Src/main.c ****     bufsend[loopIndx * 3 + 5] = bufDat[0];
 579              		.loc 1 421 5 view .LVU154
 580              		.loc 1 421 22 is_stmt 0 view .LVU155
 581 007e 04EB4403 		add	r3, r4, r4, lsl #1
 582              		.loc 1 421 26 view .LVU156
 583 0082 591D     		adds	r1, r3, #5
 584              		.loc 1 421 39 view .LVU157
 585 0084 9DF80800 		ldrb	r0, [sp, #8]	@ zero_extendqisi2
 586              		.loc 1 421 31 view .LVU158
 587 0088 0F4A     		ldr	r2, .L28+24
 588 008a 5054     		strb	r0, [r2, r1]
 422:Core/Src/main.c ****     bufsend[loopIndx * 3 + 6] = bufDat[1];
 589              		.loc 1 422 5 is_stmt 1 view .LVU159
 590              		.loc 1 422 26 is_stmt 0 view .LVU160
 591 008c 991D     		adds	r1, r3, #6
 592              		.loc 1 422 39 view .LVU161
 593 008e 9DF80900 		ldrb	r0, [sp, #9]	@ zero_extendqisi2
 594              		.loc 1 422 31 view .LVU162
 595 0092 5054     		strb	r0, [r2, r1]
 423:Core/Src/main.c ****     bufsend[loopIndx * 3 + 7] = ' ';
 596              		.loc 1 423 5 is_stmt 1 view .LVU163
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 19


 597              		.loc 1 423 26 is_stmt 0 view .LVU164
 598 0094 0733     		adds	r3, r3, #7
 599              		.loc 1 423 31 view .LVU165
 600 0096 2021     		movs	r1, #32
 601 0098 D154     		strb	r1, [r2, r3]
 418:Core/Src/main.c ****   {
 602              		.loc 1 418 44 is_stmt 1 discriminator 3 view .LVU166
 603 009a 0134     		adds	r4, r4, #1
 604              	.LVL34:
 418:Core/Src/main.c ****   {
 605              		.loc 1 418 44 is_stmt 0 discriminator 3 view .LVU167
 606 009c A4B2     		uxth	r4, r4
 607              	.LVL35:
 608              	.L25:
 418:Core/Src/main.c ****   {
 609              		.loc 1 418 31 is_stmt 1 discriminator 1 view .LVU168
 610 009e 072C     		cmp	r4, #7
 611 00a0 E8D9     		bls	.L26
 424:Core/Src/main.c ****   }
 425:Core/Src/main.c ****   bufsend[29] = '\n';
 612              		.loc 1 425 3 view .LVU169
 613              		.loc 1 425 15 is_stmt 0 view .LVU170
 614 00a2 0948     		ldr	r0, .L28+24
 615 00a4 0A23     		movs	r3, #10
 616 00a6 4377     		strb	r3, [r0, #29]
 426:Core/Src/main.c ****   USART3_SendString((unsigned char *)bufsend);
 617              		.loc 1 426 3 is_stmt 1 view .LVU171
 618 00a8 FFF7FEFF 		bl	USART3_SendString
 619              	.LVL36:
 427:Core/Src/main.c **** }
 620              		.loc 1 427 1 is_stmt 0 view .LVU172
 621 00ac 04B0     		add	sp, sp, #16
 622              		.cfi_def_cfa_offset 16
 623              		@ sp needed
 624 00ae 70BD     		pop	{r4, r5, r6, pc}
 625              	.LVL37:
 626              	.L29:
 627              		.loc 1 427 1 view .LVU173
 628              		.align	2
 629              	.L28:
 630 00b0 18000000 		.word	.LC0
 631 00b4 1C000000 		.word	.LC1
 632 00b8 00000000 		.word	TimeStamp
 633 00bc 00000000 		.word	.LC2
 634 00c0 04000000 		.word	.LC3
 635 00c4 08000000 		.word	.LC4
 636 00c8 00000000 		.word	bufsend
 637 00cc 10000000 		.word	.LC5
 638              		.cfi_endproc
 639              	.LFE147:
 641              		.section	.text.calc_crc,"ax",%progbits
 642              		.align	1
 643              		.global	calc_crc
 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 648              	calc_crc:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 20


 649              	.LVL38:
 650              	.LFB148:
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** uint8_t calc_crc(uint8_t *data, uint8_t crc_len)
 430:Core/Src/main.c **** {
 651              		.loc 1 430 1 is_stmt 1 view -0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              		.loc 1 430 1 is_stmt 0 view .LVU175
 656 0000 00B5     		push	{lr}
 657              		.cfi_def_cfa_offset 4
 658              		.cfi_offset 14, -4
 659 0002 8646     		mov	lr, r0
 660 0004 8C46     		mov	ip, r1
 431:Core/Src/main.c ****   uint8_t idx, crc, temp1, temp2, idy;
 661              		.loc 1 431 3 is_stmt 1 view .LVU176
 432:Core/Src/main.c ****   crc = 0;
 662              		.loc 1 432 3 view .LVU177
 663              	.LVL39:
 433:Core/Src/main.c ****   idx = 0;
 664              		.loc 1 433 3 view .LVU178
 434:Core/Src/main.c ****   idy = 0;
 665              		.loc 1 434 3 view .LVU179
 435:Core/Src/main.c ****   temp1 = 0;
 666              		.loc 1 435 3 view .LVU180
 436:Core/Src/main.c ****   temp2 = 0;
 667              		.loc 1 436 3 view .LVU181
 437:Core/Src/main.c ****   for (idx = 0; idx < crc_len + 1; idx++)
 668              		.loc 1 437 3 view .LVU182
 432:Core/Src/main.c ****   idx = 0;
 669              		.loc 1 432 7 is_stmt 0 view .LVU183
 670 0006 0020     		movs	r0, #0
 671              	.LVL40:
 672              		.loc 1 437 12 view .LVU184
 673 0008 0146     		mov	r1, r0
 674              	.LVL41:
 675              		.loc 1 437 3 view .LVU185
 676 000a 0FE0     		b	.L31
 677              	.LVL42:
 678              	.L37:
 438:Core/Src/main.c ****   {
 439:Core/Src/main.c ****     if (idx == 0)
 440:Core/Src/main.c ****     {
 441:Core/Src/main.c ****       temp1 = 0;
 679              		.loc 1 441 13 view .LVU186
 680 000c 0B46     		mov	r3, r1
 681 000e 15E0     		b	.L32
 682              	.LVL43:
 683              	.L34:
 442:Core/Src/main.c ****     }
 443:Core/Src/main.c ****     else
 444:Core/Src/main.c ****     {
 445:Core/Src/main.c ****       temp1 = data[crc_len - idx];
 446:Core/Src/main.c ****     }
 447:Core/Src/main.c ****     crc = (crc ^ temp1);
 448:Core/Src/main.c ****     for (idy = (uint8_t)8; idy > 0; idy--)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 21


 684              		.loc 1 448 40 is_stmt 1 discriminator 2 view .LVU187
 685 0010 013B     		subs	r3, r3, #1
 686              	.LVL44:
 687              		.loc 1 448 40 is_stmt 0 discriminator 2 view .LVU188
 688 0012 DBB2     		uxtb	r3, r3
 689              	.LVL45:
 690              		.loc 1 448 40 discriminator 2 view .LVU189
 691 0014 1046     		mov	r0, r2
 692              	.LVL46:
 693              	.L33:
 694              		.loc 1 448 32 is_stmt 1 discriminator 1 view .LVU190
 695 0016 3BB1     		cbz	r3, .L39
 449:Core/Src/main.c ****     {
 450:Core/Src/main.c ****       // Save the value before the top bit is shifted out.
 451:Core/Src/main.c ****       temp2 = crc;
 696              		.loc 1 451 7 view .LVU191
 697              	.LVL47:
 452:Core/Src/main.c ****       crc <<= 1;
 698              		.loc 1 452 7 view .LVU192
 699              		.loc 1 452 11 is_stmt 0 view .LVU193
 700 0018 4200     		lsls	r2, r0, #1
 701 001a D2B2     		uxtb	r2, r2
 702              	.LVL48:
 453:Core/Src/main.c ****       if (0 != (temp2 & (uint8_t)128))
 703              		.loc 1 453 7 is_stmt 1 view .LVU194
 704              		.loc 1 453 10 is_stmt 0 view .LVU195
 705 001c 10F0800F 		tst	r0, #128
 706 0020 F6D0     		beq	.L34
 454:Core/Src/main.c ****         crc ^= 0x1D;
 707              		.loc 1 454 9 is_stmt 1 view .LVU196
 708              		.loc 1 454 13 is_stmt 0 view .LVU197
 709 0022 82F01D02 		eor	r2, r2, #29
 710              	.LVL49:
 711              		.loc 1 454 13 view .LVU198
 712 0026 F3E7     		b	.L34
 713              	.LVL50:
 714              	.L39:
 437:Core/Src/main.c ****   {
 715              		.loc 1 437 39 is_stmt 1 discriminator 2 view .LVU199
 716 0028 0131     		adds	r1, r1, #1
 717              	.LVL51:
 437:Core/Src/main.c ****   {
 718              		.loc 1 437 39 is_stmt 0 discriminator 2 view .LVU200
 719 002a C9B2     		uxtb	r1, r1
 720              	.LVL52:
 721              	.L31:
 437:Core/Src/main.c ****   {
 722              		.loc 1 437 21 is_stmt 1 discriminator 1 view .LVU201
 723 002c 6145     		cmp	r1, ip
 724 002e 09D8     		bhi	.L40
 439:Core/Src/main.c ****     {
 725              		.loc 1 439 5 view .LVU202
 439:Core/Src/main.c ****     {
 726              		.loc 1 439 8 is_stmt 0 view .LVU203
 727 0030 0029     		cmp	r1, #0
 728 0032 EBD0     		beq	.L37
 445:Core/Src/main.c ****     }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 22


 729              		.loc 1 445 7 is_stmt 1 view .LVU204
 445:Core/Src/main.c ****     }
 730              		.loc 1 445 28 is_stmt 0 view .LVU205
 731 0034 ACEB0103 		sub	r3, ip, r1
 445:Core/Src/main.c ****     }
 732              		.loc 1 445 13 view .LVU206
 733 0038 1EF80330 		ldrb	r3, [lr, r3]	@ zero_extendqisi2
 734              	.LVL53:
 735              	.L32:
 447:Core/Src/main.c ****     for (idy = (uint8_t)8; idy > 0; idy--)
 736              		.loc 1 447 5 is_stmt 1 view .LVU207
 447:Core/Src/main.c ****     for (idy = (uint8_t)8; idy > 0; idy--)
 737              		.loc 1 447 9 is_stmt 0 view .LVU208
 738 003c 5840     		eors	r0, r0, r3
 739              	.LVL54:
 447:Core/Src/main.c ****     for (idy = (uint8_t)8; idy > 0; idy--)
 740              		.loc 1 447 9 view .LVU209
 741 003e C0B2     		uxtb	r0, r0
 742              	.LVL55:
 448:Core/Src/main.c ****     {
 743              		.loc 1 448 5 is_stmt 1 view .LVU210
 448:Core/Src/main.c ****     {
 744              		.loc 1 448 14 is_stmt 0 view .LVU211
 745 0040 0823     		movs	r3, #8
 746              	.LVL56:
 448:Core/Src/main.c ****     {
 747              		.loc 1 448 5 view .LVU212
 748 0042 E8E7     		b	.L33
 749              	.LVL57:
 750              	.L40:
 455:Core/Src/main.c ****     }
 456:Core/Src/main.c ****   }
 457:Core/Src/main.c ****   return crc;
 751              		.loc 1 457 3 is_stmt 1 view .LVU213
 458:Core/Src/main.c **** }
 752              		.loc 1 458 1 is_stmt 0 view .LVU214
 753 0044 5DF804FB 		ldr	pc, [sp], #4
 754              		.cfi_endproc
 755              	.LFE148:
 757              		.section	.text.Error_Handler,"ax",%progbits
 758              		.align	1
 759              		.global	Error_Handler
 760              		.syntax unified
 761              		.thumb
 762              		.thumb_func
 764              	Error_Handler:
 765              	.LFB149:
 459:Core/Src/main.c **** /* USER CODE END 4 */
 460:Core/Src/main.c **** 
 461:Core/Src/main.c **** /**
 462:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 463:Core/Src/main.c ****  * @retval None
 464:Core/Src/main.c ****  */
 465:Core/Src/main.c **** void Error_Handler(void)
 466:Core/Src/main.c **** {
 766              		.loc 1 466 1 is_stmt 1 view -0
 767              		.cfi_startproc
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 23


 768              		@ Volatile: function does not return.
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 467:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 468:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 469:Core/Src/main.c ****   __disable_irq();
 772              		.loc 1 469 3 view .LVU216
 773              	.LBB8:
 774              	.LBI8:
 775              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 24


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 25


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 26


 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 27


 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 28


 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 29


 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 30


 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 31


 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 32


 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 33


 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 34


 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 35


 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 36


 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 37


 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 38


 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 39


 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 40


 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 776              		.loc 2 960 27 view .LVU217
 777              	.LBB9:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 778              		.loc 2 962 3 view .LVU218
 779              		.syntax unified
 780              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 781 0000 72B6     		cpsid i
 782              	@ 0 "" 2
 783              		.thumb
 784              		.syntax unified
 785              	.L42:
 786              	.LBE9:
 787              	.LBE8:
 470:Core/Src/main.c ****   while (1)
 788              		.loc 1 470 3 view .LVU219
 471:Core/Src/main.c ****   {
 472:Core/Src/main.c ****   }
 789              		.loc 1 472 3 view .LVU220
 470:Core/Src/main.c ****   while (1)
 790              		.loc 1 470 9 view .LVU221
 791 0002 FEE7     		b	.L42
 792              		.cfi_endproc
 793              	.LFE149:
 795              		.section	.text.MX_CAN1_Init,"ax",%progbits
 796              		.align	1
 797              		.syntax unified
 798              		.thumb
 799              		.thumb_func
 801              	MX_CAN1_Init:
 802              	.LFB140:
 208:Core/Src/main.c **** 
 803              		.loc 1 208 1 view -0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807 0000 08B5     		push	{r3, lr}
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 3, -8
 810              		.cfi_offset 14, -4
 217:Core/Src/main.c ****   hcan1.Init.Prescaler = 1;
 811              		.loc 1 217 3 view .LVU223
 217:Core/Src/main.c ****   hcan1.Init.Prescaler = 1;
 812              		.loc 1 217 18 is_stmt 0 view .LVU224
 813 0002 0E48     		ldr	r0, .L47
 814 0004 0E4B     		ldr	r3, .L47+4
 815 0006 0360     		str	r3, [r0]
 218:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 816              		.loc 1 218 3 is_stmt 1 view .LVU225
 218:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 817              		.loc 1 218 24 is_stmt 0 view .LVU226
 818 0008 0123     		movs	r3, #1
 819 000a 4360     		str	r3, [r0, #4]
 219:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 820              		.loc 1 219 3 is_stmt 1 view .LVU227
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 41


 219:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 821              		.loc 1 219 19 is_stmt 0 view .LVU228
 822 000c 0023     		movs	r3, #0
 823 000e 8360     		str	r3, [r0, #8]
 220:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 824              		.loc 1 220 3 is_stmt 1 view .LVU229
 220:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 825              		.loc 1 220 28 is_stmt 0 view .LVU230
 826 0010 4FF08072 		mov	r2, #16777216
 827 0014 C260     		str	r2, [r0, #12]
 221:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 828              		.loc 1 221 3 is_stmt 1 view .LVU231
 221:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 829              		.loc 1 221 23 is_stmt 0 view .LVU232
 830 0016 4FF42022 		mov	r2, #655360
 831 001a 0261     		str	r2, [r0, #16]
 222:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 832              		.loc 1 222 3 is_stmt 1 view .LVU233
 222:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 833              		.loc 1 222 23 is_stmt 0 view .LVU234
 834 001c 4FF44012 		mov	r2, #3145728
 835 0020 4261     		str	r2, [r0, #20]
 223:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 836              		.loc 1 223 3 is_stmt 1 view .LVU235
 223:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 837              		.loc 1 223 32 is_stmt 0 view .LVU236
 838 0022 0376     		strb	r3, [r0, #24]
 224:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 839              		.loc 1 224 3 is_stmt 1 view .LVU237
 224:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 840              		.loc 1 224 25 is_stmt 0 view .LVU238
 841 0024 4376     		strb	r3, [r0, #25]
 225:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 842              		.loc 1 225 3 is_stmt 1 view .LVU239
 225:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 843              		.loc 1 225 25 is_stmt 0 view .LVU240
 844 0026 8376     		strb	r3, [r0, #26]
 226:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 845              		.loc 1 226 3 is_stmt 1 view .LVU241
 226:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 846              		.loc 1 226 33 is_stmt 0 view .LVU242
 847 0028 C376     		strb	r3, [r0, #27]
 227:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 848              		.loc 1 227 3 is_stmt 1 view .LVU243
 227:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 849              		.loc 1 227 32 is_stmt 0 view .LVU244
 850 002a 0377     		strb	r3, [r0, #28]
 228:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 851              		.loc 1 228 3 is_stmt 1 view .LVU245
 228:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 852              		.loc 1 228 35 is_stmt 0 view .LVU246
 853 002c 4377     		strb	r3, [r0, #29]
 229:Core/Src/main.c ****   {
 854              		.loc 1 229 3 is_stmt 1 view .LVU247
 229:Core/Src/main.c ****   {
 855              		.loc 1 229 7 is_stmt 0 view .LVU248
 856 002e FFF7FEFF 		bl	HAL_CAN_Init
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 42


 857              	.LVL58:
 229:Core/Src/main.c ****   {
 858              		.loc 1 229 6 discriminator 1 view .LVU249
 859 0032 00B9     		cbnz	r0, .L46
 236:Core/Src/main.c **** 
 860              		.loc 1 236 1 view .LVU250
 861 0034 08BD     		pop	{r3, pc}
 862              	.L46:
 231:Core/Src/main.c ****   }
 863              		.loc 1 231 5 is_stmt 1 view .LVU251
 864 0036 FFF7FEFF 		bl	Error_Handler
 865              	.LVL59:
 866              	.L48:
 867 003a 00BF     		.align	2
 868              	.L47:
 869 003c 00000000 		.word	hcan1
 870 0040 00640040 		.word	1073767424
 871              		.cfi_endproc
 872              	.LFE140:
 874              		.section	.text.MX_CAN2_Init,"ax",%progbits
 875              		.align	1
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 880              	MX_CAN2_Init:
 881              	.LFB141:
 244:Core/Src/main.c **** 
 882              		.loc 1 244 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886 0000 08B5     		push	{r3, lr}
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 3, -8
 889              		.cfi_offset 14, -4
 253:Core/Src/main.c ****   hcan2.Init.Prescaler = 1;
 890              		.loc 1 253 3 view .LVU253
 253:Core/Src/main.c ****   hcan2.Init.Prescaler = 1;
 891              		.loc 1 253 18 is_stmt 0 view .LVU254
 892 0002 0E48     		ldr	r0, .L53
 893 0004 0E4B     		ldr	r3, .L53+4
 894 0006 0360     		str	r3, [r0]
 254:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 895              		.loc 1 254 3 is_stmt 1 view .LVU255
 254:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 896              		.loc 1 254 24 is_stmt 0 view .LVU256
 897 0008 0123     		movs	r3, #1
 898 000a 4360     		str	r3, [r0, #4]
 255:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 899              		.loc 1 255 3 is_stmt 1 view .LVU257
 255:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 900              		.loc 1 255 19 is_stmt 0 view .LVU258
 901 000c 0023     		movs	r3, #0
 902 000e 8360     		str	r3, [r0, #8]
 256:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
 903              		.loc 1 256 3 is_stmt 1 view .LVU259
 256:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 43


 904              		.loc 1 256 28 is_stmt 0 view .LVU260
 905 0010 4FF08072 		mov	r2, #16777216
 906 0014 C260     		str	r2, [r0, #12]
 257:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
 907              		.loc 1 257 3 is_stmt 1 view .LVU261
 257:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
 908              		.loc 1 257 23 is_stmt 0 view .LVU262
 909 0016 4FF42022 		mov	r2, #655360
 910 001a 0261     		str	r2, [r0, #16]
 258:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 911              		.loc 1 258 3 is_stmt 1 view .LVU263
 258:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 912              		.loc 1 258 23 is_stmt 0 view .LVU264
 913 001c 4FF44012 		mov	r2, #3145728
 914 0020 4261     		str	r2, [r0, #20]
 259:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 915              		.loc 1 259 3 is_stmt 1 view .LVU265
 259:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 916              		.loc 1 259 32 is_stmt 0 view .LVU266
 917 0022 0376     		strb	r3, [r0, #24]
 260:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 918              		.loc 1 260 3 is_stmt 1 view .LVU267
 260:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 919              		.loc 1 260 25 is_stmt 0 view .LVU268
 920 0024 4376     		strb	r3, [r0, #25]
 261:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 921              		.loc 1 261 3 is_stmt 1 view .LVU269
 261:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 922              		.loc 1 261 25 is_stmt 0 view .LVU270
 923 0026 8376     		strb	r3, [r0, #26]
 262:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 924              		.loc 1 262 3 is_stmt 1 view .LVU271
 262:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 925              		.loc 1 262 33 is_stmt 0 view .LVU272
 926 0028 C376     		strb	r3, [r0, #27]
 263:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 927              		.loc 1 263 3 is_stmt 1 view .LVU273
 263:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 928              		.loc 1 263 32 is_stmt 0 view .LVU274
 929 002a 0377     		strb	r3, [r0, #28]
 264:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 930              		.loc 1 264 3 is_stmt 1 view .LVU275
 264:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 931              		.loc 1 264 35 is_stmt 0 view .LVU276
 932 002c 4377     		strb	r3, [r0, #29]
 265:Core/Src/main.c ****   {
 933              		.loc 1 265 3 is_stmt 1 view .LVU277
 265:Core/Src/main.c ****   {
 934              		.loc 1 265 7 is_stmt 0 view .LVU278
 935 002e FFF7FEFF 		bl	HAL_CAN_Init
 936              	.LVL60:
 265:Core/Src/main.c ****   {
 937              		.loc 1 265 6 discriminator 1 view .LVU279
 938 0032 00B9     		cbnz	r0, .L52
 272:Core/Src/main.c **** 
 939              		.loc 1 272 1 view .LVU280
 940 0034 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 44


 941              	.L52:
 267:Core/Src/main.c ****   }
 942              		.loc 1 267 5 is_stmt 1 view .LVU281
 943 0036 FFF7FEFF 		bl	Error_Handler
 944              	.LVL61:
 945              	.L54:
 946 003a 00BF     		.align	2
 947              	.L53:
 948 003c 00000000 		.word	hcan2
 949 0040 00680040 		.word	1073768448
 950              		.cfi_endproc
 951              	.LFE141:
 953              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 954              		.align	1
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 959              	MX_USART3_UART_Init:
 960              	.LFB142:
 280:Core/Src/main.c **** 
 961              		.loc 1 280 1 view -0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 965 0000 08B5     		push	{r3, lr}
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 3, -8
 968              		.cfi_offset 14, -4
 289:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 969              		.loc 1 289 3 view .LVU283
 289:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 970              		.loc 1 289 19 is_stmt 0 view .LVU284
 971 0002 0A48     		ldr	r0, .L59
 972 0004 0A4B     		ldr	r3, .L59+4
 973 0006 0360     		str	r3, [r0]
 290:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 974              		.loc 1 290 3 is_stmt 1 view .LVU285
 290:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 975              		.loc 1 290 24 is_stmt 0 view .LVU286
 976 0008 4FF4E133 		mov	r3, #115200
 977 000c 4360     		str	r3, [r0, #4]
 291:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 978              		.loc 1 291 3 is_stmt 1 view .LVU287
 291:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 979              		.loc 1 291 26 is_stmt 0 view .LVU288
 980 000e 0023     		movs	r3, #0
 981 0010 8360     		str	r3, [r0, #8]
 292:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 982              		.loc 1 292 3 is_stmt 1 view .LVU289
 292:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 983              		.loc 1 292 24 is_stmt 0 view .LVU290
 984 0012 C360     		str	r3, [r0, #12]
 293:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 985              		.loc 1 293 3 is_stmt 1 view .LVU291
 293:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 986              		.loc 1 293 22 is_stmt 0 view .LVU292
 987 0014 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 45


 294:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 988              		.loc 1 294 3 is_stmt 1 view .LVU293
 294:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 989              		.loc 1 294 20 is_stmt 0 view .LVU294
 990 0016 0C22     		movs	r2, #12
 991 0018 4261     		str	r2, [r0, #20]
 295:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 992              		.loc 1 295 3 is_stmt 1 view .LVU295
 295:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 993              		.loc 1 295 25 is_stmt 0 view .LVU296
 994 001a 8361     		str	r3, [r0, #24]
 296:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 995              		.loc 1 296 3 is_stmt 1 view .LVU297
 296:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 996              		.loc 1 296 28 is_stmt 0 view .LVU298
 997 001c C361     		str	r3, [r0, #28]
 297:Core/Src/main.c ****   {
 998              		.loc 1 297 3 is_stmt 1 view .LVU299
 297:Core/Src/main.c ****   {
 999              		.loc 1 297 7 is_stmt 0 view .LVU300
 1000 001e FFF7FEFF 		bl	HAL_UART_Init
 1001              	.LVL62:
 297:Core/Src/main.c ****   {
 1002              		.loc 1 297 6 discriminator 1 view .LVU301
 1003 0022 00B9     		cbnz	r0, .L58
 304:Core/Src/main.c **** 
 1004              		.loc 1 304 1 view .LVU302
 1005 0024 08BD     		pop	{r3, pc}
 1006              	.L58:
 299:Core/Src/main.c ****   }
 1007              		.loc 1 299 5 is_stmt 1 view .LVU303
 1008 0026 FFF7FEFF 		bl	Error_Handler
 1009              	.LVL63:
 1010              	.L60:
 1011 002a 00BF     		.align	2
 1012              	.L59:
 1013 002c 00000000 		.word	huart3
 1014 0030 00480040 		.word	1073760256
 1015              		.cfi_endproc
 1016              	.LFE142:
 1018              		.section	.text.SystemClock_Config,"ax",%progbits
 1019              		.align	1
 1020              		.global	SystemClock_Config
 1021              		.syntax unified
 1022              		.thumb
 1023              		.thumb_func
 1025              	SystemClock_Config:
 1026              	.LFB139:
 162:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1027              		.loc 1 162 1 view -0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 80
 1030              		@ frame_needed = 0, uses_anonymous_args = 0
 1031 0000 00B5     		push	{lr}
 1032              		.cfi_def_cfa_offset 4
 1033              		.cfi_offset 14, -4
 1034 0002 95B0     		sub	sp, sp, #84
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 46


 1035              		.cfi_def_cfa_offset 88
 163:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1036              		.loc 1 163 3 view .LVU305
 163:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1037              		.loc 1 163 22 is_stmt 0 view .LVU306
 1038 0004 3022     		movs	r2, #48
 1039 0006 0021     		movs	r1, #0
 1040 0008 08A8     		add	r0, sp, #32
 1041 000a FFF7FEFF 		bl	memset
 1042              	.LVL64:
 164:Core/Src/main.c **** 
 1043              		.loc 1 164 3 is_stmt 1 view .LVU307
 164:Core/Src/main.c **** 
 1044              		.loc 1 164 22 is_stmt 0 view .LVU308
 1045 000e 0023     		movs	r3, #0
 1046 0010 0393     		str	r3, [sp, #12]
 1047 0012 0493     		str	r3, [sp, #16]
 1048 0014 0593     		str	r3, [sp, #20]
 1049 0016 0693     		str	r3, [sp, #24]
 1050 0018 0793     		str	r3, [sp, #28]
 168:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1051              		.loc 1 168 3 is_stmt 1 view .LVU309
 1052              	.LBB10:
 168:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1053              		.loc 1 168 3 view .LVU310
 1054 001a 0193     		str	r3, [sp, #4]
 168:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1055              		.loc 1 168 3 view .LVU311
 1056 001c 1F4A     		ldr	r2, .L67
 1057 001e 116C     		ldr	r1, [r2, #64]
 1058 0020 41F08051 		orr	r1, r1, #268435456
 1059 0024 1164     		str	r1, [r2, #64]
 168:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1060              		.loc 1 168 3 view .LVU312
 1061 0026 126C     		ldr	r2, [r2, #64]
 1062 0028 02F08052 		and	r2, r2, #268435456
 1063 002c 0192     		str	r2, [sp, #4]
 168:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1064              		.loc 1 168 3 view .LVU313
 1065 002e 019A     		ldr	r2, [sp, #4]
 1066              	.LBE10:
 168:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1067              		.loc 1 168 3 view .LVU314
 169:Core/Src/main.c **** 
 1068              		.loc 1 169 3 view .LVU315
 1069              	.LBB11:
 169:Core/Src/main.c **** 
 1070              		.loc 1 169 3 view .LVU316
 1071 0030 0293     		str	r3, [sp, #8]
 169:Core/Src/main.c **** 
 1072              		.loc 1 169 3 view .LVU317
 1073 0032 1B4A     		ldr	r2, .L67+4
 1074 0034 1168     		ldr	r1, [r2]
 1075 0036 41F48041 		orr	r1, r1, #16384
 1076 003a 1160     		str	r1, [r2]
 169:Core/Src/main.c **** 
 1077              		.loc 1 169 3 view .LVU318
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 47


 1078 003c 1268     		ldr	r2, [r2]
 1079 003e 02F48042 		and	r2, r2, #16384
 1080 0042 0292     		str	r2, [sp, #8]
 169:Core/Src/main.c **** 
 1081              		.loc 1 169 3 view .LVU319
 1082 0044 029A     		ldr	r2, [sp, #8]
 1083              	.LBE11:
 169:Core/Src/main.c **** 
 1084              		.loc 1 169 3 view .LVU320
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1085              		.loc 1 174 3 view .LVU321
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1086              		.loc 1 174 36 is_stmt 0 view .LVU322
 1087 0046 0222     		movs	r2, #2
 1088 0048 0892     		str	r2, [sp, #32]
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1089              		.loc 1 175 3 is_stmt 1 view .LVU323
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1090              		.loc 1 175 30 is_stmt 0 view .LVU324
 1091 004a 0121     		movs	r1, #1
 1092 004c 0B91     		str	r1, [sp, #44]
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1093              		.loc 1 176 3 is_stmt 1 view .LVU325
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1094              		.loc 1 176 41 is_stmt 0 view .LVU326
 1095 004e 1021     		movs	r1, #16
 1096 0050 0C91     		str	r1, [sp, #48]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1097              		.loc 1 177 3 is_stmt 1 view .LVU327
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1098              		.loc 1 177 34 is_stmt 0 view .LVU328
 1099 0052 0E92     		str	r2, [sp, #56]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1100              		.loc 1 178 3 is_stmt 1 view .LVU329
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1101              		.loc 1 178 35 is_stmt 0 view .LVU330
 1102 0054 0F93     		str	r3, [sp, #60]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 1103              		.loc 1 179 3 is_stmt 1 view .LVU331
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 1104              		.loc 1 179 30 is_stmt 0 view .LVU332
 1105 0056 0823     		movs	r3, #8
 1106 0058 1093     		str	r3, [sp, #64]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1107              		.loc 1 180 3 is_stmt 1 view .LVU333
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1108              		.loc 1 180 30 is_stmt 0 view .LVU334
 1109 005a 4023     		movs	r3, #64
 1110 005c 1193     		str	r3, [sp, #68]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1111              		.loc 1 181 3 is_stmt 1 view .LVU335
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1112              		.loc 1 181 30 is_stmt 0 view .LVU336
 1113 005e 1292     		str	r2, [sp, #72]
 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1114              		.loc 1 182 3 is_stmt 1 view .LVU337
 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 48


 1115              		.loc 1 182 30 is_stmt 0 view .LVU338
 1116 0060 0423     		movs	r3, #4
 1117 0062 1393     		str	r3, [sp, #76]
 183:Core/Src/main.c ****   {
 1118              		.loc 1 183 3 is_stmt 1 view .LVU339
 183:Core/Src/main.c ****   {
 1119              		.loc 1 183 7 is_stmt 0 view .LVU340
 1120 0064 08A8     		add	r0, sp, #32
 1121 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1122              	.LVL65:
 183:Core/Src/main.c ****   {
 1123              		.loc 1 183 6 discriminator 1 view .LVU341
 1124 006a 90B9     		cbnz	r0, .L65
 190:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1125              		.loc 1 190 3 is_stmt 1 view .LVU342
 190:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1126              		.loc 1 190 31 is_stmt 0 view .LVU343
 1127 006c 0F23     		movs	r3, #15
 1128 006e 0393     		str	r3, [sp, #12]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1129              		.loc 1 191 3 is_stmt 1 view .LVU344
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1130              		.loc 1 191 34 is_stmt 0 view .LVU345
 1131 0070 0221     		movs	r1, #2
 1132 0072 0491     		str	r1, [sp, #16]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 1133              		.loc 1 192 3 is_stmt 1 view .LVU346
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 1134              		.loc 1 192 35 is_stmt 0 view .LVU347
 1135 0074 0023     		movs	r3, #0
 1136 0076 0593     		str	r3, [sp, #20]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1137              		.loc 1 193 3 is_stmt 1 view .LVU348
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1138              		.loc 1 193 36 is_stmt 0 view .LVU349
 1139 0078 4FF4C053 		mov	r3, #6144
 1140 007c 0693     		str	r3, [sp, #24]
 194:Core/Src/main.c **** 
 1141              		.loc 1 194 3 is_stmt 1 view .LVU350
 194:Core/Src/main.c **** 
 1142              		.loc 1 194 36 is_stmt 0 view .LVU351
 1143 007e 4FF48053 		mov	r3, #4096
 1144 0082 0793     		str	r3, [sp, #28]
 196:Core/Src/main.c ****   {
 1145              		.loc 1 196 3 is_stmt 1 view .LVU352
 196:Core/Src/main.c ****   {
 1146              		.loc 1 196 7 is_stmt 0 view .LVU353
 1147 0084 03A8     		add	r0, sp, #12
 1148 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1149              	.LVL66:
 196:Core/Src/main.c ****   {
 1150              		.loc 1 196 6 discriminator 1 view .LVU354
 1151 008a 20B9     		cbnz	r0, .L66
 200:Core/Src/main.c **** 
 1152              		.loc 1 200 1 view .LVU355
 1153 008c 15B0     		add	sp, sp, #84
 1154              		.cfi_remember_state
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 49


 1155              		.cfi_def_cfa_offset 4
 1156              		@ sp needed
 1157 008e 5DF804FB 		ldr	pc, [sp], #4
 1158              	.L65:
 1159              		.cfi_restore_state
 185:Core/Src/main.c ****   }
 1160              		.loc 1 185 5 is_stmt 1 view .LVU356
 1161 0092 FFF7FEFF 		bl	Error_Handler
 1162              	.LVL67:
 1163              	.L66:
 198:Core/Src/main.c ****   }
 1164              		.loc 1 198 5 view .LVU357
 1165 0096 FFF7FEFF 		bl	Error_Handler
 1166              	.LVL68:
 1167              	.L68:
 1168 009a 00BF     		.align	2
 1169              	.L67:
 1170 009c 00380240 		.word	1073887232
 1171 00a0 00700040 		.word	1073770496
 1172              		.cfi_endproc
 1173              	.LFE139:
 1175              		.section	.text.main,"ax",%progbits
 1176              		.align	1
 1177              		.global	main
 1178              		.syntax unified
 1179              		.thumb
 1180              		.thumb_func
 1182              	main:
 1183              	.LFB138:
 109:Core/Src/main.c **** 
 1184              		.loc 1 109 1 view -0
 1185              		.cfi_startproc
 1186              		@ Volatile: function does not return.
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 1189 0000 08B5     		push	{r3, lr}
 1190              		.cfi_def_cfa_offset 8
 1191              		.cfi_offset 3, -8
 1192              		.cfi_offset 14, -4
 118:Core/Src/main.c **** 
 1193              		.loc 1 118 3 view .LVU359
 1194 0002 FFF7FEFF 		bl	HAL_Init
 1195              	.LVL69:
 125:Core/Src/main.c **** 
 1196              		.loc 1 125 3 view .LVU360
 1197 0006 FFF7FEFF 		bl	SystemClock_Config
 1198              	.LVL70:
 132:Core/Src/main.c ****   MX_CAN1_Init();
 1199              		.loc 1 132 3 view .LVU361
 1200 000a FFF7FEFF 		bl	MX_GPIO_Init
 1201              	.LVL71:
 133:Core/Src/main.c ****   MX_CAN2_Init();
 1202              		.loc 1 133 3 view .LVU362
 1203 000e FFF7FEFF 		bl	MX_CAN1_Init
 1204              	.LVL72:
 134:Core/Src/main.c ****   MX_USART3_UART_Init();
 1205              		.loc 1 134 3 view .LVU363
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 50


 1206 0012 FFF7FEFF 		bl	MX_CAN2_Init
 1207              	.LVL73:
 135:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1208              		.loc 1 135 3 view .LVU364
 1209 0016 FFF7FEFF 		bl	MX_USART3_UART_Init
 1210              	.LVL74:
 137:Core/Src/main.c ****   MX_CAN2_Setup();
 1211              		.loc 1 137 3 view .LVU365
 1212 001a FFF7FEFF 		bl	MX_CAN1_Setup
 1213              	.LVL75:
 138:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart3, UART_IT_RXNE);
 1214              		.loc 1 138 3 view .LVU366
 1215 001e FFF7FEFF 		bl	MX_CAN2_Setup
 1216              	.LVL76:
 139:Core/Src/main.c **** 
 1217              		.loc 1 139 3 view .LVU367
 1218 0022 074B     		ldr	r3, .L72
 1219 0024 1A68     		ldr	r2, [r3]
 1220 0026 D368     		ldr	r3, [r2, #12]
 1221 0028 43F02003 		orr	r3, r3, #32
 1222 002c D360     		str	r3, [r2, #12]
 1223              	.L70:
 145:Core/Src/main.c ****   {
 1224              		.loc 1 145 3 view .LVU368
 148:Core/Src/main.c ****     SID_22_Practice();
 1225              		.loc 1 148 5 view .LVU369
 1226 002e FFF7FEFF 		bl	CAN1_SendRequest
 1227              	.LVL77:
 149:Core/Src/main.c ****     HAL_Delay(2000);
 1228              		.loc 1 149 5 view .LVU370
 1229 0032 FFF7FEFF 		bl	SID_22_Practice
 1230              	.LVL78:
 150:Core/Src/main.c **** 
 1231              		.loc 1 150 5 discriminator 1 view .LVU371
 1232 0036 4FF4FA60 		mov	r0, #2000
 1233 003a FFF7FEFF 		bl	HAL_Delay
 1234              	.LVL79:
 145:Core/Src/main.c ****   {
 1235              		.loc 1 145 9 view .LVU372
 1236 003e F6E7     		b	.L70
 1237              	.L73:
 1238              		.align	2
 1239              	.L72:
 1240 0040 00000000 		.word	huart3
 1241              		.cfi_endproc
 1242              	.LFE138:
 1244              		.global	bufsend
 1245              		.section	.data.bufsend,"aw"
 1246              		.align	2
 1249              	bufsend:
 1250 0000 5858583A 		.ascii	"XXX: D1 D2 D3 D4 D5 D6 D7 D8  "
 1250      20443120 
 1250      44322044 
 1250      33204434 
 1250      20443520 
 1251              		.global	TimeStamp
 1252              		.section	.bss.TimeStamp,"aw",%nobits
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 51


 1253              		.align	2
 1256              	TimeStamp:
 1257 0000 00000000 		.space	4
 1258              		.global	REQ_1BYTE_DATA
 1259              		.section	.bss.REQ_1BYTE_DATA,"aw",%nobits
 1262              	REQ_1BYTE_DATA:
 1263 0000 00       		.space	1
 1264              		.global	REQ_BUFFER
 1265              		.section	.bss.REQ_BUFFER,"aw",%nobits
 1266              		.align	2
 1269              	REQ_BUFFER:
 1270 0000 00000000 		.space	4096
 1270      00000000 
 1270      00000000 
 1270      00000000 
 1270      00000000 
 1271              		.global	NumBytesReq
 1272              		.section	.bss.NumBytesReq,"aw",%nobits
 1273              		.align	1
 1276              	NumBytesReq:
 1277 0000 0000     		.space	2
 1278              		.global	CAN2_DATA_RX
 1279              		.section	.data.CAN2_DATA_RX,"aw"
 1280              		.align	2
 1283              	CAN2_DATA_RX:
 1284 0000 00000000 		.ascii	"\000\000\000\000\000\000\005\000"
 1284      00000500 
 1285              		.global	CAN2_DATA_TX
 1286              		.section	.data.CAN2_DATA_TX,"aw"
 1287              		.align	2
 1290              	CAN2_DATA_TX:
 1291 0000 00000000 		.ascii	"\000\000\000\000\000\000\002\000"
 1291      00000200 
 1292              		.global	CAN1_DATA_RX
 1293              		.section	.data.CAN1_DATA_RX,"aw"
 1294              		.align	2
 1297              	CAN1_DATA_RX:
 1298 0000 00000000 		.ascii	"\000\000\000\000\000\000\003\000"
 1298      00000300 
 1299              		.global	CAN1_DATA_TX
 1300              		.section	.data.CAN1_DATA_TX,"aw"
 1301              		.align	2
 1304              	CAN1_DATA_TX:
 1305 0000 00000000 		.ascii	"\000\000\000\000\000\000\001\000"
 1305      00000100 
 1306              		.global	CAN2_pTxMailbox
 1307              		.section	.bss.CAN2_pTxMailbox,"aw",%nobits
 1308              		.align	2
 1311              	CAN2_pTxMailbox:
 1312 0000 00000000 		.space	4
 1313              		.global	CAN1_pTxMailbox
 1314              		.section	.bss.CAN1_pTxMailbox,"aw",%nobits
 1315              		.align	2
 1318              	CAN1_pTxMailbox:
 1319 0000 00000000 		.space	4
 1320              		.global	CAN2_sFilterConfig
 1321              		.section	.bss.CAN2_sFilterConfig,"aw",%nobits
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 52


 1322              		.align	2
 1325              	CAN2_sFilterConfig:
 1326 0000 00000000 		.space	40
 1326      00000000 
 1326      00000000 
 1326      00000000 
 1326      00000000 
 1327              		.global	CAN2_pHeaderRx
 1328              		.section	.bss.CAN2_pHeaderRx,"aw",%nobits
 1329              		.align	2
 1332              	CAN2_pHeaderRx:
 1333 0000 00000000 		.space	28
 1333      00000000 
 1333      00000000 
 1333      00000000 
 1333      00000000 
 1334              		.global	CAN2_pHeader
 1335              		.section	.bss.CAN2_pHeader,"aw",%nobits
 1336              		.align	2
 1339              	CAN2_pHeader:
 1340 0000 00000000 		.space	24
 1340      00000000 
 1340      00000000 
 1340      00000000 
 1340      00000000 
 1341              		.global	CAN1_sFilterConfig
 1342              		.section	.bss.CAN1_sFilterConfig,"aw",%nobits
 1343              		.align	2
 1346              	CAN1_sFilterConfig:
 1347 0000 00000000 		.space	40
 1347      00000000 
 1347      00000000 
 1347      00000000 
 1347      00000000 
 1348              		.global	CAN1_pHeaderRx
 1349              		.section	.bss.CAN1_pHeaderRx,"aw",%nobits
 1350              		.align	2
 1353              	CAN1_pHeaderRx:
 1354 0000 00000000 		.space	28
 1354      00000000 
 1354      00000000 
 1354      00000000 
 1354      00000000 
 1355              		.global	CAN1_pHeader
 1356              		.section	.bss.CAN1_pHeader,"aw",%nobits
 1357              		.align	2
 1360              	CAN1_pHeader:
 1361 0000 00000000 		.space	24
 1361      00000000 
 1361      00000000 
 1361      00000000 
 1361      00000000 
 1362              		.global	uart3_receive
 1363              		.section	.bss.uart3_receive,"aw",%nobits
 1366              	uart3_receive:
 1367 0000 00       		.space	1
 1368              		.global	huart3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 53


 1369              		.section	.bss.huart3,"aw",%nobits
 1370              		.align	2
 1373              	huart3:
 1374 0000 00000000 		.space	72
 1374      00000000 
 1374      00000000 
 1374      00000000 
 1374      00000000 
 1375              		.global	hcan2
 1376              		.section	.bss.hcan2,"aw",%nobits
 1377              		.align	2
 1380              	hcan2:
 1381 0000 00000000 		.space	40
 1381      00000000 
 1381      00000000 
 1381      00000000 
 1381      00000000 
 1382              		.global	hcan1
 1383              		.section	.bss.hcan1,"aw",%nobits
 1384              		.align	2
 1387              	hcan1:
 1388 0000 00000000 		.space	40
 1388      00000000 
 1388      00000000 
 1388      00000000 
 1388      00000000 
 1389              		.text
 1390              	.Letext0:
 1391              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1392              		.file 4 "C:/Users/PC/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools
 1393              		.file 5 "C:/Users/PC/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools
 1394              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1395              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1396              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1397              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1398              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1399              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1400              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1401              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1402              		.file 14 "Core/Inc/CAN_Communication.h"
 1403              		.file 15 "Core/Inc/UDS.h"
 1404              		.file 16 "Core/Inc/main.h"
 1405              		.file 17 "C:/Users/PC/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 1406              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1407              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1408              		.file 20 "<built-in>"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:188    .text.MX_GPIO_Init:000000c0 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:195    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:201    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:229    .text.HAL_UART_RxCpltCallback:00000014 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1276   .bss.NumBytesReq:00000000 NumBytesReq
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1262   .bss.REQ_1BYTE_DATA:00000000 REQ_1BYTE_DATA
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1269   .bss.REQ_BUFFER:00000000 REQ_BUFFER
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:236    .text.MX_CAN1_Setup:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:242    .text.MX_CAN1_Setup:00000000 MX_CAN1_Setup
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:307    .text.MX_CAN1_Setup:0000003c $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1346   .bss.CAN1_sFilterConfig:00000000 CAN1_sFilterConfig
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1387   .bss.hcan1:00000000 hcan1
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:313    .text.MX_CAN2_Setup:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:319    .text.MX_CAN2_Setup:00000000 MX_CAN2_Setup
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:384    .text.MX_CAN2_Setup:0000003c $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1325   .bss.CAN2_sFilterConfig:00000000 CAN2_sFilterConfig
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1380   .bss.hcan2:00000000 hcan2
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:390    .text.USART3_SendString:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:396    .text.USART3_SendString:00000000 USART3_SendString
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:439    .text.USART3_SendString:00000020 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1373   .bss.huart3:00000000 huart3
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:444    .rodata.PrintCANLog.str1.4:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:463    .text.PrintCANLog:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:469    .text.PrintCANLog:00000000 PrintCANLog
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:630    .text.PrintCANLog:000000b0 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1256   .bss.TimeStamp:00000000 TimeStamp
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1249   .data.bufsend:00000000 bufsend
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:642    .text.calc_crc:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:648    .text.calc_crc:00000000 calc_crc
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:758    .text.Error_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:764    .text.Error_Handler:00000000 Error_Handler
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:796    .text.MX_CAN1_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:801    .text.MX_CAN1_Init:00000000 MX_CAN1_Init
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:869    .text.MX_CAN1_Init:0000003c $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:875    .text.MX_CAN2_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:880    .text.MX_CAN2_Init:00000000 MX_CAN2_Init
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:948    .text.MX_CAN2_Init:0000003c $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:954    .text.MX_USART3_UART_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:959    .text.MX_USART3_UART_Init:00000000 MX_USART3_UART_Init
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1013   .text.MX_USART3_UART_Init:0000002c $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1019   .text.SystemClock_Config:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1025   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1170   .text.SystemClock_Config:0000009c $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1176   .text.main:00000000 $t
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1182   .text.main:00000000 main
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1240   .text.main:00000040 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1246   .data.bufsend:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1253   .bss.TimeStamp:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1263   .bss.REQ_1BYTE_DATA:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1266   .bss.REQ_BUFFER:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1273   .bss.NumBytesReq:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1283   .data.CAN2_DATA_RX:00000000 CAN2_DATA_RX
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1280   .data.CAN2_DATA_RX:00000000 $d
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s 			page 55


C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1290   .data.CAN2_DATA_TX:00000000 CAN2_DATA_TX
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1287   .data.CAN2_DATA_TX:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1297   .data.CAN1_DATA_RX:00000000 CAN1_DATA_RX
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1294   .data.CAN1_DATA_RX:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1304   .data.CAN1_DATA_TX:00000000 CAN1_DATA_TX
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1301   .data.CAN1_DATA_TX:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1311   .bss.CAN2_pTxMailbox:00000000 CAN2_pTxMailbox
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1308   .bss.CAN2_pTxMailbox:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1318   .bss.CAN1_pTxMailbox:00000000 CAN1_pTxMailbox
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1315   .bss.CAN1_pTxMailbox:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1322   .bss.CAN2_sFilterConfig:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1332   .bss.CAN2_pHeaderRx:00000000 CAN2_pHeaderRx
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1329   .bss.CAN2_pHeaderRx:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1339   .bss.CAN2_pHeader:00000000 CAN2_pHeader
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1336   .bss.CAN2_pHeader:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1343   .bss.CAN1_sFilterConfig:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1353   .bss.CAN1_pHeaderRx:00000000 CAN1_pHeaderRx
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1350   .bss.CAN1_pHeaderRx:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1360   .bss.CAN1_pHeader:00000000 CAN1_pHeader
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1357   .bss.CAN1_pHeader:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1366   .bss.uart3_receive:00000000 uart3_receive
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1367   .bss.uart3_receive:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1370   .bss.huart3:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1377   .bss.hcan2:00000000 $d
C:\Users\PC\AppData\Local\Temp\ccur7Sv0.s:1384   .bss.hcan1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_UART_Transmit
sprintf
HAL_CAN_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
CAN1_SendRequest
SID_22_Practice
HAL_Delay
