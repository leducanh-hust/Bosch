ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB144:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  44:Core/Src/main.c **** CAN_HandleTypeDef hcan2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** UART_HandleTypeDef huart3;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** uint8_t uart3_receive;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  52:Core/Src/main.c **** CAN_HandleTypeDef hcan2;
  53:Core/Src/main.c **** CAN_TxHeaderTypeDef CAN1_pHeader;
  54:Core/Src/main.c **** CAN_RxHeaderTypeDef CAN1_pHeaderRx;
  55:Core/Src/main.c **** CAN_FilterTypeDef CAN1_sFilterConfig;
  56:Core/Src/main.c **** CAN_TxHeaderTypeDef CAN2_pHeader;
  57:Core/Src/main.c **** CAN_RxHeaderTypeDef CAN2_pHeaderRx;
  58:Core/Src/main.c **** CAN_FilterTypeDef CAN2_sFilterConfig;
  59:Core/Src/main.c **** uint32_t CAN1_pTxMailbox;
  60:Core/Src/main.c **** uint32_t CAN2_pTxMailbox;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** uint8_t CAN1_DATA_TX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  63:Core/Src/main.c **** uint8_t CAN1_DATA_RX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  64:Core/Src/main.c **** uint8_t CAN2_DATA_TX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  65:Core/Src/main.c **** uint8_t CAN2_DATA_RX[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** uint16_t NumBytesReq = 0;
  68:Core/Src/main.c **** uint8_t REQ_BUFFER[4096];
  69:Core/Src/main.c **** uint8_t REQ_1BYTE_DATA;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** unsigned int TimeStamp;
  72:Core/Src/main.c **** char bufsend[30] = "XXX: D1 D2 D3 D4 D5 D6 D7 D8  ";
  73:Core/Src/main.c **** /* USER CODE END PV */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  76:Core/Src/main.c **** void SystemClock_Config(void);
  77:Core/Src/main.c **** static void MX_GPIO_Init(void);
  78:Core/Src/main.c **** static void MX_CAN1_Init(void);
  79:Core/Src/main.c **** static void MX_CAN2_Init(void);
  80:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  81:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  82:Core/Src/main.c **** void USART3_SendString(char *ch);
  83:Core/Src/main.c **** void PrintCANLog(uint16_t CANID, uint8_t *CAN_Frame);
  84:Core/Src/main.c **** uint8_t calc_crc(uint8_t *data, uint8_t crc_len);
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
  88:Core/Src/main.c **** {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 3


  89:Core/Src/main.c ****   REQ_BUFFER[NumBytesReq] = REQ_1BYTE_DATA;
  90:Core/Src/main.c ****   NumBytesReq++;
  91:Core/Src/main.c ****   // REQ_BUFFER[7] = NumBytesReq;
  92:Core/Src/main.c **** }
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** void MX_CAN1_Setup();
  95:Core/Src/main.c **** void MX_CAN2_Setup();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /* USER CODE END PFP */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 100:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* USER CODE END 0 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /**
 105:Core/Src/main.c ****  * @brief  The application entry point.
 106:Core/Src/main.c ****  * @retval int
 107:Core/Src/main.c ****  */
 108:Core/Src/main.c **** int main(void)
 109:Core/Src/main.c **** {
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END 1 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 118:Core/Src/main.c ****   HAL_Init();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END Init */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Configure the system clock */
 125:Core/Src/main.c ****   SystemClock_Config();
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END SysInit */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Initialize all configured peripherals */
 132:Core/Src/main.c ****   MX_GPIO_Init();
 133:Core/Src/main.c ****   MX_CAN1_Init();
 134:Core/Src/main.c ****   MX_CAN2_Init();
 135:Core/Src/main.c ****   MX_USART3_UART_Init();
 136:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 137:Core/Src/main.c ****   
 138:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart3, UART_IT_RXNE);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE END 2 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Infinite loop */
 143:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 144:Core/Src/main.c ****   while (1)
 145:Core/Src/main.c ****   {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 4


 146:Core/Src/main.c ****     /* USER CODE END WHILE */
 147:Core/Src/main.c ****     CAN1_SendRequest();
 148:Core/Src/main.c ****     HAL_Delay(2000);
 149:Core/Src/main.c ****     PrintCANLog(0x712, CAN1_DATA_RX);
 150:Core/Src/main.c ****     SID_22_Practice();
 151:Core/Src/main.c ****     HAL_Delay(2000);
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 154:Core/Src/main.c ****   }
 155:Core/Src/main.c ****   /* USER CODE END 3 */
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /**
 159:Core/Src/main.c ****  * @brief System Clock Configuration
 160:Core/Src/main.c ****  * @retval None
 161:Core/Src/main.c ****  */
 162:Core/Src/main.c **** void SystemClock_Config(void)
 163:Core/Src/main.c **** {
 164:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 168:Core/Src/main.c ****    */
 169:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 170:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 173:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 174:Core/Src/main.c ****    */
 175:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 184:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 190:Core/Src/main.c ****    */
 191:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 192:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 198:Core/Src/main.c ****   {
 199:Core/Src/main.c ****     Error_Handler();
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c **** }
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 5


 203:Core/Src/main.c **** /**
 204:Core/Src/main.c ****  * @brief CAN1 Initialization Function
 205:Core/Src/main.c ****  * @param None
 206:Core/Src/main.c ****  * @retval None
 207:Core/Src/main.c ****  */
 208:Core/Src/main.c **** static void MX_CAN1_Init(void)
 209:Core/Src/main.c **** {
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 218:Core/Src/main.c ****   hcan1.Instance = CAN1;
 219:Core/Src/main.c ****   hcan1.Init.Prescaler = 1;
 220:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 221:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 222:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 223:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 224:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 225:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 226:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 227:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 228:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 229:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 230:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 237:Core/Src/main.c **** }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** /**
 240:Core/Src/main.c ****  * @brief CAN2 Initialization Function
 241:Core/Src/main.c ****  * @param None
 242:Core/Src/main.c ****  * @retval None
 243:Core/Src/main.c ****  */
 244:Core/Src/main.c **** static void MX_CAN2_Init(void)
 245:Core/Src/main.c **** {
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 0 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE END CAN2_Init 0 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 1 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END CAN2_Init 1 */
 254:Core/Src/main.c ****   hcan2.Instance = CAN2;
 255:Core/Src/main.c ****   hcan2.Init.Prescaler = 1;
 256:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 257:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 258:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
 259:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 6


 260:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 261:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 262:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 263:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 264:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 265:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 266:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c ****     Error_Handler();
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c ****   /* USER CODE BEGIN CAN2_Init 2 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END CAN2_Init 2 */
 273:Core/Src/main.c **** }
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
 276:Core/Src/main.c **** {
 277:Core/Src/main.c ****     if (hcan == &hcan1)
 278:Core/Src/main.c ****     {
 279:Core/Src/main.c ****         HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &CAN1_pHeaderRx, CAN1_DATA_RX);
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****         char buffer3[9] = "CAN1 RX\n";
 282:Core/Src/main.c ****         USART3_SendString((unsigned char *)buffer3);
 283:Core/Src/main.c ****         PrintCANLog(0x0A2, CAN1_DATA_RX);
 284:Core/Src/main.c ****     }
 285:Core/Src/main.c ****     else if (hcan == &hcan2)
 286:Core/Src/main.c ****     {
 287:Core/Src/main.c ****         HAL_CAN_GetRxMessage(&hcan2, CAN_RX_FIFO0, &CAN2_pHeaderRx, CAN2_DATA_RX);
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****         char buffer4[9] = "CAN2 RX\n";
 290:Core/Src/main.c ****         USART3_SendString((unsigned char *)buffer4);
 291:Core/Src/main.c ****         PrintCANLog(0x012, CAN2_DATA_RX);
 292:Core/Src/main.c ****     }
 293:Core/Src/main.c **** }
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** /**
 296:Core/Src/main.c ****  * @brief USART3 Initialization Function
 297:Core/Src/main.c ****  * @param None
 298:Core/Src/main.c ****  * @retval None
 299:Core/Src/main.c ****  */
 300:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 301:Core/Src/main.c **** {
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 310:Core/Src/main.c ****   huart3.Instance = USART3;
 311:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 312:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 313:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 314:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 315:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 316:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 7


 317:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 318:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 325:Core/Src/main.c **** }
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** /**
 328:Core/Src/main.c ****  * @brief GPIO Initialization Function
 329:Core/Src/main.c ****  * @param None
 330:Core/Src/main.c ****  * @retval None
 331:Core/Src/main.c ****  */
 332:Core/Src/main.c **** static void MX_GPIO_Init(void)
 333:Core/Src/main.c **** {
  28              		.loc 1 333 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8AB0     		sub	sp, sp, #40
  41              		.cfi_def_cfa_offset 64
 334:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 334 3 view .LVU1
  43              		.loc 1 334 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0594     		str	r4, [sp, #20]
  46 000a 0694     		str	r4, [sp, #24]
  47 000c 0794     		str	r4, [sp, #28]
  48 000e 0894     		str	r4, [sp, #32]
  49 0010 0994     		str	r4, [sp, #36]
 335:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 336:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 339:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 339 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 339 3 view .LVU4
  53 0012 0194     		str	r4, [sp, #4]
  54              		.loc 1 339 3 view .LVU5
  55 0014 2B4B     		ldr	r3, .L3
  56 0016 1A6B     		ldr	r2, [r3, #48]
  57 0018 42F00402 		orr	r2, r2, #4
  58 001c 1A63     		str	r2, [r3, #48]
  59              		.loc 1 339 3 view .LVU6
  60 001e 1A6B     		ldr	r2, [r3, #48]
  61 0020 02F00402 		and	r2, r2, #4
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 8


  62 0024 0192     		str	r2, [sp, #4]
  63              		.loc 1 339 3 view .LVU7
  64 0026 019A     		ldr	r2, [sp, #4]
  65              	.LBE4:
  66              		.loc 1 339 3 view .LVU8
 340:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  67              		.loc 1 340 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 340 3 view .LVU10
  70 0028 0294     		str	r4, [sp, #8]
  71              		.loc 1 340 3 view .LVU11
  72 002a 1A6B     		ldr	r2, [r3, #48]
  73 002c 42F08002 		orr	r2, r2, #128
  74 0030 1A63     		str	r2, [r3, #48]
  75              		.loc 1 340 3 view .LVU12
  76 0032 1A6B     		ldr	r2, [r3, #48]
  77 0034 02F08002 		and	r2, r2, #128
  78 0038 0292     		str	r2, [sp, #8]
  79              		.loc 1 340 3 view .LVU13
  80 003a 029A     		ldr	r2, [sp, #8]
  81              	.LBE5:
  82              		.loc 1 340 3 view .LVU14
 341:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  83              		.loc 1 341 3 view .LVU15
  84              	.LBB6:
  85              		.loc 1 341 3 view .LVU16
  86 003c 0394     		str	r4, [sp, #12]
  87              		.loc 1 341 3 view .LVU17
  88 003e 1A6B     		ldr	r2, [r3, #48]
  89 0040 42F00102 		orr	r2, r2, #1
  90 0044 1A63     		str	r2, [r3, #48]
  91              		.loc 1 341 3 view .LVU18
  92 0046 1A6B     		ldr	r2, [r3, #48]
  93 0048 02F00102 		and	r2, r2, #1
  94 004c 0392     		str	r2, [sp, #12]
  95              		.loc 1 341 3 view .LVU19
  96 004e 039A     		ldr	r2, [sp, #12]
  97              	.LBE6:
  98              		.loc 1 341 3 view .LVU20
 342:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 342 3 view .LVU21
 100              	.LBB7:
 101              		.loc 1 342 3 view .LVU22
 102 0050 0494     		str	r4, [sp, #16]
 103              		.loc 1 342 3 view .LVU23
 104 0052 1A6B     		ldr	r2, [r3, #48]
 105 0054 42F00202 		orr	r2, r2, #2
 106 0058 1A63     		str	r2, [r3, #48]
 107              		.loc 1 342 3 view .LVU24
 108 005a 1B6B     		ldr	r3, [r3, #48]
 109 005c 03F00203 		and	r3, r3, #2
 110 0060 0493     		str	r3, [sp, #16]
 111              		.loc 1 342 3 view .LVU25
 112 0062 049B     		ldr	r3, [sp, #16]
 113              	.LBE7:
 114              		.loc 1 342 3 view .LVU26
 343:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 9


 344:Core/Src/main.c ****   /*Configure GPIO pins : PC13 PC4 PC5 PC6
 345:Core/Src/main.c ****                            PC7 */
 346:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;
 115              		.loc 1 346 3 view .LVU27
 116              		.loc 1 346 23 is_stmt 0 view .LVU28
 117 0064 42F2F003 		movw	r3, #8432
 118 0068 0593     		str	r3, [sp, #20]
 347:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 119              		.loc 1 347 3 is_stmt 1 view .LVU29
 348:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 120              		.loc 1 348 3 view .LVU30
 121              		.loc 1 348 24 is_stmt 0 view .LVU31
 122 006a 0125     		movs	r5, #1
 123 006c 0795     		str	r5, [sp, #28]
 349:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 124              		.loc 1 349 3 is_stmt 1 view .LVU32
 125 006e 05A9     		add	r1, sp, #20
 126 0070 1548     		ldr	r0, .L3+4
 127 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL0:
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 352:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 129              		.loc 1 352 3 view .LVU33
 130              		.loc 1 352 23 is_stmt 0 view .LVU34
 131 0076 0595     		str	r5, [sp, #20]
 353:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 132              		.loc 1 353 3 is_stmt 1 view .LVU35
 133              		.loc 1 353 24 is_stmt 0 view .LVU36
 134 0078 4FF40418 		mov	r8, #2162688
 135 007c CDF81880 		str	r8, [sp, #24]
 354:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 136              		.loc 1 354 3 is_stmt 1 view .LVU37
 137              		.loc 1 354 24 is_stmt 0 view .LVU38
 138 0080 0795     		str	r5, [sp, #28]
 355:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 139              		.loc 1 355 3 is_stmt 1 view .LVU39
 140 0082 124F     		ldr	r7, .L3+8
 141 0084 05A9     		add	r1, sp, #20
 142 0086 3846     		mov	r0, r7
 143 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 144              	.LVL1:
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 358:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 145              		.loc 1 358 3 view .LVU40
 146              		.loc 1 358 23 is_stmt 0 view .LVU41
 147 008c 0226     		movs	r6, #2
 148 008e 0596     		str	r6, [sp, #20]
 359:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 149              		.loc 1 359 3 is_stmt 1 view .LVU42
 150              		.loc 1 359 24 is_stmt 0 view .LVU43
 151 0090 CDF81880 		str	r8, [sp, #24]
 360:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 152              		.loc 1 360 3 is_stmt 1 view .LVU44
 153              		.loc 1 360 24 is_stmt 0 view .LVU45
 154 0094 0795     		str	r5, [sp, #28]
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 10


 361:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 155              		.loc 1 361 3 is_stmt 1 view .LVU46
 156 0096 05A9     		add	r1, sp, #20
 157 0098 3846     		mov	r0, r7
 158 009a FFF7FEFF 		bl	HAL_GPIO_Init
 159              	.LVL2:
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /* EXTI interrupt init*/
 364:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 1, 0);
 160              		.loc 1 364 3 view .LVU47
 161 009e 2246     		mov	r2, r4
 162 00a0 2946     		mov	r1, r5
 163 00a2 0620     		movs	r0, #6
 164 00a4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 165              	.LVL3:
 365:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 166              		.loc 1 365 3 view .LVU48
 167 00a8 0620     		movs	r0, #6
 168 00aa FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 169              	.LVL4:
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI1_IRQn, 2, 0);
 170              		.loc 1 367 3 view .LVU49
 171 00ae 2246     		mov	r2, r4
 172 00b0 3146     		mov	r1, r6
 173 00b2 0720     		movs	r0, #7
 174 00b4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 175              	.LVL5:
 368:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 176              		.loc 1 368 3 view .LVU50
 177 00b8 0720     		movs	r0, #7
 178 00ba FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 179              	.LVL6:
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 371:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 372:Core/Src/main.c **** }
 180              		.loc 1 372 1 is_stmt 0 view .LVU51
 181 00be 0AB0     		add	sp, sp, #40
 182              		.cfi_def_cfa_offset 24
 183              		@ sp needed
 184 00c0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 185              	.L4:
 186              		.align	2
 187              	.L3:
 188 00c4 00380240 		.word	1073887232
 189 00c8 00080240 		.word	1073874944
 190 00cc 00000240 		.word	1073872896
 191              		.cfi_endproc
 192              	.LFE144:
 194              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 195              		.align	1
 196              		.global	HAL_UART_RxCpltCallback
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	HAL_UART_RxCpltCallback:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 11


 202              	.LVL7:
 203              	.LFB137:
  88:Core/Src/main.c ****   REQ_BUFFER[NumBytesReq] = REQ_1BYTE_DATA;
 204              		.loc 1 88 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
  89:Core/Src/main.c ****   NumBytesReq++;
 209              		.loc 1 89 3 view .LVU53
  89:Core/Src/main.c ****   NumBytesReq++;
 210              		.loc 1 89 13 is_stmt 0 view .LVU54
 211 0000 044A     		ldr	r2, .L6
 212 0002 1388     		ldrh	r3, [r2]
  89:Core/Src/main.c ****   NumBytesReq++;
 213              		.loc 1 89 27 view .LVU55
 214 0004 0449     		ldr	r1, .L6+4
 215 0006 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 216              	.LVL8:
  89:Core/Src/main.c ****   NumBytesReq++;
 217              		.loc 1 89 27 view .LVU56
 218 0008 0449     		ldr	r1, .L6+8
 219 000a C854     		strb	r0, [r1, r3]
  90:Core/Src/main.c ****   // REQ_BUFFER[7] = NumBytesReq;
 220              		.loc 1 90 3 is_stmt 1 view .LVU57
  90:Core/Src/main.c ****   // REQ_BUFFER[7] = NumBytesReq;
 221              		.loc 1 90 14 is_stmt 0 view .LVU58
 222 000c 0133     		adds	r3, r3, #1
 223 000e 1380     		strh	r3, [r2]	@ movhi
  92:Core/Src/main.c **** 
 224              		.loc 1 92 1 view .LVU59
 225 0010 7047     		bx	lr
 226              	.L7:
 227 0012 00BF     		.align	2
 228              	.L6:
 229 0014 00000000 		.word	NumBytesReq
 230 0018 00000000 		.word	REQ_1BYTE_DATA
 231 001c 00000000 		.word	REQ_BUFFER
 232              		.cfi_endproc
 233              	.LFE137:
 235              		.section	.text.MX_CAN1_Setup,"ax",%progbits
 236              		.align	1
 237              		.global	MX_CAN1_Setup
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	MX_CAN1_Setup:
 243              	.LFB145:
 373:Core/Src/main.c **** 
 374:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 375:Core/Src/main.c **** void MX_CAN1_Setup()
 376:Core/Src/main.c **** {
 244              		.loc 1 376 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 12


 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 4, -8
 251              		.cfi_offset 14, -4
 377:Core/Src/main.c ****   CAN1_sFilterConfig.FilterActivation = CAN_FILTER_ENABLE;
 252              		.loc 1 377 3 view .LVU61
 253              		.loc 1 377 39 is_stmt 0 view .LVU62
 254 0002 0E49     		ldr	r1, .L10
 255 0004 0123     		movs	r3, #1
 256 0006 0B62     		str	r3, [r1, #32]
 378:Core/Src/main.c ****   CAN1_sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 257              		.loc 1 378 3 is_stmt 1 view .LVU63
 258              		.loc 1 378 43 is_stmt 0 view .LVU64
 259 0008 0023     		movs	r3, #0
 260 000a 0B61     		str	r3, [r1, #16]
 379:Core/Src/main.c ****   CAN1_sFilterConfig.SlaveStartFilterBank = 13;
 261              		.loc 1 379 3 is_stmt 1 view .LVU65
 262              		.loc 1 379 43 is_stmt 0 view .LVU66
 263 000c 0D22     		movs	r2, #13
 264 000e 4A62     		str	r2, [r1, #36]
 380:Core/Src/main.c ****   CAN1_sFilterConfig.FilterBank = 8;
 265              		.loc 1 380 3 is_stmt 1 view .LVU67
 266              		.loc 1 380 33 is_stmt 0 view .LVU68
 267 0010 0822     		movs	r2, #8
 268 0012 4A61     		str	r2, [r1, #20]
 381:Core/Src/main.c ****   CAN1_sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 269              		.loc 1 381 3 is_stmt 1 view .LVU69
 270              		.loc 1 381 33 is_stmt 0 view .LVU70
 271 0014 8B61     		str	r3, [r1, #24]
 382:Core/Src/main.c ****   CAN1_sFilterConfig.FilterScale = CAN_FILTERSCALE_16BIT;
 272              		.loc 1 382 3 is_stmt 1 view .LVU71
 273              		.loc 1 382 34 is_stmt 0 view .LVU72
 274 0016 CB61     		str	r3, [r1, #28]
 383:Core/Src/main.c ****   CAN1_sFilterConfig.FilterIdHigh = 0x712 << 5;
 275              		.loc 1 383 3 is_stmt 1 view .LVU73
 276              		.loc 1 383 35 is_stmt 0 view .LVU74
 277 0018 4EF24022 		movw	r2, #57920
 278 001c 0A60     		str	r2, [r1]
 384:Core/Src/main.c ****   CAN1_sFilterConfig.FilterIdLow = 0;
 279              		.loc 1 384 3 is_stmt 1 view .LVU75
 280              		.loc 1 384 34 is_stmt 0 view .LVU76
 281 001e 4B60     		str	r3, [r1, #4]
 385:Core/Src/main.c ****   CAN1_sFilterConfig.FilterMaskIdHigh = 0x712 << 5;
 282              		.loc 1 385 3 is_stmt 1 view .LVU77
 283              		.loc 1 385 39 is_stmt 0 view .LVU78
 284 0020 8A60     		str	r2, [r1, #8]
 386:Core/Src/main.c ****   CAN1_sFilterConfig.FilterMaskIdLow = 0;
 285              		.loc 1 386 3 is_stmt 1 view .LVU79
 286              		.loc 1 386 38 is_stmt 0 view .LVU80
 287 0022 CB60     		str	r3, [r1, #12]
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan1, &CAN1_sFilterConfig);
 288              		.loc 1 388 3 is_stmt 1 view .LVU81
 289 0024 064C     		ldr	r4, .L10+4
 290 0026 2046     		mov	r0, r4
 291 0028 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 292              	.LVL9:
 389:Core/Src/main.c ****   HAL_CAN_Start(&hcan1);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 13


 293              		.loc 1 389 3 view .LVU82
 294 002c 2046     		mov	r0, r4
 295 002e FFF7FEFF 		bl	HAL_CAN_Start
 296              	.LVL10:
 390:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 297              		.loc 1 390 3 view .LVU83
 298 0032 0221     		movs	r1, #2
 299 0034 2046     		mov	r0, r4
 300 0036 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 301              	.LVL11:
 391:Core/Src/main.c **** }
 302              		.loc 1 391 1 is_stmt 0 view .LVU84
 303 003a 10BD     		pop	{r4, pc}
 304              	.L11:
 305              		.align	2
 306              	.L10:
 307 003c 00000000 		.word	CAN1_sFilterConfig
 308 0040 00000000 		.word	hcan1
 309              		.cfi_endproc
 310              	.LFE145:
 312              		.section	.text.MX_CAN2_Setup,"ax",%progbits
 313              		.align	1
 314              		.global	MX_CAN2_Setup
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 319              	MX_CAN2_Setup:
 320              	.LFB146:
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** void MX_CAN2_Setup(void)
 394:Core/Src/main.c **** {
 321              		.loc 1 394 1 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 10B5     		push	{r4, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 4, -8
 328              		.cfi_offset 14, -4
 395:Core/Src/main.c ****   CAN2_sFilterConfig.FilterActivation = CAN_FILTER_ENABLE;
 329              		.loc 1 395 3 view .LVU86
 330              		.loc 1 395 39 is_stmt 0 view .LVU87
 331 0002 0E49     		ldr	r1, .L14
 332 0004 0123     		movs	r3, #1
 333 0006 0B62     		str	r3, [r1, #32]
 396:Core/Src/main.c ****   CAN2_sFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 334              		.loc 1 396 3 is_stmt 1 view .LVU88
 335              		.loc 1 396 43 is_stmt 0 view .LVU89
 336 0008 0023     		movs	r3, #0
 337 000a 0B61     		str	r3, [r1, #16]
 397:Core/Src/main.c ****   CAN2_sFilterConfig.SlaveStartFilterBank = 13;
 338              		.loc 1 397 3 is_stmt 1 view .LVU90
 339              		.loc 1 397 43 is_stmt 0 view .LVU91
 340 000c 0D22     		movs	r2, #13
 341 000e 4A62     		str	r2, [r1, #36]
 398:Core/Src/main.c ****   CAN2_sFilterConfig.FilterBank = 19;
 342              		.loc 1 398 3 is_stmt 1 view .LVU92
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 14


 343              		.loc 1 398 33 is_stmt 0 view .LVU93
 344 0010 1322     		movs	r2, #19
 345 0012 4A61     		str	r2, [r1, #20]
 399:Core/Src/main.c ****   CAN2_sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 346              		.loc 1 399 3 is_stmt 1 view .LVU94
 347              		.loc 1 399 33 is_stmt 0 view .LVU95
 348 0014 8B61     		str	r3, [r1, #24]
 400:Core/Src/main.c ****   CAN2_sFilterConfig.FilterScale = CAN_FILTERSCALE_16BIT;
 349              		.loc 1 400 3 is_stmt 1 view .LVU96
 350              		.loc 1 400 34 is_stmt 0 view .LVU97
 351 0016 CB61     		str	r3, [r1, #28]
 401:Core/Src/main.c ****   CAN2_sFilterConfig.FilterIdHigh = 0x7A2 << 5;
 352              		.loc 1 401 3 is_stmt 1 view .LVU98
 353              		.loc 1 401 35 is_stmt 0 view .LVU99
 354 0018 4FF24042 		movw	r2, #62528
 355 001c 0A60     		str	r2, [r1]
 402:Core/Src/main.c ****   CAN2_sFilterConfig.FilterIdLow = 0;
 356              		.loc 1 402 3 is_stmt 1 view .LVU100
 357              		.loc 1 402 34 is_stmt 0 view .LVU101
 358 001e 4B60     		str	r3, [r1, #4]
 403:Core/Src/main.c ****   CAN2_sFilterConfig.FilterMaskIdHigh = 0x7A2 << 5;
 359              		.loc 1 403 3 is_stmt 1 view .LVU102
 360              		.loc 1 403 39 is_stmt 0 view .LVU103
 361 0020 8A60     		str	r2, [r1, #8]
 404:Core/Src/main.c ****   CAN2_sFilterConfig.FilterMaskIdLow = 0;
 362              		.loc 1 404 3 is_stmt 1 view .LVU104
 363              		.loc 1 404 38 is_stmt 0 view .LVU105
 364 0022 CB60     		str	r3, [r1, #12]
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan2, &CAN2_sFilterConfig);
 365              		.loc 1 406 3 is_stmt 1 view .LVU106
 366 0024 064C     		ldr	r4, .L14+4
 367 0026 2046     		mov	r0, r4
 368 0028 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 369              	.LVL12:
 407:Core/Src/main.c ****   HAL_CAN_Start(&hcan2);
 370              		.loc 1 407 3 view .LVU107
 371 002c 2046     		mov	r0, r4
 372 002e FFF7FEFF 		bl	HAL_CAN_Start
 373              	.LVL13:
 408:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING);
 374              		.loc 1 408 3 view .LVU108
 375 0032 0221     		movs	r1, #2
 376 0034 2046     		mov	r0, r4
 377 0036 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 378              	.LVL14:
 409:Core/Src/main.c **** }
 379              		.loc 1 409 1 is_stmt 0 view .LVU109
 380 003a 10BD     		pop	{r4, pc}
 381              	.L15:
 382              		.align	2
 383              	.L14:
 384 003c 00000000 		.word	CAN2_sFilterConfig
 385 0040 00000000 		.word	hcan2
 386              		.cfi_endproc
 387              	.LFE146:
 389              		.section	.text.USART3_SendString,"ax",%progbits
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 15


 390              		.align	1
 391              		.global	USART3_SendString
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	USART3_SendString:
 397              	.LVL15:
 398              	.LFB147:
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** void USART3_SendString(char *ch)
 412:Core/Src/main.c **** {
 399              		.loc 1 412 1 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		.loc 1 412 1 is_stmt 0 view .LVU111
 404 0000 10B5     		push	{r4, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 4, -8
 407              		.cfi_offset 14, -4
 408 0002 0446     		mov	r4, r0
 413:Core/Src/main.c ****   while (*ch != 0)
 409              		.loc 1 413 3 is_stmt 1 view .LVU112
 410              		.loc 1 413 9 is_stmt 0 view .LVU113
 411 0004 07E0     		b	.L17
 412              	.LVL16:
 413              	.L18:
 414:Core/Src/main.c ****   {
 415:Core/Src/main.c ****     HAL_UART_Transmit(&huart3, ch, 1, HAL_MAX_DELAY);
 414              		.loc 1 415 5 is_stmt 1 view .LVU114
 415 0006 4FF0FF33 		mov	r3, #-1
 416 000a 0122     		movs	r2, #1
 417 000c 2146     		mov	r1, r4
 418 000e 0448     		ldr	r0, .L20
 419 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 420              	.LVL17:
 416:Core/Src/main.c ****     ch++;
 421              		.loc 1 416 5 view .LVU115
 422              		.loc 1 416 7 is_stmt 0 view .LVU116
 423 0014 0134     		adds	r4, r4, #1
 424              	.LVL18:
 425              	.L17:
 413:Core/Src/main.c ****   while (*ch != 0)
 426              		.loc 1 413 14 is_stmt 1 view .LVU117
 413:Core/Src/main.c ****   while (*ch != 0)
 427              		.loc 1 413 10 is_stmt 0 view .LVU118
 428 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 413:Core/Src/main.c ****   while (*ch != 0)
 429              		.loc 1 413 14 view .LVU119
 430 0018 002B     		cmp	r3, #0
 431 001a F4D1     		bne	.L18
 417:Core/Src/main.c ****   }
 418:Core/Src/main.c **** }
 432              		.loc 1 418 1 view .LVU120
 433 001c 10BD     		pop	{r4, pc}
 434              	.LVL19:
 435              	.L21:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 16


 436              		.loc 1 418 1 view .LVU121
 437 001e 00BF     		.align	2
 438              	.L20:
 439 0020 00000000 		.word	huart3
 440              		.cfi_endproc
 441              	.LFE147:
 443              		.section	.rodata.PrintCANLog.str1.4,"aMS",%progbits,1
 444              		.align	2
 445              	.LC2:
 446 0000 256400   		.ascii	"%d\000"
 447 0003 00       		.align	2
 448              	.LC3:
 449 0004 2000     		.ascii	" \000"
 450 0006 0000     		.align	2
 451              	.LC4:
 452 0008 25303358 		.ascii	"%03X\000"
 452      00
 453 000d 000000   		.align	2
 454              	.LC5:
 455 0010 25303258 		.ascii	"%02X\000"
 455      00
 456 0015 000000   		.align	2
 457              	.LC0:
 458 0018 20202000 		.ascii	"   \000"
 459              		.align	2
 460              	.LC1:
 461 001c 20202020 		.ascii	"        \000"
 461      20202020 
 461      00
 462              		.section	.text.PrintCANLog,"ax",%progbits
 463              		.align	1
 464              		.global	PrintCANLog
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 469              	PrintCANLog:
 470              	.LVL20:
 471              	.LFB148:
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** void PrintCANLog(uint16_t CANID, uint8_t *CAN_Frame)
 421:Core/Src/main.c **** {
 472              		.loc 1 421 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 16
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		.loc 1 421 1 is_stmt 0 view .LVU123
 477 0000 70B5     		push	{r4, r5, r6, lr}
 478              		.cfi_def_cfa_offset 16
 479              		.cfi_offset 4, -16
 480              		.cfi_offset 5, -12
 481              		.cfi_offset 6, -8
 482              		.cfi_offset 14, -4
 483 0002 84B0     		sub	sp, sp, #16
 484              		.cfi_def_cfa_offset 32
 485 0004 0646     		mov	r6, r0
 486 0006 0D46     		mov	r5, r1
 422:Core/Src/main.c ****   uint16_t loopIndx = 0;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 17


 487              		.loc 1 422 3 is_stmt 1 view .LVU124
 488              	.LVL21:
 423:Core/Src/main.c ****   char bufID[3] = "   ";
 489              		.loc 1 423 3 view .LVU125
 490              		.loc 1 423 8 is_stmt 0 view .LVU126
 491 0008 294B     		ldr	r3, .L28
 492 000a 1B68     		ldr	r3, [r3]
 493 000c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 494 0010 1B0C     		lsrs	r3, r3, #16
 495 0012 8DF80E30 		strb	r3, [sp, #14]
 424:Core/Src/main.c ****   char bufDat[2] = "  ";
 496              		.loc 1 424 3 is_stmt 1 view .LVU127
 497              		.loc 1 424 8 is_stmt 0 view .LVU128
 498 0016 42F22003 		movw	r3, #8224
 499 001a ADF80830 		strh	r3, [sp, #8]	@ movhi
 425:Core/Src/main.c ****   char bufTime[8] = "        ";
 500              		.loc 1 425 3 is_stmt 1 view .LVU129
 501              		.loc 1 425 8 is_stmt 0 view .LVU130
 502 001e 254B     		ldr	r3, .L28+4
 503 0020 6C46     		mov	r4, sp
 504 0022 93E80300 		ldm	r3, {r0, r1}
 505              	.LVL22:
 506              		.loc 1 425 8 view .LVU131
 507 0026 84E80300 		stm	r4, {r0, r1}
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   sprintf(bufTime, "%d", TimeStamp);
 508              		.loc 1 427 3 is_stmt 1 view .LVU132
 509 002a 234B     		ldr	r3, .L28+8
 510 002c 1A68     		ldr	r2, [r3]
 511 002e 2349     		ldr	r1, .L28+12
 512 0030 2046     		mov	r0, r4
 513 0032 FFF7FEFF 		bl	sprintf
 514              	.LVL23:
 428:Core/Src/main.c ****   USART3_SendString((uint8_t *)bufTime);
 515              		.loc 1 428 3 view .LVU133
 516 0036 2046     		mov	r0, r4
 517 0038 FFF7FEFF 		bl	USART3_SendString
 518              	.LVL24:
 429:Core/Src/main.c ****   USART3_SendString((uint8_t *)" ");
 519              		.loc 1 429 3 view .LVU134
 520 003c 2048     		ldr	r0, .L28+16
 521 003e FFF7FEFF 		bl	USART3_SendString
 522              	.LVL25:
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****   sprintf(bufID, "%03X", CANID);
 523              		.loc 1 431 3 view .LVU135
 524 0042 3246     		mov	r2, r6
 525 0044 1F49     		ldr	r1, .L28+20
 526 0046 03A8     		add	r0, sp, #12
 527 0048 FFF7FEFF 		bl	sprintf
 528              	.LVL26:
 432:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 3; loopIndx++)
 529              		.loc 1 432 3 view .LVU136
 530              		.loc 1 432 17 is_stmt 0 view .LVU137
 531 004c 0023     		movs	r3, #0
 532              		.loc 1 432 3 view .LVU138
 533 004e 08E0     		b	.L23
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 18


 534              	.LVL27:
 535              	.L24:
 433:Core/Src/main.c ****   {
 434:Core/Src/main.c ****     bufsend[loopIndx] = bufID[loopIndx];
 536              		.loc 1 434 5 is_stmt 1 view .LVU139
 537              		.loc 1 434 30 is_stmt 0 view .LVU140
 538 0050 03F11002 		add	r2, r3, #16
 539 0054 6A44     		add	r2, sp, r2
 540 0056 12F8041C 		ldrb	r1, [r2, #-4]	@ zero_extendqisi2
 541              		.loc 1 434 23 view .LVU141
 542 005a 1B4A     		ldr	r2, .L28+24
 543 005c D154     		strb	r1, [r2, r3]
 432:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 3; loopIndx++)
 544              		.loc 1 432 44 is_stmt 1 discriminator 3 view .LVU142
 545 005e 0133     		adds	r3, r3, #1
 546              	.LVL28:
 432:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 3; loopIndx++)
 547              		.loc 1 432 44 is_stmt 0 discriminator 3 view .LVU143
 548 0060 9BB2     		uxth	r3, r3
 549              	.LVL29:
 550              	.L23:
 432:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 3; loopIndx++)
 551              		.loc 1 432 31 is_stmt 1 discriminator 1 view .LVU144
 552 0062 022B     		cmp	r3, #2
 553 0064 F4D9     		bls	.L24
 435:Core/Src/main.c ****   }
 436:Core/Src/main.c ****   bufsend[3] = ':';
 554              		.loc 1 436 3 view .LVU145
 555              		.loc 1 436 14 is_stmt 0 view .LVU146
 556 0066 184B     		ldr	r3, .L28+24
 557              	.LVL30:
 558              		.loc 1 436 14 view .LVU147
 559 0068 3A22     		movs	r2, #58
 560 006a DA70     		strb	r2, [r3, #3]
 437:Core/Src/main.c ****   bufsend[4] = ' ';
 561              		.loc 1 437 3 is_stmt 1 view .LVU148
 562              		.loc 1 437 14 is_stmt 0 view .LVU149
 563 006c 2022     		movs	r2, #32
 564 006e 1A71     		strb	r2, [r3, #4]
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****   for (loopIndx = 0; loopIndx < 8; loopIndx++)
 565              		.loc 1 439 3 is_stmt 1 view .LVU150
 566              	.LVL31:
 567              		.loc 1 439 17 is_stmt 0 view .LVU151
 568 0070 0024     		movs	r4, #0
 569              		.loc 1 439 3 view .LVU152
 570 0072 14E0     		b	.L25
 571              	.LVL32:
 572              	.L26:
 440:Core/Src/main.c ****   {
 441:Core/Src/main.c ****     sprintf(bufDat, "%02X", CAN_Frame[loopIndx]);
 573              		.loc 1 441 5 is_stmt 1 view .LVU153
 574 0074 2A5D     		ldrb	r2, [r5, r4]	@ zero_extendqisi2
 575 0076 1549     		ldr	r1, .L28+28
 576 0078 02A8     		add	r0, sp, #8
 577 007a FFF7FEFF 		bl	sprintf
 578              	.LVL33:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 19


 442:Core/Src/main.c ****     bufsend[loopIndx * 3 + 5] = bufDat[0];
 579              		.loc 1 442 5 view .LVU154
 580              		.loc 1 442 22 is_stmt 0 view .LVU155
 581 007e 04EB4403 		add	r3, r4, r4, lsl #1
 582              		.loc 1 442 26 view .LVU156
 583 0082 591D     		adds	r1, r3, #5
 584              		.loc 1 442 39 view .LVU157
 585 0084 9DF80800 		ldrb	r0, [sp, #8]	@ zero_extendqisi2
 586              		.loc 1 442 31 view .LVU158
 587 0088 0F4A     		ldr	r2, .L28+24
 588 008a 5054     		strb	r0, [r2, r1]
 443:Core/Src/main.c ****     bufsend[loopIndx * 3 + 6] = bufDat[1];
 589              		.loc 1 443 5 is_stmt 1 view .LVU159
 590              		.loc 1 443 26 is_stmt 0 view .LVU160
 591 008c 991D     		adds	r1, r3, #6
 592              		.loc 1 443 39 view .LVU161
 593 008e 9DF80900 		ldrb	r0, [sp, #9]	@ zero_extendqisi2
 594              		.loc 1 443 31 view .LVU162
 595 0092 5054     		strb	r0, [r2, r1]
 444:Core/Src/main.c ****     bufsend[loopIndx * 3 + 7] = ' ';
 596              		.loc 1 444 5 is_stmt 1 view .LVU163
 597              		.loc 1 444 26 is_stmt 0 view .LVU164
 598 0094 0733     		adds	r3, r3, #7
 599              		.loc 1 444 31 view .LVU165
 600 0096 2021     		movs	r1, #32
 601 0098 D154     		strb	r1, [r2, r3]
 439:Core/Src/main.c ****   {
 602              		.loc 1 439 44 is_stmt 1 discriminator 3 view .LVU166
 603 009a 0134     		adds	r4, r4, #1
 604              	.LVL34:
 439:Core/Src/main.c ****   {
 605              		.loc 1 439 44 is_stmt 0 discriminator 3 view .LVU167
 606 009c A4B2     		uxth	r4, r4
 607              	.LVL35:
 608              	.L25:
 439:Core/Src/main.c ****   {
 609              		.loc 1 439 31 is_stmt 1 discriminator 1 view .LVU168
 610 009e 072C     		cmp	r4, #7
 611 00a0 E8D9     		bls	.L26
 445:Core/Src/main.c ****   }
 446:Core/Src/main.c ****   bufsend[29] = '\n';
 612              		.loc 1 446 3 view .LVU169
 613              		.loc 1 446 15 is_stmt 0 view .LVU170
 614 00a2 0948     		ldr	r0, .L28+24
 615 00a4 0A23     		movs	r3, #10
 616 00a6 4377     		strb	r3, [r0, #29]
 447:Core/Src/main.c ****   USART3_SendString((unsigned char *)bufsend);
 617              		.loc 1 447 3 is_stmt 1 view .LVU171
 618 00a8 FFF7FEFF 		bl	USART3_SendString
 619              	.LVL36:
 448:Core/Src/main.c **** }
 620              		.loc 1 448 1 is_stmt 0 view .LVU172
 621 00ac 04B0     		add	sp, sp, #16
 622              		.cfi_def_cfa_offset 16
 623              		@ sp needed
 624 00ae 70BD     		pop	{r4, r5, r6, pc}
 625              	.LVL37:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 20


 626              	.L29:
 627              		.loc 1 448 1 view .LVU173
 628              		.align	2
 629              	.L28:
 630 00b0 18000000 		.word	.LC0
 631 00b4 1C000000 		.word	.LC1
 632 00b8 00000000 		.word	TimeStamp
 633 00bc 00000000 		.word	.LC2
 634 00c0 04000000 		.word	.LC3
 635 00c4 08000000 		.word	.LC4
 636 00c8 00000000 		.word	bufsend
 637 00cc 10000000 		.word	.LC5
 638              		.cfi_endproc
 639              	.LFE148:
 641              		.section	.rodata.HAL_CAN_RxFifo0MsgPendingCallback.str1.4,"aMS",%progbits,1
 642              		.align	2
 643              	.LC6:
 644 0000 43414E31 		.ascii	"CAN1 RX\012\000"
 644      2052580A 
 644      00
 645 0009 000000   		.align	2
 646              	.LC7:
 647 000c 43414E32 		.ascii	"CAN2 RX\012\000"
 647      2052580A 
 647      00
 648              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 649              		.align	1
 650              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 655              	HAL_CAN_RxFifo0MsgPendingCallback:
 656              	.LVL38:
 657              	.LFB142:
 276:Core/Src/main.c ****     if (hcan == &hcan1)
 658              		.loc 1 276 1 is_stmt 1 view -0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 16
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 276:Core/Src/main.c ****     if (hcan == &hcan1)
 662              		.loc 1 276 1 is_stmt 0 view .LVU175
 663 0000 10B5     		push	{r4, lr}
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 4, -8
 666              		.cfi_offset 14, -4
 667 0002 84B0     		sub	sp, sp, #16
 668              		.cfi_def_cfa_offset 24
 277:Core/Src/main.c ****     {
 669              		.loc 1 277 5 is_stmt 1 view .LVU176
 277:Core/Src/main.c ****     {
 670              		.loc 1 277 8 is_stmt 0 view .LVU177
 671 0004 174B     		ldr	r3, .L36
 672 0006 9842     		cmp	r0, r3
 673 0008 04D0     		beq	.L34
 285:Core/Src/main.c ****     {
 674              		.loc 1 285 10 is_stmt 1 view .LVU178
 285:Core/Src/main.c ****     {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 21


 675              		.loc 1 285 13 is_stmt 0 view .LVU179
 676 000a 174B     		ldr	r3, .L36+4
 677 000c 9842     		cmp	r0, r3
 678 000e 15D0     		beq	.L35
 679              	.LVL39:
 680              	.L30:
 293:Core/Src/main.c **** 
 681              		.loc 1 293 1 view .LVU180
 682 0010 04B0     		add	sp, sp, #16
 683              		.cfi_remember_state
 684              		.cfi_def_cfa_offset 8
 685              		@ sp needed
 686 0012 10BD     		pop	{r4, pc}
 687              	.LVL40:
 688              	.L34:
 689              		.cfi_restore_state
 690              	.LBB8:
 279:Core/Src/main.c **** 
 691              		.loc 1 279 9 is_stmt 1 view .LVU181
 692 0014 154C     		ldr	r4, .L36+8
 693 0016 2346     		mov	r3, r4
 694 0018 154A     		ldr	r2, .L36+12
 695 001a 0021     		movs	r1, #0
 696 001c 1148     		ldr	r0, .L36
 697              	.LVL41:
 279:Core/Src/main.c **** 
 698              		.loc 1 279 9 is_stmt 0 view .LVU182
 699 001e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 700              	.LVL42:
 281:Core/Src/main.c ****         USART3_SendString((unsigned char *)buffer3);
 701              		.loc 1 281 9 is_stmt 1 view .LVU183
 281:Core/Src/main.c ****         USART3_SendString((unsigned char *)buffer3);
 702              		.loc 1 281 14 is_stmt 0 view .LVU184
 703 0022 144A     		ldr	r2, .L36+16
 704 0024 01AB     		add	r3, sp, #4
 705 0026 07CA     		ldm	r2, {r0, r1, r2}
 706 0028 03C3     		stmia	r3!, {r0, r1}
 707 002a 1A70     		strb	r2, [r3]
 282:Core/Src/main.c ****         PrintCANLog(0x0A2, CAN1_DATA_RX);
 708              		.loc 1 282 9 is_stmt 1 view .LVU185
 709 002c 01A8     		add	r0, sp, #4
 710 002e FFF7FEFF 		bl	USART3_SendString
 711              	.LVL43:
 283:Core/Src/main.c ****     }
 712              		.loc 1 283 9 view .LVU186
 713 0032 2146     		mov	r1, r4
 714 0034 A220     		movs	r0, #162
 715 0036 FFF7FEFF 		bl	PrintCANLog
 716              	.LVL44:
 717              	.LBE8:
 718 003a E9E7     		b	.L30
 719              	.LVL45:
 720              	.L35:
 721              	.LBB9:
 287:Core/Src/main.c **** 
 722              		.loc 1 287 9 view .LVU187
 723 003c 0E4C     		ldr	r4, .L36+20
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 22


 724 003e 2346     		mov	r3, r4
 725 0040 0E4A     		ldr	r2, .L36+24
 726 0042 0021     		movs	r1, #0
 727 0044 0848     		ldr	r0, .L36+4
 728              	.LVL46:
 287:Core/Src/main.c **** 
 729              		.loc 1 287 9 is_stmt 0 view .LVU188
 730 0046 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 731              	.LVL47:
 289:Core/Src/main.c ****         USART3_SendString((unsigned char *)buffer4);
 732              		.loc 1 289 9 is_stmt 1 view .LVU189
 289:Core/Src/main.c ****         USART3_SendString((unsigned char *)buffer4);
 733              		.loc 1 289 14 is_stmt 0 view .LVU190
 734 004a 0D4A     		ldr	r2, .L36+28
 735 004c 01AB     		add	r3, sp, #4
 736 004e 07CA     		ldm	r2, {r0, r1, r2}
 737 0050 03C3     		stmia	r3!, {r0, r1}
 738 0052 1A70     		strb	r2, [r3]
 290:Core/Src/main.c ****         PrintCANLog(0x012, CAN2_DATA_RX);
 739              		.loc 1 290 9 is_stmt 1 view .LVU191
 740 0054 01A8     		add	r0, sp, #4
 741 0056 FFF7FEFF 		bl	USART3_SendString
 742              	.LVL48:
 291:Core/Src/main.c ****     }
 743              		.loc 1 291 9 view .LVU192
 744 005a 2146     		mov	r1, r4
 745 005c 1220     		movs	r0, #18
 746 005e FFF7FEFF 		bl	PrintCANLog
 747              	.LVL49:
 748              	.LBE9:
 293:Core/Src/main.c **** 
 749              		.loc 1 293 1 is_stmt 0 view .LVU193
 750 0062 D5E7     		b	.L30
 751              	.L37:
 752              		.align	2
 753              	.L36:
 754 0064 00000000 		.word	hcan1
 755 0068 00000000 		.word	hcan2
 756 006c 00000000 		.word	CAN1_DATA_RX
 757 0070 00000000 		.word	CAN1_pHeaderRx
 758 0074 00000000 		.word	.LC6
 759 0078 00000000 		.word	CAN2_DATA_RX
 760 007c 00000000 		.word	CAN2_pHeaderRx
 761 0080 0C000000 		.word	.LC7
 762              		.cfi_endproc
 763              	.LFE142:
 765              		.section	.text.calc_crc,"ax",%progbits
 766              		.align	1
 767              		.global	calc_crc
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 772              	calc_crc:
 773              	.LVL50:
 774              	.LFB149:
 449:Core/Src/main.c **** 
 450:Core/Src/main.c **** uint8_t calc_crc(uint8_t *data, uint8_t crc_len)
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 23


 451:Core/Src/main.c **** {
 775              		.loc 1 451 1 is_stmt 1 view -0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		.loc 1 451 1 is_stmt 0 view .LVU195
 780 0000 00B5     		push	{lr}
 781              		.cfi_def_cfa_offset 4
 782              		.cfi_offset 14, -4
 783 0002 8646     		mov	lr, r0
 784 0004 8C46     		mov	ip, r1
 452:Core/Src/main.c ****   uint8_t idx, crc, temp1, temp2, idy;
 785              		.loc 1 452 3 is_stmt 1 view .LVU196
 453:Core/Src/main.c ****   crc = 0;
 786              		.loc 1 453 3 view .LVU197
 787              	.LVL51:
 454:Core/Src/main.c ****   idx = 0;
 788              		.loc 1 454 3 view .LVU198
 455:Core/Src/main.c ****   idy = 0;
 789              		.loc 1 455 3 view .LVU199
 456:Core/Src/main.c ****   temp1 = 0;
 790              		.loc 1 456 3 view .LVU200
 457:Core/Src/main.c ****   temp2 = 0;
 791              		.loc 1 457 3 view .LVU201
 458:Core/Src/main.c ****   for (idx = 0; idx < crc_len + 1; idx++)
 792              		.loc 1 458 3 view .LVU202
 453:Core/Src/main.c ****   idx = 0;
 793              		.loc 1 453 7 is_stmt 0 view .LVU203
 794 0006 0020     		movs	r0, #0
 795              	.LVL52:
 796              		.loc 1 458 12 view .LVU204
 797 0008 0146     		mov	r1, r0
 798              	.LVL53:
 799              		.loc 1 458 3 view .LVU205
 800 000a 0FE0     		b	.L39
 801              	.LVL54:
 802              	.L45:
 459:Core/Src/main.c ****   {
 460:Core/Src/main.c ****     if (idx == 0)
 461:Core/Src/main.c ****     {
 462:Core/Src/main.c ****       temp1 = 0;
 803              		.loc 1 462 13 view .LVU206
 804 000c 0B46     		mov	r3, r1
 805 000e 15E0     		b	.L40
 806              	.LVL55:
 807              	.L42:
 463:Core/Src/main.c ****     }
 464:Core/Src/main.c ****     else
 465:Core/Src/main.c ****     {
 466:Core/Src/main.c ****       temp1 = data[crc_len - idx];
 467:Core/Src/main.c ****     }
 468:Core/Src/main.c ****     crc = (crc ^ temp1);
 469:Core/Src/main.c ****     for (idy = (uint8_t)8; idy > 0; idy--)
 808              		.loc 1 469 40 is_stmt 1 discriminator 2 view .LVU207
 809 0010 013B     		subs	r3, r3, #1
 810              	.LVL56:
 811              		.loc 1 469 40 is_stmt 0 discriminator 2 view .LVU208
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 24


 812 0012 DBB2     		uxtb	r3, r3
 813              	.LVL57:
 814              		.loc 1 469 40 discriminator 2 view .LVU209
 815 0014 1046     		mov	r0, r2
 816              	.LVL58:
 817              	.L41:
 818              		.loc 1 469 32 is_stmt 1 discriminator 1 view .LVU210
 819 0016 3BB1     		cbz	r3, .L47
 470:Core/Src/main.c ****     {
 471:Core/Src/main.c ****       // Save the value before the top bit is shifted out.
 472:Core/Src/main.c ****       temp2 = crc;
 820              		.loc 1 472 7 view .LVU211
 821              	.LVL59:
 473:Core/Src/main.c ****       crc <<= 1;
 822              		.loc 1 473 7 view .LVU212
 823              		.loc 1 473 11 is_stmt 0 view .LVU213
 824 0018 4200     		lsls	r2, r0, #1
 825 001a D2B2     		uxtb	r2, r2
 826              	.LVL60:
 474:Core/Src/main.c ****       if (0 != (temp2 & (uint8_t)128))
 827              		.loc 1 474 7 is_stmt 1 view .LVU214
 828              		.loc 1 474 10 is_stmt 0 view .LVU215
 829 001c 10F0800F 		tst	r0, #128
 830 0020 F6D0     		beq	.L42
 475:Core/Src/main.c ****         crc ^= 0x1D;
 831              		.loc 1 475 9 is_stmt 1 view .LVU216
 832              		.loc 1 475 13 is_stmt 0 view .LVU217
 833 0022 82F01D02 		eor	r2, r2, #29
 834              	.LVL61:
 835              		.loc 1 475 13 view .LVU218
 836 0026 F3E7     		b	.L42
 837              	.LVL62:
 838              	.L47:
 458:Core/Src/main.c ****   {
 839              		.loc 1 458 39 is_stmt 1 discriminator 2 view .LVU219
 840 0028 0131     		adds	r1, r1, #1
 841              	.LVL63:
 458:Core/Src/main.c ****   {
 842              		.loc 1 458 39 is_stmt 0 discriminator 2 view .LVU220
 843 002a C9B2     		uxtb	r1, r1
 844              	.LVL64:
 845              	.L39:
 458:Core/Src/main.c ****   {
 846              		.loc 1 458 21 is_stmt 1 discriminator 1 view .LVU221
 847 002c 6145     		cmp	r1, ip
 848 002e 09D8     		bhi	.L48
 460:Core/Src/main.c ****     {
 849              		.loc 1 460 5 view .LVU222
 460:Core/Src/main.c ****     {
 850              		.loc 1 460 8 is_stmt 0 view .LVU223
 851 0030 0029     		cmp	r1, #0
 852 0032 EBD0     		beq	.L45
 466:Core/Src/main.c ****     }
 853              		.loc 1 466 7 is_stmt 1 view .LVU224
 466:Core/Src/main.c ****     }
 854              		.loc 1 466 28 is_stmt 0 view .LVU225
 855 0034 ACEB0103 		sub	r3, ip, r1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 25


 466:Core/Src/main.c ****     }
 856              		.loc 1 466 13 view .LVU226
 857 0038 1EF80330 		ldrb	r3, [lr, r3]	@ zero_extendqisi2
 858              	.LVL65:
 859              	.L40:
 468:Core/Src/main.c ****     for (idy = (uint8_t)8; idy > 0; idy--)
 860              		.loc 1 468 5 is_stmt 1 view .LVU227
 468:Core/Src/main.c ****     for (idy = (uint8_t)8; idy > 0; idy--)
 861              		.loc 1 468 9 is_stmt 0 view .LVU228
 862 003c 5840     		eors	r0, r0, r3
 863              	.LVL66:
 468:Core/Src/main.c ****     for (idy = (uint8_t)8; idy > 0; idy--)
 864              		.loc 1 468 9 view .LVU229
 865 003e C0B2     		uxtb	r0, r0
 866              	.LVL67:
 469:Core/Src/main.c ****     {
 867              		.loc 1 469 5 is_stmt 1 view .LVU230
 469:Core/Src/main.c ****     {
 868              		.loc 1 469 14 is_stmt 0 view .LVU231
 869 0040 0823     		movs	r3, #8
 870              	.LVL68:
 469:Core/Src/main.c ****     {
 871              		.loc 1 469 5 view .LVU232
 872 0042 E8E7     		b	.L41
 873              	.LVL69:
 874              	.L48:
 476:Core/Src/main.c ****     }
 477:Core/Src/main.c ****   }
 478:Core/Src/main.c ****   return crc;
 875              		.loc 1 478 3 is_stmt 1 view .LVU233
 479:Core/Src/main.c **** }
 876              		.loc 1 479 1 is_stmt 0 view .LVU234
 877 0044 5DF804FB 		ldr	pc, [sp], #4
 878              		.cfi_endproc
 879              	.LFE149:
 881              		.section	.text.Error_Handler,"ax",%progbits
 882              		.align	1
 883              		.global	Error_Handler
 884              		.syntax unified
 885              		.thumb
 886              		.thumb_func
 888              	Error_Handler:
 889              	.LFB150:
 480:Core/Src/main.c **** /* USER CODE END 4 */
 481:Core/Src/main.c **** 
 482:Core/Src/main.c **** /**
 483:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 484:Core/Src/main.c ****  * @retval None
 485:Core/Src/main.c ****  */
 486:Core/Src/main.c **** void Error_Handler(void)
 487:Core/Src/main.c **** {
 890              		.loc 1 487 1 is_stmt 1 view -0
 891              		.cfi_startproc
 892              		@ Volatile: function does not return.
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895              		@ link register save eliminated.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 26


 488:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 489:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 490:Core/Src/main.c ****   __disable_irq();
 896              		.loc 1 490 3 view .LVU236
 897              	.LBB10:
 898              	.LBI10:
 899              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 27


  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 28


 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 29


 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 30


 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 31


 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 32


 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 33


 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 34


 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 35


 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 36


 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 37


 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 38


 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 39


 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 40


 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 41


 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 42


 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 900              		.loc 2 960 27 view .LVU237
 901              	.LBB11:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 43


 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 902              		.loc 2 962 3 view .LVU238
 903              		.syntax unified
 904              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 905 0000 72B6     		cpsid i
 906              	@ 0 "" 2
 907              		.thumb
 908              		.syntax unified
 909              	.L50:
 910              	.LBE11:
 911              	.LBE10:
 491:Core/Src/main.c ****   while (1)
 912              		.loc 1 491 3 view .LVU239
 492:Core/Src/main.c ****   {
 493:Core/Src/main.c ****   }
 913              		.loc 1 493 3 view .LVU240
 491:Core/Src/main.c ****   while (1)
 914              		.loc 1 491 9 view .LVU241
 915 0002 FEE7     		b	.L50
 916              		.cfi_endproc
 917              	.LFE150:
 919              		.section	.text.MX_CAN1_Init,"ax",%progbits
 920              		.align	1
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 925              	MX_CAN1_Init:
 926              	.LFB140:
 209:Core/Src/main.c **** 
 927              		.loc 1 209 1 view -0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 0
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931 0000 08B5     		push	{r3, lr}
 932              		.cfi_def_cfa_offset 8
 933              		.cfi_offset 3, -8
 934              		.cfi_offset 14, -4
 218:Core/Src/main.c ****   hcan1.Init.Prescaler = 1;
 935              		.loc 1 218 3 view .LVU243
 218:Core/Src/main.c ****   hcan1.Init.Prescaler = 1;
 936              		.loc 1 218 18 is_stmt 0 view .LVU244
 937 0002 0E48     		ldr	r0, .L55
 938 0004 0E4B     		ldr	r3, .L55+4
 939 0006 0360     		str	r3, [r0]
 219:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 940              		.loc 1 219 3 is_stmt 1 view .LVU245
 219:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 941              		.loc 1 219 24 is_stmt 0 view .LVU246
 942 0008 0123     		movs	r3, #1
 943 000a 4360     		str	r3, [r0, #4]
 220:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 944              		.loc 1 220 3 is_stmt 1 view .LVU247
 220:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_2TQ;
 945              		.loc 1 220 19 is_stmt 0 view .LVU248
 946 000c 0023     		movs	r3, #0
 947 000e 8360     		str	r3, [r0, #8]
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 44


 221:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 948              		.loc 1 221 3 is_stmt 1 view .LVU249
 221:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_11TQ;
 949              		.loc 1 221 28 is_stmt 0 view .LVU250
 950 0010 4FF08072 		mov	r2, #16777216
 951 0014 C260     		str	r2, [r0, #12]
 222:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 952              		.loc 1 222 3 is_stmt 1 view .LVU251
 222:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_4TQ;
 953              		.loc 1 222 23 is_stmt 0 view .LVU252
 954 0016 4FF42022 		mov	r2, #655360
 955 001a 0261     		str	r2, [r0, #16]
 223:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 956              		.loc 1 223 3 is_stmt 1 view .LVU253
 223:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 957              		.loc 1 223 23 is_stmt 0 view .LVU254
 958 001c 4FF44012 		mov	r2, #3145728
 959 0020 4261     		str	r2, [r0, #20]
 224:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 960              		.loc 1 224 3 is_stmt 1 view .LVU255
 224:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 961              		.loc 1 224 32 is_stmt 0 view .LVU256
 962 0022 0376     		strb	r3, [r0, #24]
 225:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 963              		.loc 1 225 3 is_stmt 1 view .LVU257
 225:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 964              		.loc 1 225 25 is_stmt 0 view .LVU258
 965 0024 4376     		strb	r3, [r0, #25]
 226:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 966              		.loc 1 226 3 is_stmt 1 view .LVU259
 226:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 967              		.loc 1 226 25 is_stmt 0 view .LVU260
 968 0026 8376     		strb	r3, [r0, #26]
 227:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 969              		.loc 1 227 3 is_stmt 1 view .LVU261
 227:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 970              		.loc 1 227 33 is_stmt 0 view .LVU262
 971 0028 C376     		strb	r3, [r0, #27]
 228:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 972              		.loc 1 228 3 is_stmt 1 view .LVU263
 228:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 973              		.loc 1 228 32 is_stmt 0 view .LVU264
 974 002a 0377     		strb	r3, [r0, #28]
 229:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 975              		.loc 1 229 3 is_stmt 1 view .LVU265
 229:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 976              		.loc 1 229 35 is_stmt 0 view .LVU266
 977 002c 4377     		strb	r3, [r0, #29]
 230:Core/Src/main.c ****   {
 978              		.loc 1 230 3 is_stmt 1 view .LVU267
 230:Core/Src/main.c ****   {
 979              		.loc 1 230 7 is_stmt 0 view .LVU268
 980 002e FFF7FEFF 		bl	HAL_CAN_Init
 981              	.LVL70:
 230:Core/Src/main.c ****   {
 982              		.loc 1 230 6 discriminator 1 view .LVU269
 983 0032 00B9     		cbnz	r0, .L54
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 45


 237:Core/Src/main.c **** 
 984              		.loc 1 237 1 view .LVU270
 985 0034 08BD     		pop	{r3, pc}
 986              	.L54:
 232:Core/Src/main.c ****   }
 987              		.loc 1 232 5 is_stmt 1 view .LVU271
 988 0036 FFF7FEFF 		bl	Error_Handler
 989              	.LVL71:
 990              	.L56:
 991 003a 00BF     		.align	2
 992              	.L55:
 993 003c 00000000 		.word	hcan1
 994 0040 00640040 		.word	1073767424
 995              		.cfi_endproc
 996              	.LFE140:
 998              		.section	.text.MX_CAN2_Init,"ax",%progbits
 999              		.align	1
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1004              	MX_CAN2_Init:
 1005              	.LFB141:
 245:Core/Src/main.c **** 
 1006              		.loc 1 245 1 view -0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010 0000 08B5     		push	{r3, lr}
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 3, -8
 1013              		.cfi_offset 14, -4
 254:Core/Src/main.c ****   hcan2.Init.Prescaler = 1;
 1014              		.loc 1 254 3 view .LVU273
 254:Core/Src/main.c ****   hcan2.Init.Prescaler = 1;
 1015              		.loc 1 254 18 is_stmt 0 view .LVU274
 1016 0002 0E48     		ldr	r0, .L61
 1017 0004 0E4B     		ldr	r3, .L61+4
 1018 0006 0360     		str	r3, [r0]
 255:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 1019              		.loc 1 255 3 is_stmt 1 view .LVU275
 255:Core/Src/main.c ****   hcan2.Init.Mode = CAN_MODE_NORMAL;
 1020              		.loc 1 255 24 is_stmt 0 view .LVU276
 1021 0008 0123     		movs	r3, #1
 1022 000a 4360     		str	r3, [r0, #4]
 256:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 1023              		.loc 1 256 3 is_stmt 1 view .LVU277
 256:Core/Src/main.c ****   hcan2.Init.SyncJumpWidth = CAN_SJW_2TQ;
 1024              		.loc 1 256 19 is_stmt 0 view .LVU278
 1025 000c 0023     		movs	r3, #0
 1026 000e 8360     		str	r3, [r0, #8]
 257:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
 1027              		.loc 1 257 3 is_stmt 1 view .LVU279
 257:Core/Src/main.c ****   hcan2.Init.TimeSeg1 = CAN_BS1_11TQ;
 1028              		.loc 1 257 28 is_stmt 0 view .LVU280
 1029 0010 4FF08072 		mov	r2, #16777216
 1030 0014 C260     		str	r2, [r0, #12]
 258:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 46


 1031              		.loc 1 258 3 is_stmt 1 view .LVU281
 258:Core/Src/main.c ****   hcan2.Init.TimeSeg2 = CAN_BS2_4TQ;
 1032              		.loc 1 258 23 is_stmt 0 view .LVU282
 1033 0016 4FF42022 		mov	r2, #655360
 1034 001a 0261     		str	r2, [r0, #16]
 259:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 1035              		.loc 1 259 3 is_stmt 1 view .LVU283
 259:Core/Src/main.c ****   hcan2.Init.TimeTriggeredMode = DISABLE;
 1036              		.loc 1 259 23 is_stmt 0 view .LVU284
 1037 001c 4FF44012 		mov	r2, #3145728
 1038 0020 4261     		str	r2, [r0, #20]
 260:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 1039              		.loc 1 260 3 is_stmt 1 view .LVU285
 260:Core/Src/main.c ****   hcan2.Init.AutoBusOff = DISABLE;
 1040              		.loc 1 260 32 is_stmt 0 view .LVU286
 1041 0022 0376     		strb	r3, [r0, #24]
 261:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 1042              		.loc 1 261 3 is_stmt 1 view .LVU287
 261:Core/Src/main.c ****   hcan2.Init.AutoWakeUp = DISABLE;
 1043              		.loc 1 261 25 is_stmt 0 view .LVU288
 1044 0024 4376     		strb	r3, [r0, #25]
 262:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 1045              		.loc 1 262 3 is_stmt 1 view .LVU289
 262:Core/Src/main.c ****   hcan2.Init.AutoRetransmission = DISABLE;
 1046              		.loc 1 262 25 is_stmt 0 view .LVU290
 1047 0026 8376     		strb	r3, [r0, #26]
 263:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 1048              		.loc 1 263 3 is_stmt 1 view .LVU291
 263:Core/Src/main.c ****   hcan2.Init.ReceiveFifoLocked = DISABLE;
 1049              		.loc 1 263 33 is_stmt 0 view .LVU292
 1050 0028 C376     		strb	r3, [r0, #27]
 264:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 1051              		.loc 1 264 3 is_stmt 1 view .LVU293
 264:Core/Src/main.c ****   hcan2.Init.TransmitFifoPriority = DISABLE;
 1052              		.loc 1 264 32 is_stmt 0 view .LVU294
 1053 002a 0377     		strb	r3, [r0, #28]
 265:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 1054              		.loc 1 265 3 is_stmt 1 view .LVU295
 265:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan2) != HAL_OK)
 1055              		.loc 1 265 35 is_stmt 0 view .LVU296
 1056 002c 4377     		strb	r3, [r0, #29]
 266:Core/Src/main.c ****   {
 1057              		.loc 1 266 3 is_stmt 1 view .LVU297
 266:Core/Src/main.c ****   {
 1058              		.loc 1 266 7 is_stmt 0 view .LVU298
 1059 002e FFF7FEFF 		bl	HAL_CAN_Init
 1060              	.LVL72:
 266:Core/Src/main.c ****   {
 1061              		.loc 1 266 6 discriminator 1 view .LVU299
 1062 0032 00B9     		cbnz	r0, .L60
 273:Core/Src/main.c **** 
 1063              		.loc 1 273 1 view .LVU300
 1064 0034 08BD     		pop	{r3, pc}
 1065              	.L60:
 268:Core/Src/main.c ****   }
 1066              		.loc 1 268 5 is_stmt 1 view .LVU301
 1067 0036 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 47


 1068              	.LVL73:
 1069              	.L62:
 1070 003a 00BF     		.align	2
 1071              	.L61:
 1072 003c 00000000 		.word	hcan2
 1073 0040 00680040 		.word	1073768448
 1074              		.cfi_endproc
 1075              	.LFE141:
 1077              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 1078              		.align	1
 1079              		.syntax unified
 1080              		.thumb
 1081              		.thumb_func
 1083              	MX_USART3_UART_Init:
 1084              	.LFB143:
 301:Core/Src/main.c **** 
 1085              		.loc 1 301 1 view -0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 0
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 1089 0000 08B5     		push	{r3, lr}
 1090              		.cfi_def_cfa_offset 8
 1091              		.cfi_offset 3, -8
 1092              		.cfi_offset 14, -4
 310:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 1093              		.loc 1 310 3 view .LVU303
 310:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 1094              		.loc 1 310 19 is_stmt 0 view .LVU304
 1095 0002 0A48     		ldr	r0, .L67
 1096 0004 0A4B     		ldr	r3, .L67+4
 1097 0006 0360     		str	r3, [r0]
 311:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1098              		.loc 1 311 3 is_stmt 1 view .LVU305
 311:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1099              		.loc 1 311 24 is_stmt 0 view .LVU306
 1100 0008 4FF4E133 		mov	r3, #115200
 1101 000c 4360     		str	r3, [r0, #4]
 312:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1102              		.loc 1 312 3 is_stmt 1 view .LVU307
 312:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1103              		.loc 1 312 26 is_stmt 0 view .LVU308
 1104 000e 0023     		movs	r3, #0
 1105 0010 8360     		str	r3, [r0, #8]
 313:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1106              		.loc 1 313 3 is_stmt 1 view .LVU309
 313:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1107              		.loc 1 313 24 is_stmt 0 view .LVU310
 1108 0012 C360     		str	r3, [r0, #12]
 314:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1109              		.loc 1 314 3 is_stmt 1 view .LVU311
 314:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1110              		.loc 1 314 22 is_stmt 0 view .LVU312
 1111 0014 0361     		str	r3, [r0, #16]
 315:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1112              		.loc 1 315 3 is_stmt 1 view .LVU313
 315:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1113              		.loc 1 315 20 is_stmt 0 view .LVU314
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 48


 1114 0016 0C22     		movs	r2, #12
 1115 0018 4261     		str	r2, [r0, #20]
 316:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1116              		.loc 1 316 3 is_stmt 1 view .LVU315
 316:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1117              		.loc 1 316 25 is_stmt 0 view .LVU316
 1118 001a 8361     		str	r3, [r0, #24]
 317:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1119              		.loc 1 317 3 is_stmt 1 view .LVU317
 317:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1120              		.loc 1 317 28 is_stmt 0 view .LVU318
 1121 001c C361     		str	r3, [r0, #28]
 318:Core/Src/main.c ****   {
 1122              		.loc 1 318 3 is_stmt 1 view .LVU319
 318:Core/Src/main.c ****   {
 1123              		.loc 1 318 7 is_stmt 0 view .LVU320
 1124 001e FFF7FEFF 		bl	HAL_UART_Init
 1125              	.LVL74:
 318:Core/Src/main.c ****   {
 1126              		.loc 1 318 6 discriminator 1 view .LVU321
 1127 0022 00B9     		cbnz	r0, .L66
 325:Core/Src/main.c **** 
 1128              		.loc 1 325 1 view .LVU322
 1129 0024 08BD     		pop	{r3, pc}
 1130              	.L66:
 320:Core/Src/main.c ****   }
 1131              		.loc 1 320 5 is_stmt 1 view .LVU323
 1132 0026 FFF7FEFF 		bl	Error_Handler
 1133              	.LVL75:
 1134              	.L68:
 1135 002a 00BF     		.align	2
 1136              	.L67:
 1137 002c 00000000 		.word	huart3
 1138 0030 00480040 		.word	1073760256
 1139              		.cfi_endproc
 1140              	.LFE143:
 1142              		.section	.text.SystemClock_Config,"ax",%progbits
 1143              		.align	1
 1144              		.global	SystemClock_Config
 1145              		.syntax unified
 1146              		.thumb
 1147              		.thumb_func
 1149              	SystemClock_Config:
 1150              	.LFB139:
 163:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1151              		.loc 1 163 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 80
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
 1155 0000 00B5     		push	{lr}
 1156              		.cfi_def_cfa_offset 4
 1157              		.cfi_offset 14, -4
 1158 0002 95B0     		sub	sp, sp, #84
 1159              		.cfi_def_cfa_offset 88
 164:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1160              		.loc 1 164 3 view .LVU325
 164:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 49


 1161              		.loc 1 164 22 is_stmt 0 view .LVU326
 1162 0004 3022     		movs	r2, #48
 1163 0006 0021     		movs	r1, #0
 1164 0008 08A8     		add	r0, sp, #32
 1165 000a FFF7FEFF 		bl	memset
 1166              	.LVL76:
 165:Core/Src/main.c **** 
 1167              		.loc 1 165 3 is_stmt 1 view .LVU327
 165:Core/Src/main.c **** 
 1168              		.loc 1 165 22 is_stmt 0 view .LVU328
 1169 000e 0023     		movs	r3, #0
 1170 0010 0393     		str	r3, [sp, #12]
 1171 0012 0493     		str	r3, [sp, #16]
 1172 0014 0593     		str	r3, [sp, #20]
 1173 0016 0693     		str	r3, [sp, #24]
 1174 0018 0793     		str	r3, [sp, #28]
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1175              		.loc 1 169 3 is_stmt 1 view .LVU329
 1176              	.LBB12:
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1177              		.loc 1 169 3 view .LVU330
 1178 001a 0193     		str	r3, [sp, #4]
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1179              		.loc 1 169 3 view .LVU331
 1180 001c 1F4A     		ldr	r2, .L75
 1181 001e 116C     		ldr	r1, [r2, #64]
 1182 0020 41F08051 		orr	r1, r1, #268435456
 1183 0024 1164     		str	r1, [r2, #64]
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1184              		.loc 1 169 3 view .LVU332
 1185 0026 126C     		ldr	r2, [r2, #64]
 1186 0028 02F08052 		and	r2, r2, #268435456
 1187 002c 0192     		str	r2, [sp, #4]
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1188              		.loc 1 169 3 view .LVU333
 1189 002e 019A     		ldr	r2, [sp, #4]
 1190              	.LBE12:
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1191              		.loc 1 169 3 view .LVU334
 170:Core/Src/main.c **** 
 1192              		.loc 1 170 3 view .LVU335
 1193              	.LBB13:
 170:Core/Src/main.c **** 
 1194              		.loc 1 170 3 view .LVU336
 1195 0030 0293     		str	r3, [sp, #8]
 170:Core/Src/main.c **** 
 1196              		.loc 1 170 3 view .LVU337
 1197 0032 1B4A     		ldr	r2, .L75+4
 1198 0034 1168     		ldr	r1, [r2]
 1199 0036 41F48041 		orr	r1, r1, #16384
 1200 003a 1160     		str	r1, [r2]
 170:Core/Src/main.c **** 
 1201              		.loc 1 170 3 view .LVU338
 1202 003c 1268     		ldr	r2, [r2]
 1203 003e 02F48042 		and	r2, r2, #16384
 1204 0042 0292     		str	r2, [sp, #8]
 170:Core/Src/main.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 50


 1205              		.loc 1 170 3 view .LVU339
 1206 0044 029A     		ldr	r2, [sp, #8]
 1207              	.LBE13:
 170:Core/Src/main.c **** 
 1208              		.loc 1 170 3 view .LVU340
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1209              		.loc 1 175 3 view .LVU341
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1210              		.loc 1 175 36 is_stmt 0 view .LVU342
 1211 0046 0222     		movs	r2, #2
 1212 0048 0892     		str	r2, [sp, #32]
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1213              		.loc 1 176 3 is_stmt 1 view .LVU343
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1214              		.loc 1 176 30 is_stmt 0 view .LVU344
 1215 004a 0121     		movs	r1, #1
 1216 004c 0B91     		str	r1, [sp, #44]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1217              		.loc 1 177 3 is_stmt 1 view .LVU345
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1218              		.loc 1 177 41 is_stmt 0 view .LVU346
 1219 004e 1021     		movs	r1, #16
 1220 0050 0C91     		str	r1, [sp, #48]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1221              		.loc 1 178 3 is_stmt 1 view .LVU347
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1222              		.loc 1 178 34 is_stmt 0 view .LVU348
 1223 0052 0E92     		str	r2, [sp, #56]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1224              		.loc 1 179 3 is_stmt 1 view .LVU349
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1225              		.loc 1 179 35 is_stmt 0 view .LVU350
 1226 0054 0F93     		str	r3, [sp, #60]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 1227              		.loc 1 180 3 is_stmt 1 view .LVU351
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 64;
 1228              		.loc 1 180 30 is_stmt 0 view .LVU352
 1229 0056 0823     		movs	r3, #8
 1230 0058 1093     		str	r3, [sp, #64]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1231              		.loc 1 181 3 is_stmt 1 view .LVU353
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1232              		.loc 1 181 30 is_stmt 0 view .LVU354
 1233 005a 4023     		movs	r3, #64
 1234 005c 1193     		str	r3, [sp, #68]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1235              		.loc 1 182 3 is_stmt 1 view .LVU355
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1236              		.loc 1 182 30 is_stmt 0 view .LVU356
 1237 005e 1292     		str	r2, [sp, #72]
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1238              		.loc 1 183 3 is_stmt 1 view .LVU357
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1239              		.loc 1 183 30 is_stmt 0 view .LVU358
 1240 0060 0423     		movs	r3, #4
 1241 0062 1393     		str	r3, [sp, #76]
 184:Core/Src/main.c ****   {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 51


 1242              		.loc 1 184 3 is_stmt 1 view .LVU359
 184:Core/Src/main.c ****   {
 1243              		.loc 1 184 7 is_stmt 0 view .LVU360
 1244 0064 08A8     		add	r0, sp, #32
 1245 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1246              	.LVL77:
 184:Core/Src/main.c ****   {
 1247              		.loc 1 184 6 discriminator 1 view .LVU361
 1248 006a 90B9     		cbnz	r0, .L73
 191:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1249              		.loc 1 191 3 is_stmt 1 view .LVU362
 191:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1250              		.loc 1 191 31 is_stmt 0 view .LVU363
 1251 006c 0F23     		movs	r3, #15
 1252 006e 0393     		str	r3, [sp, #12]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1253              		.loc 1 192 3 is_stmt 1 view .LVU364
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1254              		.loc 1 192 34 is_stmt 0 view .LVU365
 1255 0070 0221     		movs	r1, #2
 1256 0072 0491     		str	r1, [sp, #16]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 1257              		.loc 1 193 3 is_stmt 1 view .LVU366
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 1258              		.loc 1 193 35 is_stmt 0 view .LVU367
 1259 0074 0023     		movs	r3, #0
 1260 0076 0593     		str	r3, [sp, #20]
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1261              		.loc 1 194 3 is_stmt 1 view .LVU368
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1262              		.loc 1 194 36 is_stmt 0 view .LVU369
 1263 0078 4FF4C053 		mov	r3, #6144
 1264 007c 0693     		str	r3, [sp, #24]
 195:Core/Src/main.c **** 
 1265              		.loc 1 195 3 is_stmt 1 view .LVU370
 195:Core/Src/main.c **** 
 1266              		.loc 1 195 36 is_stmt 0 view .LVU371
 1267 007e 4FF48053 		mov	r3, #4096
 1268 0082 0793     		str	r3, [sp, #28]
 197:Core/Src/main.c ****   {
 1269              		.loc 1 197 3 is_stmt 1 view .LVU372
 197:Core/Src/main.c ****   {
 1270              		.loc 1 197 7 is_stmt 0 view .LVU373
 1271 0084 03A8     		add	r0, sp, #12
 1272 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1273              	.LVL78:
 197:Core/Src/main.c ****   {
 1274              		.loc 1 197 6 discriminator 1 view .LVU374
 1275 008a 20B9     		cbnz	r0, .L74
 201:Core/Src/main.c **** 
 1276              		.loc 1 201 1 view .LVU375
 1277 008c 15B0     		add	sp, sp, #84
 1278              		.cfi_remember_state
 1279              		.cfi_def_cfa_offset 4
 1280              		@ sp needed
 1281 008e 5DF804FB 		ldr	pc, [sp], #4
 1282              	.L73:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 52


 1283              		.cfi_restore_state
 186:Core/Src/main.c ****   }
 1284              		.loc 1 186 5 is_stmt 1 view .LVU376
 1285 0092 FFF7FEFF 		bl	Error_Handler
 1286              	.LVL79:
 1287              	.L74:
 199:Core/Src/main.c ****   }
 1288              		.loc 1 199 5 view .LVU377
 1289 0096 FFF7FEFF 		bl	Error_Handler
 1290              	.LVL80:
 1291              	.L76:
 1292 009a 00BF     		.align	2
 1293              	.L75:
 1294 009c 00380240 		.word	1073887232
 1295 00a0 00700040 		.word	1073770496
 1296              		.cfi_endproc
 1297              	.LFE139:
 1299              		.section	.text.main,"ax",%progbits
 1300              		.align	1
 1301              		.global	main
 1302              		.syntax unified
 1303              		.thumb
 1304              		.thumb_func
 1306              	main:
 1307              	.LFB138:
 109:Core/Src/main.c **** 
 1308              		.loc 1 109 1 view -0
 1309              		.cfi_startproc
 1310              		@ Volatile: function does not return.
 1311              		@ args = 0, pretend = 0, frame = 0
 1312              		@ frame_needed = 0, uses_anonymous_args = 0
 1313 0000 08B5     		push	{r3, lr}
 1314              		.cfi_def_cfa_offset 8
 1315              		.cfi_offset 3, -8
 1316              		.cfi_offset 14, -4
 118:Core/Src/main.c **** 
 1317              		.loc 1 118 3 view .LVU379
 1318 0002 FFF7FEFF 		bl	HAL_Init
 1319              	.LVL81:
 125:Core/Src/main.c **** 
 1320              		.loc 1 125 3 view .LVU380
 1321 0006 FFF7FEFF 		bl	SystemClock_Config
 1322              	.LVL82:
 132:Core/Src/main.c ****   MX_CAN1_Init();
 1323              		.loc 1 132 3 view .LVU381
 1324 000a FFF7FEFF 		bl	MX_GPIO_Init
 1325              	.LVL83:
 133:Core/Src/main.c ****   MX_CAN2_Init();
 1326              		.loc 1 133 3 view .LVU382
 1327 000e FFF7FEFF 		bl	MX_CAN1_Init
 1328              	.LVL84:
 134:Core/Src/main.c ****   MX_USART3_UART_Init();
 1329              		.loc 1 134 3 view .LVU383
 1330 0012 FFF7FEFF 		bl	MX_CAN2_Init
 1331              	.LVL85:
 135:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1332              		.loc 1 135 3 view .LVU384
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 53


 1333 0016 FFF7FEFF 		bl	MX_USART3_UART_Init
 1334              	.LVL86:
 138:Core/Src/main.c **** 
 1335              		.loc 1 138 3 view .LVU385
 1336 001a 0C4B     		ldr	r3, .L80
 1337 001c 1A68     		ldr	r2, [r3]
 1338 001e D368     		ldr	r3, [r2, #12]
 1339 0020 43F02003 		orr	r3, r3, #32
 1340 0024 D360     		str	r3, [r2, #12]
 1341              	.L78:
 144:Core/Src/main.c ****   {
 1342              		.loc 1 144 3 view .LVU386
 147:Core/Src/main.c ****     HAL_Delay(2000);
 1343              		.loc 1 147 5 view .LVU387
 1344 0026 FFF7FEFF 		bl	CAN1_SendRequest
 1345              	.LVL87:
 148:Core/Src/main.c ****     PrintCANLog(0x712, CAN1_DATA_RX);
 1346              		.loc 1 148 5 view .LVU388
 1347 002a 4FF4FA60 		mov	r0, #2000
 1348 002e FFF7FEFF 		bl	HAL_Delay
 1349              	.LVL88:
 149:Core/Src/main.c ****     SID_22_Practice();
 1350              		.loc 1 149 5 view .LVU389
 1351 0032 0749     		ldr	r1, .L80+4
 1352 0034 40F21270 		movw	r0, #1810
 1353 0038 FFF7FEFF 		bl	PrintCANLog
 1354              	.LVL89:
 150:Core/Src/main.c ****     HAL_Delay(2000);
 1355              		.loc 1 150 5 view .LVU390
 1356 003c FFF7FEFF 		bl	SID_22_Practice
 1357              	.LVL90:
 151:Core/Src/main.c **** 
 1358              		.loc 1 151 5 discriminator 1 view .LVU391
 1359 0040 4FF4FA60 		mov	r0, #2000
 1360 0044 FFF7FEFF 		bl	HAL_Delay
 1361              	.LVL91:
 144:Core/Src/main.c ****   {
 1362              		.loc 1 144 9 view .LVU392
 1363 0048 EDE7     		b	.L78
 1364              	.L81:
 1365 004a 00BF     		.align	2
 1366              	.L80:
 1367 004c 00000000 		.word	huart3
 1368 0050 00000000 		.word	CAN1_DATA_RX
 1369              		.cfi_endproc
 1370              	.LFE138:
 1372              		.global	bufsend
 1373              		.section	.data.bufsend,"aw"
 1374              		.align	2
 1377              	bufsend:
 1378 0000 5858583A 		.ascii	"XXX: D1 D2 D3 D4 D5 D6 D7 D8  "
 1378      20443120 
 1378      44322044 
 1378      33204434 
 1378      20443520 
 1379              		.global	TimeStamp
 1380              		.section	.bss.TimeStamp,"aw",%nobits
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 54


 1381              		.align	2
 1384              	TimeStamp:
 1385 0000 00000000 		.space	4
 1386              		.global	REQ_1BYTE_DATA
 1387              		.section	.bss.REQ_1BYTE_DATA,"aw",%nobits
 1390              	REQ_1BYTE_DATA:
 1391 0000 00       		.space	1
 1392              		.global	REQ_BUFFER
 1393              		.section	.bss.REQ_BUFFER,"aw",%nobits
 1394              		.align	2
 1397              	REQ_BUFFER:
 1398 0000 00000000 		.space	4096
 1398      00000000 
 1398      00000000 
 1398      00000000 
 1398      00000000 
 1399              		.global	NumBytesReq
 1400              		.section	.bss.NumBytesReq,"aw",%nobits
 1401              		.align	1
 1404              	NumBytesReq:
 1405 0000 0000     		.space	2
 1406              		.global	CAN2_DATA_RX
 1407              		.section	.bss.CAN2_DATA_RX,"aw",%nobits
 1408              		.align	2
 1411              	CAN2_DATA_RX:
 1412 0000 00000000 		.space	8
 1412      00000000 
 1413              		.global	CAN2_DATA_TX
 1414              		.section	.bss.CAN2_DATA_TX,"aw",%nobits
 1415              		.align	2
 1418              	CAN2_DATA_TX:
 1419 0000 00000000 		.space	8
 1419      00000000 
 1420              		.global	CAN1_DATA_RX
 1421              		.section	.bss.CAN1_DATA_RX,"aw",%nobits
 1422              		.align	2
 1425              	CAN1_DATA_RX:
 1426 0000 00000000 		.space	8
 1426      00000000 
 1427              		.global	CAN1_DATA_TX
 1428              		.section	.bss.CAN1_DATA_TX,"aw",%nobits
 1429              		.align	2
 1432              	CAN1_DATA_TX:
 1433 0000 00000000 		.space	8
 1433      00000000 
 1434              		.global	CAN2_pTxMailbox
 1435              		.section	.bss.CAN2_pTxMailbox,"aw",%nobits
 1436              		.align	2
 1439              	CAN2_pTxMailbox:
 1440 0000 00000000 		.space	4
 1441              		.global	CAN1_pTxMailbox
 1442              		.section	.bss.CAN1_pTxMailbox,"aw",%nobits
 1443              		.align	2
 1446              	CAN1_pTxMailbox:
 1447 0000 00000000 		.space	4
 1448              		.global	CAN2_sFilterConfig
 1449              		.section	.bss.CAN2_sFilterConfig,"aw",%nobits
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 55


 1450              		.align	2
 1453              	CAN2_sFilterConfig:
 1454 0000 00000000 		.space	40
 1454      00000000 
 1454      00000000 
 1454      00000000 
 1454      00000000 
 1455              		.global	CAN2_pHeaderRx
 1456              		.section	.bss.CAN2_pHeaderRx,"aw",%nobits
 1457              		.align	2
 1460              	CAN2_pHeaderRx:
 1461 0000 00000000 		.space	28
 1461      00000000 
 1461      00000000 
 1461      00000000 
 1461      00000000 
 1462              		.global	CAN2_pHeader
 1463              		.section	.bss.CAN2_pHeader,"aw",%nobits
 1464              		.align	2
 1467              	CAN2_pHeader:
 1468 0000 00000000 		.space	24
 1468      00000000 
 1468      00000000 
 1468      00000000 
 1468      00000000 
 1469              		.global	CAN1_sFilterConfig
 1470              		.section	.bss.CAN1_sFilterConfig,"aw",%nobits
 1471              		.align	2
 1474              	CAN1_sFilterConfig:
 1475 0000 00000000 		.space	40
 1475      00000000 
 1475      00000000 
 1475      00000000 
 1475      00000000 
 1476              		.global	CAN1_pHeaderRx
 1477              		.section	.bss.CAN1_pHeaderRx,"aw",%nobits
 1478              		.align	2
 1481              	CAN1_pHeaderRx:
 1482 0000 00000000 		.space	28
 1482      00000000 
 1482      00000000 
 1482      00000000 
 1482      00000000 
 1483              		.global	CAN1_pHeader
 1484              		.section	.bss.CAN1_pHeader,"aw",%nobits
 1485              		.align	2
 1488              	CAN1_pHeader:
 1489 0000 00000000 		.space	24
 1489      00000000 
 1489      00000000 
 1489      00000000 
 1489      00000000 
 1490              		.global	uart3_receive
 1491              		.section	.bss.uart3_receive,"aw",%nobits
 1494              	uart3_receive:
 1495 0000 00       		.space	1
 1496              		.global	huart3
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 56


 1497              		.section	.bss.huart3,"aw",%nobits
 1498              		.align	2
 1501              	huart3:
 1502 0000 00000000 		.space	72
 1502      00000000 
 1502      00000000 
 1502      00000000 
 1502      00000000 
 1503              		.global	hcan2
 1504              		.section	.bss.hcan2,"aw",%nobits
 1505              		.align	2
 1508              	hcan2:
 1509 0000 00000000 		.space	40
 1509      00000000 
 1509      00000000 
 1509      00000000 
 1509      00000000 
 1510              		.global	hcan1
 1511              		.section	.bss.hcan1,"aw",%nobits
 1512              		.align	2
 1515              	hcan1:
 1516 0000 00000000 		.space	40
 1516      00000000 
 1516      00000000 
 1516      00000000 
 1516      00000000 
 1517              		.text
 1518              	.Letext0:
 1519              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1520              		.file 4 "C:/Users/PC/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools
 1521              		.file 5 "C:/Users/PC/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools
 1522              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1523              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1524              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1525              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1526              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1527              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1528              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1529              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1530              		.file 14 "Core/Inc/CAN_Communication.h"
 1531              		.file 15 "Core/Inc/UDS.h"
 1532              		.file 16 "Core/Inc/main.h"
 1533              		.file 17 "C:/Users/PC/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tool
 1534              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1535              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1536              		.file 20 "<built-in>"
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 57


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:188    .text.MX_GPIO_Init:000000c4 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:195    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:201    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:229    .text.HAL_UART_RxCpltCallback:00000014 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1404   .bss.NumBytesReq:00000000 NumBytesReq
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1390   .bss.REQ_1BYTE_DATA:00000000 REQ_1BYTE_DATA
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1397   .bss.REQ_BUFFER:00000000 REQ_BUFFER
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:236    .text.MX_CAN1_Setup:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:242    .text.MX_CAN1_Setup:00000000 MX_CAN1_Setup
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:307    .text.MX_CAN1_Setup:0000003c $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1474   .bss.CAN1_sFilterConfig:00000000 CAN1_sFilterConfig
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1515   .bss.hcan1:00000000 hcan1
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:313    .text.MX_CAN2_Setup:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:319    .text.MX_CAN2_Setup:00000000 MX_CAN2_Setup
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:384    .text.MX_CAN2_Setup:0000003c $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1453   .bss.CAN2_sFilterConfig:00000000 CAN2_sFilterConfig
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1508   .bss.hcan2:00000000 hcan2
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:390    .text.USART3_SendString:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:396    .text.USART3_SendString:00000000 USART3_SendString
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:439    .text.USART3_SendString:00000020 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1501   .bss.huart3:00000000 huart3
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:444    .rodata.PrintCANLog.str1.4:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:463    .text.PrintCANLog:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:469    .text.PrintCANLog:00000000 PrintCANLog
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:630    .text.PrintCANLog:000000b0 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1384   .bss.TimeStamp:00000000 TimeStamp
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1377   .data.bufsend:00000000 bufsend
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:642    .rodata.HAL_CAN_RxFifo0MsgPendingCallback.str1.4:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:649    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:655    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:754    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000064 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1425   .bss.CAN1_DATA_RX:00000000 CAN1_DATA_RX
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1481   .bss.CAN1_pHeaderRx:00000000 CAN1_pHeaderRx
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1411   .bss.CAN2_DATA_RX:00000000 CAN2_DATA_RX
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1460   .bss.CAN2_pHeaderRx:00000000 CAN2_pHeaderRx
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:766    .text.calc_crc:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:772    .text.calc_crc:00000000 calc_crc
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:882    .text.Error_Handler:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:888    .text.Error_Handler:00000000 Error_Handler
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:920    .text.MX_CAN1_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:925    .text.MX_CAN1_Init:00000000 MX_CAN1_Init
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:993    .text.MX_CAN1_Init:0000003c $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:999    .text.MX_CAN2_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1004   .text.MX_CAN2_Init:00000000 MX_CAN2_Init
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1072   .text.MX_CAN2_Init:0000003c $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1078   .text.MX_USART3_UART_Init:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1083   .text.MX_USART3_UART_Init:00000000 MX_USART3_UART_Init
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1137   .text.MX_USART3_UART_Init:0000002c $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1143   .text.SystemClock_Config:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1149   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1294   .text.SystemClock_Config:0000009c $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1300   .text.main:00000000 $t
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1306   .text.main:00000000 main
ARM GAS  C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s 			page 58


C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1367   .text.main:0000004c $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1374   .data.bufsend:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1381   .bss.TimeStamp:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1391   .bss.REQ_1BYTE_DATA:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1394   .bss.REQ_BUFFER:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1401   .bss.NumBytesReq:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1408   .bss.CAN2_DATA_RX:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1418   .bss.CAN2_DATA_TX:00000000 CAN2_DATA_TX
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1415   .bss.CAN2_DATA_TX:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1422   .bss.CAN1_DATA_RX:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1432   .bss.CAN1_DATA_TX:00000000 CAN1_DATA_TX
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1429   .bss.CAN1_DATA_TX:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1439   .bss.CAN2_pTxMailbox:00000000 CAN2_pTxMailbox
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1436   .bss.CAN2_pTxMailbox:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1446   .bss.CAN1_pTxMailbox:00000000 CAN1_pTxMailbox
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1443   .bss.CAN1_pTxMailbox:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1450   .bss.CAN2_sFilterConfig:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1457   .bss.CAN2_pHeaderRx:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1467   .bss.CAN2_pHeader:00000000 CAN2_pHeader
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1464   .bss.CAN2_pHeader:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1471   .bss.CAN1_sFilterConfig:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1478   .bss.CAN1_pHeaderRx:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1488   .bss.CAN1_pHeader:00000000 CAN1_pHeader
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1485   .bss.CAN1_pHeader:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1494   .bss.uart3_receive:00000000 uart3_receive
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1495   .bss.uart3_receive:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1498   .bss.huart3:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1505   .bss.hcan2:00000000 $d
C:\Users\PC\AppData\Local\Temp\cc6AgQaa.s:1512   .bss.hcan1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_UART_Transmit
sprintf
HAL_CAN_GetRxMessage
HAL_CAN_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
CAN1_SendRequest
HAL_Delay
SID_22_Practice
